*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                17:10:16 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:10:03 o'clock"
);
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Post Grouping Log
Date:                02 June 2018
Time:                17:10:03 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2FJRQBY "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2FJRQBY new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:10:03 o'clock"
);
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMOUTPUT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:10:03 o'clock"
);
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
3782839    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3782840    set EMWS1.Tree2_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree2_EMINFO;
3782841    where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
MPRINT(EM_DIAGRAM):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
3782842    call symput('EMGROUPMODE', strip(key));
MPRINT(EM_DIAGRAM):   call symput('EMGROUPMODE', strip(key));
3782843    call symput('EMGROUPID', strip(data));
MPRINT(EM_DIAGRAM):   call symput('EMGROUPID', strip(data));
3782844    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE2_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3782845    data WORK.M2F3NW3M;
MPRINT(EM_DIAGRAM):    data WORK.M2F3NW3M;
3782846    set WORK.M2F3NW3M;
MPRINT(EM_DIAGRAM):   set WORK.M2F3NW3M;
3782847    where upcase(NAME) in(
3782848    "DEPVAR"
3782849    );
MPRINT(EM_DIAGRAM):   where upcase(NAME) in( "DEPVAR" );
3782850    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M2F3NW3M.
      WHERE UPCASE(NAME)='DEPVAR';
NOTE: The data set WORK.M2F3NW3M has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3782851    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Tree2_TRAIN EMWS1.Tree2_TRAIN
EMWS1.Tree2_TRAIN EMWS1.Tree2_TRAIN EMWS1 Tree2_TRAIN
EMWS1.Tree2_TRAIN EMWS1.Tree2_TRAIN
EMWS1.Tree2_TRAIN EMWS1.Tree2_TRAIN EMWS1 Tree2_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Tree2_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Tree2_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
3782880    data WORK.EndGrp2_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp2_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
3782881    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
3782882    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
3782882  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
3782882  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
3782883       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
3782883  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
3782883  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
3782884    set EMWS1.TREE2_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.TREE2_DEPVAR_DM( where=(_TYPE_="TARGET"));
3782885    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
3782886    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
3782887    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
3782888    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
3782889    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
3782890    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
3782891    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
3782892    end;
MPRINT(EM_DIAGRAM):   end;
3782893    output;
MPRINT(EM_DIAGRAM):   output;
3782894    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE2_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP2_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
3782895    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3782896    proc print data=WORK.EndGrp2_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp2_EVENT noobs label;
3782897    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
3782898    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3782899    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
3782900    run;
 
NOTE: There were 1 observations read from the data set WORK.ENDGRP2_EVENT.
NOTE: The PROCEDURE PRINT printed page 2466.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3782901    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
3782902    proc print data = EMWS1.Tree2_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Tree2_DepVar_DM noobs label;
3782903    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
3782904    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
3782905    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
3782905  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
3782905  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
3782906    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3782907    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
3782908    run;
 
NOTE: There were 7 observations read from the data set EMWS1.TREE2_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 2467.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3782909    title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp2: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE
or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp2: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp2: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1
8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=334;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13705375461633;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=2103;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86294624538366;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree2_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3783372    %let EMEXCEPTIONSTRING=;
3783373    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3783374    * POSTLOOP: EndGrp2;
MPRINT(EM_DIAGRAM):   * POSTLOOP: EndGrp2;
3783375    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3783376    %let EM_ACTION = POSTLOOP;
3783377    %let syscc = 0;
3783378    %macro main;
3783379       %if %upcase(&EM_ACTION) = TRAIN %then %do;
3783380
3783381           filename temp catalog 'sashelp.emutil.endgp_train.source';
3783382           %include temp;
3783383           filename temp;
3783384
3783385           %train;
3783386
3783387       %end;
3783388       %else
3783389          %if %upcase(&EM_ACTION) = SCORE %then %do;
3783390
3783391           filename temp catalog 'sashelp.emutil.endgp_score.source';
3783392           %include temp;
3783393           filename temp;
3783394
3783395           %score;
3783396       %end;
3783397       %else
3783398       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
3783399
3783400           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
3783401           %include temp;
3783402           filename temp;
3783403
3783404           %postloop;
3783405
3783406       %end;
3783407
3783408       %doendm:
3783409    %mend main;
3783410
3783411    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_postloop.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_POSTLOOP.SOURCE.
3783412   +%macro scoreTables(data=, out=, scoreref=, prescore=);
3783414   +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW)))
3783414  !+%then %do;
3783415   +       data &out / view=&out;
3783416   +          set &data
3783419   +          %if "&prescore" = "Y" %then %do;
3783420   +              (obs=1)
3783421   +          %end;
3783423   +          ;
3783425   +       %let fexist = %sysfunc(fexist(&scoreref));
3783426   +       %if &fexist %then %do;
3783427   +          %inc &scoreref;
3783428   +       %end;
3783430   +       %if "&prescore" eq "Y" %then %do;
3783431   +          drop I_: R_:;
3783432   +       %end;
3783434   +       run;
3783435   +   %end;
3783437   +%mend scoretables;
3783439   +%macro postboostbag(groupid=, type=);
3783440   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
3783441   +   data _null_;
3783442   +      retain index 0;
3783443   +      set &infoDs;
3783444   +      call symput('targetname', strip(_target_));
3783445   +   run;
3783447   +   data _null_;
3783448   +      set &em_import_data_eminfo;
3783449   +      where key in('MODEL', 'DECMETA') and TARGET="&targetname";
3783450   +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
3783451   +      else call symput('MODELID', strip(data));
3783452   +   run;
3783454   +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
3783455   +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
3783457   +   filename loopflow "&em_user_loopflowcode";
3783458   +   filename looppub "&em_user_looppubcode";
3783460   +   filename emflow "&EM_FILE_EMFLOWSCORECODE";
3783461   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
3783463   +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
3783464   +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
3783466   +   filename loopflow;
3783467   +   filename looppub;
3783468   +   filename emflow;
3783469   +   filename empub;
3783471   +   %let EMGROUPASSMT = Y;
3783473   +   %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y, DECSCORECODE=Y,
3783473  !+FITSTATISTICS=N, CLASSIFICATION=Y, RESIDUALS=Y, PREDICTED=Y);
3783475   +   %em_getname(key=emoutfit, type=DATA);
3783476   +   %em_getname(key=emoutfit_loop, type=DATA);
3783478   +   data &em_user_emoutfit;
3783479   +      set &em_user_emoutfit_loop end=eof;
3783480   +      drop _LOOP_ _WHERE_;
3783481   +      if eof then output;
3783482   +   run;
3783484   +%mend postboostbag;
3783486   +%macro postgroup(groupid=, type=);
3783487   +   filename emflow "&EM_FILE_EMFLOWSCORECODE";
3783488   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
3783490   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
3783491   +   %let _XValidation = 0;
3783493   +   data _null_;
3783494   +      retain index 0;
3783495   +      set &infoDs end=eof;
3783496   +      index + 1;
3783497   +      call symput('loopwhere'!!strip(put(index, best.)), tranwrd(strip(_wheredesc_),
3783497  !+ '"', '""'));
3783498   +      call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
3783499   +      if eof and substr(_WHERE_, 1, 2)='^(' then
3783500   +         call symput('_XValidation', '1');
3783501   +   run;
3783503   +   %let grouptarget=;
3783504   +   /* Looping Over Groups Only.  Retrieve targets from EMINFO */
3783505   +   %if "&looptarget1" eq "" %then %do;
3783506   +      data _null_;
3783507   +         set &em_import_data_eminfo;
3783508   +         where key in('MODEL');
3783509   +         call symput('grouptarget', strip(symget('grouptarget'))!!'
3783509  !+'!!strip(target));
3783510   +      run;
3783511   +   %end;
3783513   +   %do j=1 %to &emloopnumber;
3783514   +       %let EnsembleIndex=0;
3783515   +       data _null_;
3783516   +          retain index 0 ensembleIndex 0;
3783517   +          set &em_user_path end=eof;
3783518   +          where LOOPID=&j;
3783519   +          if nodelabel = "&groupid" or index then do;
3783520   +             index + 1;
3783521   +             call symput('loopnode'!!strip(put(index, best.)),  strip(nodelabel));
3783522   +             call symput('loopdesc'!!strip(put(index, best.)),  strip(component));
3783523   +             call symput('loopaccum'!!strip(put(index, best.)),
3783523  !+strip(accumulatedScoreCode));
3783524   +          end;
3783525   +          if component='Ensemble' then ensembleIndex = index;
3783526   +          if eof then do;
3783527   +             call symput('loopcodenum', strip(put(index, best.)));
3783528   +             call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
3783529   +          end;
3783530   +       run;
3783532   +       %do i = 1 %to &loopcodenum;
3783533   +           %let fsourceEntry =
3783533  !+&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
3783534   +           %let psourceEntry =
3783534  !+&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
3783536   +           %if (&&loopnode&i eq &em_nodeid ) or
3783537   +               ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or
3783537  !+&i>&ensembleIndex or &i=&ensembleIndex) ) %then %do;
3783539   +               data _null_;
3783540   +                  file emflow mod;
3783541   +                  put "&em_codebar;";
3783542   +                  put "* &&loopnode&i: &&loopdesc&i;" ;
3783543   +                  put "* User: &sysuserid;";
3783544   +                  put "* Date: &sysdate: &systime;";
3783545   +                  %if "&&loopwhere&j" ne "" %then %do;
3783546   +                      put "* Group: &&loopwhere&j;";
3783547   +                  %end;
3783548   +                  %if "&&looptarget&j" ne "" %then %do;
3783549   +                       put "* Target: &&looptarget&j;";
3783550   +                  %end;
3783551   +                  put "&em_codebar ;";
3783552   +               run;
3783553   +               data _null_;
3783554   +                   file empub mod;
3783555   +                   put "&em_codebar ;";
3783556   +                   put "* &&loopnode&i: &&loopdesc&i;" ;
3783557   +                   put "* User: &sysuserid;";
3783558   +                   put "* Date: &sysdate: &systime;";
3783559   +                   %if "&&loopwhere&j" ne "" %then %do;
3783560   +                       put "* Group: &&loopwhere&j;";
3783561   +                   %end;
3783562   +                   %if "&&looptarget&j" ne "" %then %do;
3783563   +                       put "* Target: &&looptarget&j;";
3783564   +                   %end;
3783565   +                   put "&em_codebar;";
3783566   +               run;
3783567   +           %end;
3783569   +           %if ("&&loopnode&i" ne "&em_nodeid" ) %then %do;
3783570   +               %if (&ensembleIndex = 0) or (&i=1 or &i>&ensembleIndex or
3783570  !+&i=&ensembleIndex) %then %do;
3783571   +                   %if "&&loopnode&i" eq "&groupid" and "&_XValidation" eq "1" %then
3783571  !+ %do;
3783572   +                       filename y catalog "&psourceEntry";
3783573   +                       %em_copyfile(infref=y, outfref=emflow, append=Y);
3783574   +                       filename y;
3783575   +                   %end;
3783576   +                   %else %do;
3783577   +                       filename x catalog "&fsourceEntry";
3783578   +                       %em_copyfile(infref=x, outfref=emflow, append=Y);
3783579   +                       filename x;
3783580   +                   %end;
3783582   +                   filename y catalog "&psourceEntry";
3783583   +                   %em_copyfile(infref=y, outfref=empub, append=Y);
3783584   +                   filename y;
3783585   +               %end;
3783586   +           %end;
3783587   +           %else %do;
3783588   +              %if "&&loopwhere&j" ne "" %then %do;
3783589   +                  data _null_;
3783590   +                     file emflow mod;
3783591   +                     put 'end;';
3783592   +                  run;
3783593   +                  data _null_;
3783594   +                     file empub mod;
3783595   +                     put 'end;';
3783596   +                  run;
3783597   +               %end;
3783598   +           %end;
3783599   +       %end;
3783600   +   %end;
3783601   +   filename emflow;
3783602   +   filename empub;
3783604   +   /* Stratify Model Need to Recompute All Assessment Reports */
3783605   +   %if "&grouptarget" eq "" %then %do;
3783606   +       %let assessTarget=;
3783607   +       %do j=1 %to &emloopnumber;
3783608   +           %let targetname = &&looptarget&j;
3783609   +           %if ^%index(&assesstarget, &targetname) and ("&targetname" ne "") %then
3783609  !+%do;
3783610   +               %let assesstarget = &assesstarget &targetname;
3783611   +               %let index = 1;
3783612   +               %do %while( %scan(%sysfunc(strip(&targetname)), &index) ne
3783612  !+%sysfunc(strip(&targetname)));
3783613   +                   %let index = %eval(&index + 1);
3783614   +               %end;
3783615   +               %let targetlevel = %scan(%sysfunc(strip(%em_target_level)), &index
3783615  !+,%str( ));
3783617   +               %if "&targetlevel" ne "INTERVAL" %then
3783618   +                   %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y,
3783618  !+DECSCORECODE=Y, FITSTATISTICS=Y, CLASSIFICATION=Y, PREDICTED=Y);
3783619   +               %else
3783620   +                   %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y,
3783620  !+DECSCORECODE=Y, FITSTATISTICS=Y, RESIDUALS=Y, PREDICTED=Y);
3783621   +           %end;
3783622   +       %end;
3783623   +   %end;
3783624   +   %else %do;
3783625   +       %do i=1 %to &em_num_target;
3783626   +           %let targetname = %scan(%em_target, &i, %str( )) ;
3783627   +           %let targetlevel = %scan(%sysfunc(strip(%em_target_level)), &i ,%str( ));
3783629   +           %if %sysfunc(indexw(&grouptarget, &targetname)) %then %do;
3783630   +              %if "&targetlevel" ne "INTERVAL" %then
3783631   +                  %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y,
3783631  !+DECSCORECODE=Y, FITSTATISTICS=Y, CLASSIFICATION=Y, PREDICTED=Y);
3783632   +              %else
3783633   +                 %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y,
3783633  !+DECSCORECODE=Y, FITSTATISTICS=Y, RESIDUALS=Y, PREDICTED=Y);
3783634   +           %end;
3783635   +           %else %do;
3783636   +               %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=N,
3783636  !+DECSCORECODE=N, FITSTATISTICS=N, RESIDUALS=N, PREDICTED=N);
3783637   +           %end;
3783638   +       %end;
3783639   +   %end;
3783640   +   %let EMGROUPASSMT = N;
3783641   +%mend postgroup;
3783643   +%macro posttarget(groupid=, type=);
3783644   +   filename emflow "&EM_FILE_EMFLOWSCORECODE";
3783645   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
3783647   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
3783648   +   data _null_;
3783649   +      retain index 0;
3783650   +      set &infoDs end=eof;
3783651   +      index + 1;
3783652   +      call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
3783653   +   run;
3783655   +   %do j=1 %to &emloopnumber;
3783656   +       %let EnsembleIndex=0;
3783657   +       data _null_;
3783658   +          retain index 0 ensembleIndex 0;
3783659   +          set &em_user_path end=eof;
3783660   +          where LOOPID=&j;
3783661   +          if nodelabel = "&groupid" or index then do;
3783662   +             index + 1;
3783663   +             call symput('loopnode'!!strip(put(index, best.)),  strip(nodelabel));
3783664   +             call symput('loopdesc'!!strip(put(index, best.)),  strip(component));
3783665   +             call symput('loopaccum'!!strip(put(index, best.)),
3783665  !+strip(accumulatedScoreCode));
3783666   +          end;
3783667   +          if component='Ensemble' then ensembleIndex = index;
3783668   +          if eof then do;
3783669   +             call symput('loopcodenum', strip(put(index, best.)));
3783670   +             call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
3783671   +          end;
3783672   +       run;
3783674   +       %do i = 1 %to &loopcodenum;
3783675   +           %let fsourceEntry =
3783675  !+&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
3783676   +           %let psourceEntry =
3783676  !+&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
3783678   +           %if (&&loopnode&i ne &em_nodeid ) and
3783679   +               ( (&ensembleIndex = 0) or (&i>=&ensembleIndex) ) %then %do;
3783680   +               data _null_;
3783681   +                  file emflow mod;
3783682   +                  put "&em_codebar;";
3783683   +                  put "* &&loopnode&i: &&loopdesc&i;" ;
3783684   +                  put "* User: &sysuserid;";
3783685   +                  put "* Date: &sysdate: &systime;";
3783686   +                  put "* Target: &&looptarget&j;";
3783687   +                  put "&em_codebar ;";
3783688   +               run;
3783689   +               data _null_;
3783690   +                  file empub mod;
3783691   +                  put "&em_codebar ;";
3783692   +                  put "* &&loopnode&i: &&loopdesc&i;" ;
3783693   +                  put "* User: &sysuserid;";
3783694   +                  put "* Date: &sysdate: &systime;";
3783695   +                  put "* Target: &&looptarget&j;";
3783696   +                  put "&em_codebar;";
3783697   +               run;
3783699   +               filename x catalog "&fsourceEntry";
3783700   +               %em_copyfile(infref=x, outfref=emflow, append=Y);
3783701   +               filename x;
3783703   +               filename y catalog "&psourceEntry";
3783704   +               %em_copyfile(infref=y, outfref=empub, append=Y);
3783705   +               filename y;
3783706   +           %end;
3783707   +       %end;
3783708   +   %end;
3783709   +   filename emflow;
3783710   +   filename empub;
3783712   +   %do j=1 %to &emloopnumber;
3783713   +       %let targetname = &&looptarget&j;
3783714   +       %let k = 1;
3783715   +       %do %while( %scan(%sysfunc(strip(&targetname)), &k) ne
3783715  !+%sysfunc(strip(&targetname)));
3783716   +           %let k = %eval(&k + 1);
3783717   +       %end;
3783718   +       %let targetlevel = %scan(%sysfunc(strip(%em_target_level)), &k ,%str( ));
3783719   +       %if "&targetlevel" ne "INTERVAL" %then
3783720   +           %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=N, DECSCORECODE=N,
3783720  !+FITSTATISTICS=N, CLASSIFICATION=N, PREDICTED=Y);
3783721   +       %else
3783722   +           %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=N, DECSCORECODE=N,
3783722  !+FITSTATISTICS=N, RESIDUALS=N, PREDICTED=Y);
3783723   +       %let EMGROUPASSMT = N;
3783724   +   %end;
3783726   +%mend posttarget;
3783728   +%macro postloop;
3783730   +   %if ^%symexist(em_import_data_eminfo) %then %goto doendpl;
3783732   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo))
3783732  !+%then %do;
3783733   +       %let emexceptionstring = nomodeltarget;
3783734   +       %goto doendpl;
3783735   +   %end;
3783737   +   %let targetName=;
3783738   +   %let endgrp_decmeta=;
3783740   +   data _null_;
3783741   +      set &em_import_data_eminfo;
3783742   +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
3783743   +      call symput('GROUPID',   strip(data));
3783744   +      call symput('LOOPTYPE', strip(key));
3783745   +   run;
3783747   +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
3783748   +   %include temp;
3783749   +   filename temp;
3783751   +   %em_getname(key=PATH, type=DATA);
3783753   +   %if ^%sysfunc(exist(&em_user_path)) %then %goto doendpl;
3783755   +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
3783757   +   %let gptrain=;
3783758   +   %let gpvalidate=;
3783759   +   %let gptest=;
3783761   +   data _null_;
3783762   +      set &groupImportDs;
3783763   +      select(upcase(port));
3783764   +          when('DATA')     call symput('gpTrain',    strip(dataset));
3783765   +          when('VALIDATE') call symput('gpValidate', strip(dataset));
3783766   +          when('TEST')     call symput('gpTest',     strip(dataset));
3783767   +       otherwise;
3783768   +      end;
3783769   +   run;
3783770   +   %let gpTrain =&em_lib..%sysfunc(strip(&gpTrain));
3783772   +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
3783772  !+%postboostbag(groupid=&groupid, type=&looptype);
3783773   +   %else
3783774   +   %if ("&looptype" eq "GROUPINFO") %then %postgroup(groupid=&groupid,
3783774  !+type=&looptype);
3783775   +   %else
3783776   +   %if ("&looptype" eq "TARGETINFO") %then %posttarget(groupid=&groupid,
3783776  !+type=&looptype);
3783778   +   %let deleteString = &em_nodeid._path;
3783780   +   proc sort data=&em_user_path nodupkey;
3783781   +      by nodelabel;
3783782   +   run;
3783783   +   %let loopnodenum=0;
3783784   +   data _null_;
3783785   +      retain index 0;
3783786   +      set &em_user_path end=eof;
3783787   +      if nodelabel = "&groupid" or index then do;
3783788   +         index + 1;
3783789   +         call symput('loopnode'!!strip(put(index, best.)),  strip(nodelabel));
3783790   +      end;
3783791   +      if eof then do;
3783792   +         call symput('loopnodenum', strip(put(index, best.)));
3783793   +      end;
3783794   +   run;
3783795   +   proc datasets lib=&em_lib nolist;
3783796   +      delete &deleteString;
3783797   +      delete
3783798   +      %do i = 1 %to &loopnodenum;
3783799   +          %let loopcatalog = %sysfunc(strip(&&loopnode&i))_LOOP;
3783800   +          %if %sysfunc(cexist(&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP)) %then
3783800  !+%do;
3783802   +              &loopcatalog
3783803   +          %end;
3783804   +          %if &i = &loopnodenum %then %do;
3783805   +              / mt=catalog;
3783806   +          %end;
3783807   +      %end;
3783808   +   run;
3783809   +   quit;
3783811   +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
3783813   +   %if "&gpTrain" ne "" and (("&looptype" eq "BOOSTINFO") or ("&looptype" eq
3783813  !+"BAGINFO")) %then %do;
3783815   +       %let targetType = ;
3783816   +       data _null_;
3783817   +          set &endgrp_decmeta;
3783818   +          where _TYPE_='TARGET';
3783819   +          call symput('TARGETTYPE', strip(level));
3783820   +       run;
3783822   +       filename empub "&EM_FILE_EMPUBLISHSCORECODE" MOD;
3783824   +       %scoreTables(data=&gpTrain,     out=&em_export_train,    scoreref=emflow,
3783824  !+prescore=Y);
3783826   +       %if &targetType ne 'INTERVAL' %then %do;
3783827   +           %makeClassificationVars(target=&target, data=&em_export_train,
3783827  !+decmeta=&endgrp_decmeta, publish=Y, fref=empub);
3783828   +       %end;
3783830   +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
3783832   +       %em_model(TARGET=&targetname, ASSESS=Y, DECSCORECODE=Y, FITSTATISTICS=Y,
3783832  !+CLASSIFICATION=Y, RESIDUALS=Y, PREDICTED=Y);
3783834   +       filename empub;
3783836   +   %end;
3783838   +   %if "&gpTrain" ne "" %then
3783839   +        %scoreTables(data=&gpTrain,     out=&em_export_train,    scoreref=emflow);
3783840   +   %if "&gpValidate" ne "" %then
3783841   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),
3783841  !+out=&em_export_validate, scoreref=emflow);
3783842   +   %if "&gpTest" ne "" %then
3783843   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),
3783843  !+out=&em_export_test,     scoreref=emflow);
3783845   +   filename emflow;
3783847   +   %doendpl:
3783849   +%mend postloop;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(POSTLOOP):   data _null_;
MPRINT(POSTLOOP):   set EMWS1.Tree2_EMINFO;
MPRINT(POSTLOOP):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO',
'INDEXINFO');
MPRINT(POSTLOOP):   call symput('GROUPID', strip(data));
MPRINT(POSTLOOP):   call symput('LOOPTYPE', strip(key));
MPRINT(POSTLOOP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE2_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTLOOP):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
3783850   +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
3783851   +   proc display c=sashelp.emcore.pathscorecode.scl;
3783852   +   run;
3783853   +%mend EM_GETTRAINPATH;
3783854   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(POSTLOOP):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(POSTLOOP):  ;
MPRINT(POSTLOOP):   data _null_;
MPRINT(POSTLOOP):   set EMWS1.Grp2_importset;
MPRINT(POSTLOOP):   select(upcase(port));
MPRINT(POSTLOOP):   when('DATA') call symput('gpTrain', strip(dataset));
MPRINT(POSTLOOP):   when('VALIDATE') call symput('gpValidate', strip(dataset));
MPRINT(POSTLOOP):   when('TEST') call symput('gpTest', strip(dataset));
MPRINT(POSTLOOP):   otherwise;
MPRINT(POSTLOOP):   end;
MPRINT(POSTLOOP):   run;
 
NOTE: There were 15 observations read from the data set EMWS1.GRP2_IMPORTSET.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename emflow "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas";
MPRINT(POSTGROUP):   filename empub "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas";
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0;
MPRINT(POSTGROUP):   set EMWS1.Grp2_GROUPINFO end=eof;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopwhere'!!strip(put(index, best.)),
tranwrd(strip(_wheredesc_), '"', '""'));
MPRINT(POSTGROUP):   call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
MPRINT(POSTGROUP):   if eof and substr(_WHERE_, 1, 2)='^(' then call symput('_XValidation',
'1');
MPRINT(POSTGROUP):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.GRP2_GROUPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   set EMWS1.Tree2_EMINFO;
MPRINT(POSTGROUP):   where key in('MODEL');
MPRINT(POSTGROUP):   call symput('grouptarget', strip(symget('grouptarget'))!!'
'!!strip(target));
MPRINT(POSTGROUP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE2_EMINFO.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp2_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=1;
MPRINT(POSTGROUP):   if nodelabel = "Grp2" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)),
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.ENDGRP2_PATH.
      WHERE LOOPID=1;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp2: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp2: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp2_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=217,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp2_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=217,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree2: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=254,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree2: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=254,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree2_LOOP.EMFLOWCODE_1.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=474,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 383 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree2_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=474,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 361 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp2: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=14525,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp2: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=13920,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=14743,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=14138,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp2_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=2;
MPRINT(POSTGROUP):   if nodelabel = "Grp2" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)),
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.ENDGRP2_PATH.
      WHERE LOOPID=2;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp2: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=14749,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp2: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=14144,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp2_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=14966,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp2_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=14361,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree2: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=15003,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree2: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=14398,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree2_LOOP.EMFLOWCODE_2.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=15223,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 473 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree2_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=14618,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 451 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp2: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=32901,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp2: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=31691,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=33119,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=31909,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp2_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=3;
MPRINT(POSTGROUP):   if nodelabel = "Grp2" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)),
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.ENDGRP2_PATH.
      WHERE LOOPID=3;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp2: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=33125,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp2: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=31915,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp2_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=33342,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp2_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=32132,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree2: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=33379,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree2: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=32169,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree2_LOOP.EMFLOWCODE_3.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=33599,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 367 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree2_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=32389,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 345 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp2: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=47103,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp2: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=45288,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=47321,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=45506,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp2_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=4;
MPRINT(POSTGROUP):   if nodelabel = "Grp2" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)),
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.ENDGRP2_PATH.
      WHERE LOOPID=4;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp2: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=47327,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp2: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=45512,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp2_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=47544,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp2_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=45729,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree2: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=47581,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree2: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=45766,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree2_LOOP.EMFLOWCODE_4.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=47801,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 409 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 66.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree2_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=45986,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 387 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 66.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp2: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=62878,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp2: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=60458,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=63096,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=60676,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp2_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=5;
MPRINT(POSTGROUP):   if nodelabel = "Grp2" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)),
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.ENDGRP2_PATH.
      WHERE LOOPID=5;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp2: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=63102,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp2: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=60682,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp2_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=63319,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp2_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=60899,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree2: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=63356,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree2: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=60936,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree2_LOOP.EMFLOWCODE_5.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=63576,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 355 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree2_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=61156,
      Last Modified=02 June 2018 17:10:06 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 333 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp2: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=76652,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp2: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=73627,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=76870,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=73845,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp2_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=6;
MPRINT(POSTGROUP):   if nodelabel = "Grp2" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)),
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.ENDGRP2_PATH.
      WHERE LOOPID=6;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp2: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=76876,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp2: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=73851,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp2_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=77093,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp2_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=74068,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree2: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=77130,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree2: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=74105,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree2_LOOP.EMFLOWCODE_6.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=77350,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 395 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree2_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=74325,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 373 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp2: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=91838,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp2: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=88208,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=92056,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=88426,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp2_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=7;
MPRINT(POSTGROUP):   if nodelabel = "Grp2" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)),
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.ENDGRP2_PATH.
      WHERE LOOPID=7;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp2: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=92062,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp2: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=88432,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp2_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=92279,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp2_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=88649,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree2: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=92316,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree2: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=88686,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree2_LOOP.EMFLOWCODE_7.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=92536,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 406 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree2_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=88906,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 384 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp2: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=107419,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp2: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=103184,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=107637,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=103402,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp2_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=8;
MPRINT(POSTGROUP):   if nodelabel = "Grp2" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)),
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.ENDGRP2_PATH.
      WHERE LOOPID=8;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp2: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=107643,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp2: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=103408,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp2_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=107860,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp2_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=103625,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree2: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=107897,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree2: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=103662,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree2_LOOP.EMFLOWCODE_8.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=108117,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 367 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree2_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=103882,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 345 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp2: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=121541,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp2: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=116701,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=121759,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=116919,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp2_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=9;
MPRINT(POSTGROUP):   if nodelabel = "Grp2" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)),
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.ENDGRP2_PATH.
      WHERE LOOPID=9;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp2: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=121765,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp2: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=116925,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp2_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
The SAS System
 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=121982,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp2_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=117142,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree2: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=122019,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree2: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=117179,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree2_LOOP.EMFLOWCODE_9.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=122239,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 392 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 67.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree2_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=117399,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 370 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 67.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp2: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=136585,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp2: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=131140,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=136803,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=131358,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp2_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=10;
MPRINT(POSTGROUP):   if nodelabel = "Grp2" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)),
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.ENDGRP2_PATH.
      WHERE LOOPID=10;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp2: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=136809,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp2: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=131364,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp2_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=137027,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 10.
      The maximum record length was 25.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp2_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=131582,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 10.
      The maximum record length was 25.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree2: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=137066,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree2: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=131621,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree2_LOOP.EMFLOWCODE_10.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=137287,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 371 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree2_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=131842,
      Last Modified=02 June 2018 17:10:07 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 349 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp2: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=150788,
      Last Modified=02 June 2018 17:10:08 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp2: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=144738,
      Last Modified=02 June 2018 17:10:08 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=151007,
      Last Modified=02 June 2018 17:10:08 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=144957,
      Last Modified=02 June 2018 17:10:08 o'clock,
      Create Time=02 June 2018 17:10:06 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(POSTGROUP):   filename empub;
NOTE: Fileref EMPUB has been deassigned.
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   set WORK.EM_USER_MODEL end=eof;
MPRINT(EM_MODEL):   output;
MPRINT(EM_MODEL):   if eof then do;
MPRINT(EM_MODEL):   data = "EMWS1.TRANS2_TRAIN";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "Y";
MPRINT(EM_MODEL):   decscorecode = "Y";
MPRINT(EM_MODEL):   fitstatistics = "Y";
MPRINT(EM_MODEL):   classification = "Y";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   output;
MPRINT(EM_MODEL):   end;
MPRINT(EM_MODEL):   run;
 
NOTE: There were 9 observations read from the data set WORK.EM_USER_MODEL.
NOTE: The data set WORK.EM_USER_MODEL has 10 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTLOOP):   proc sort data=EMWS1.EndGrp2_PATH nodupkey;
MPRINT(POSTLOOP):   by nodelabel;
MPRINT(POSTLOOP):   run;
 
NOTE: There were 120 observations read from the data set EMWS1.ENDGRP2_PATH.
NOTE: 108 observations with duplicate key values were deleted.
NOTE: The data set EMWS1.ENDGRP2_PATH has 12 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTLOOP):   data _null_;
MPRINT(POSTLOOP):   retain index 0;
MPRINT(POSTLOOP):   set EMWS1.EndGrp2_PATH end=eof;
MPRINT(POSTLOOP):   if nodelabel = "Grp2" or index then do;
MPRINT(POSTLOOP):   index + 1;
MPRINT(POSTLOOP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTLOOP):   end;
MPRINT(POSTLOOP):   if eof then do;
MPRINT(POSTLOOP):   call symput('loopnodenum', strip(put(index, best.)));
MPRINT(POSTLOOP):   end;
MPRINT(POSTLOOP):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.ENDGRP2_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTLOOP):   proc datasets lib=EMWS1 nolist;
MPRINT(POSTLOOP):   delete EndGrp2_path;
MPRINT(POSTLOOP):   delete Grp2_LOOP Tree2_LOOP / mt=catalog;
MPRINT(POSTLOOP):   run;
 
NOTE: Deleting EMWS1.ENDGRP2_PATH (memtype=DATA).
NOTE: Deleting EMWS1.GRP2_LOOP (memtype=CATALOG).
NOTE: Deleting EMWS1.TREE2_LOOP (memtype=CATALOG).
MPRINT(POSTLOOP):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(POSTLOOP):   filename emflow "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas" MOD;
MPRINT(SCORETABLES):   data EMWS1.EndGrp2_TRAIN / view=EMWS1.EndGrp2_TRAIN;
MPRINT(SCORETABLES):   set EMWS1.Trans2_TRAIN ;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMFLOWSCORE.sas.
3783855   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3783856   +* Grp2: StartGroup;
MPRINT(SCORETABLES):   * Grp2: StartGroup;
3783857   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3783858   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3783859   +* Group: ^(cv_var =1);
MPRINT(SCORETABLES):   * Group: ^(cv_var =1);
3783860   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3783861   +if (cv_var =1)  then do;
MPRINT(SCORETABLES):   if (cv_var =1) then do;
3783862   +_XVAL_=1;
MPRINT(SCORETABLES):   _XVAL_=1;
3783863   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3783864   +* Tree2: DecisionTree;
MPRINT(SCORETABLES):   * Tree2: DecisionTree;
3783865   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3783866   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3783867   +* Group: ^(cv_var =1);
MPRINT(SCORETABLES):   * Group: ^(cv_var =1);
3783868   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3783869   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3783870   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3783871   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3783872   +
3783873   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3783874   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3783875   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3783876   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3783877   +
3783878   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3783879   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3783880   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3783881   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3783882   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3783883   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3783884   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3783885   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3783886   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3783887   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3783888   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3783889   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3783890   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3783891   +
3783892   +
3783893   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3783894   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3783895   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3783896   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_8 $ 8;
MPRINT(SCORETABLES):   DROP _ARBFMT_8;
3783897   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_8 = ' ';
3783898   +
3783899   +
3783900   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3783901   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3783902   +
3783903   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3783904   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3783905   +                 0.125 <= RANGE_campaign_acceptance  AND
3783906   +  RANGE_campaign_acceptance  <                0.375 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <=
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.375 THEN DO;
3783907   +  IF  NOT MISSING(RANGE_Recency ) AND
3783908   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888
THEN DO;
3783909   +    IF  NOT MISSING(MntCard_Games ) AND
3783910   +      MntCard_Games  <     0.27058823529411 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND MntCard_Games < 0.27058823529411
THEN DO;
3783911   +      IF  NOT MISSING(NumCatalogPurchases ) AND
3783912   +            0.27429467084639 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.27429467084639 <=
NumCatalogPurchases THEN DO;
3783913   +        _NODE_  =                   43;
MPRINT(SCORETABLES):   _NODE_ = 43;
3783914   +        _LEAF_  =                   15;
MPRINT(SCORETABLES):   _LEAF_ = 15;
3783915   +        P_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.33333333333333;
3783916   +        P_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.66666666666666;
3783917   +        Q_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.33333333333333;
3783918   +        Q_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.66666666666666;
3783919   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3783920   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3783921   +        END;
MPRINT(SCORETABLES):   END;
3783922   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3783923   +        IF  NOT MISSING(NumWebPurchases ) AND
3783924   +          NumWebPurchases  <     0.34848484848484 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumWebPurchases ) AND NumWebPurchases < 0.34848484848484
THEN DO;
3783925   +          _NODE_  =                   64;
MPRINT(SCORETABLES):   _NODE_ = 64;
3783926   +          _LEAF_  =                   13;
MPRINT(SCORETABLES):   _LEAF_ = 13;
3783927   +          P_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   P_DepVar0 = 0.4;
3783928   +          P_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   P_DepVar1 = 0.6;
3783929   +          Q_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.4;
3783930   +          Q_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.6;
3783931   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3783932   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3783933   +          END;
MPRINT(SCORETABLES):   END;
3783934   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3783935   +          _NODE_  =                   65;
MPRINT(SCORETABLES):   _NODE_ = 65;
3783936   +          _LEAF_  =                   14;
MPRINT(SCORETABLES):   _LEAF_ = 14;
3783937   +          P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3783938   +          P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3783939   +          Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3783940   +          Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3783941   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3783942   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3783943   +          END;
MPRINT(SCORETABLES):   END;
3783944   +        END;
MPRINT(SCORETABLES):   END;
3783945   +      END;
MPRINT(SCORETABLES):   END;
3783946   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3783947   +      IF  NOT MISSING(RANGE_Recency ) AND
3783948   +            0.25757575757575 <= RANGE_Recency  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND 0.25757575757575 <= RANGE_Recency
THEN DO;
3783949   +        IF  NOT MISSING(MntCard_Games ) AND
3783950   +              0.48949801378063 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.48949801378063 <= MntCard_Games
THEN DO;
3783951   +          _NODE_  =                   67;
MPRINT(SCORETABLES):   _NODE_ = 67;
3783952   +          _LEAF_  =                   18;
MPRINT(SCORETABLES):   _LEAF_ = 18;
3783953   +          P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3783954   +          P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3783955   +          Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3783956   +          Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3783957   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3783958   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3783959   +          END;
MPRINT(SCORETABLES):   END;
3783960   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3783961   +          _NODE_  =                   66;
MPRINT(SCORETABLES):   _NODE_ = 66;
3783962   +          _LEAF_  =                   17;
MPRINT(SCORETABLES):   _LEAF_ = 17;
3783963   +          P_DepVar0  =     0.63157894736842;
MPRINT(SCORETABLES):   P_DepVar0 = 0.63157894736842;
3783964   +          P_DepVar1  =     0.36842105263157;
MPRINT(SCORETABLES):   P_DepVar1 = 0.36842105263157;
3783965   +          Q_DepVar0  =     0.63157894736842;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.63157894736842;
3783966   +          Q_DepVar1  =     0.36842105263157;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.36842105263157;
3783967   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3783968   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3783969   +          END;
MPRINT(SCORETABLES):   END;
3783970   +        END;
MPRINT(SCORETABLES):   END;
3783971   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3783972   +        _NODE_  =                   44;
MPRINT(SCORETABLES):   _NODE_ = 44;
3783973   +        _LEAF_  =                   16;
MPRINT(SCORETABLES):   _LEAF_ = 16;
3783974   +        P_DepVar0  =     0.08333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.08333333333333;
3783975   +        P_DepVar1  =     0.91666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.91666666666666;
3783976   +        Q_DepVar0  =     0.08333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.08333333333333;
3783977   +        Q_DepVar1  =     0.91666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.91666666666666;
3783978   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3783979   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3783980   +        END;
MPRINT(SCORETABLES):   END;
3783981   +      END;
MPRINT(SCORETABLES):   END;
3783982   +    END;
MPRINT(SCORETABLES):   END;
3783983   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3783984   +    IF  NOT MISSING(NumDealsPurchases ) AND
3783985   +          0.37626262626262 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.37626262626262 <=
NumDealsPurchases THEN DO;
3783986   +      _NODE_  =                   24;
MPRINT(SCORETABLES):   _NODE_ = 24;
3783987   +      _LEAF_  =                   20;
MPRINT(SCORETABLES):   _LEAF_ = 20;
3783988   +      P_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.33333333333333;
3783989   +      P_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.66666666666666;
3783990   +      Q_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.33333333333333;
3783991   +      Q_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.66666666666666;
3783992   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3783993   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3783994   +      END;
MPRINT(SCORETABLES):   END;
3783995   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3783996   +      _NODE_  =                   23;
MPRINT(SCORETABLES):   _NODE_ = 23;
3783997   +      _LEAF_  =                   19;
MPRINT(SCORETABLES):   _LEAF_ = 19;
3783998   +      P_DepVar0  =     0.94146341463414;
MPRINT(SCORETABLES):   P_DepVar0 = 0.94146341463414;
3783999   +      P_DepVar1  =     0.05853658536585;
MPRINT(SCORETABLES):   P_DepVar1 = 0.05853658536585;
3784000   +      Q_DepVar0  =     0.94146341463414;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.94146341463414;
3784001   +      Q_DepVar1  =     0.05853658536585;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.05853658536585;
3784002   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784003   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784004   +      END;
MPRINT(SCORETABLES):   END;
3784005   +    END;
MPRINT(SCORETABLES):   END;
3784006   +  END;
MPRINT(SCORETABLES):   END;
3784007   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3784008   +                 0.375 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.375 <=
RANGE_campaign_acceptance THEN DO;
3784009   +  IF  NOT MISSING(RANGE_Recency ) AND
3784010   +        0.38888888888888 <= RANGE_Recency  AND
3784011   +    RANGE_Recency  <     0.63131313131313 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND 0.38888888888888 <= RANGE_Recency
AND RANGE_Recency < 0.63131313131313 THEN DO;
3784012   +    IF  NOT MISSING(NumCatalogPurchases ) AND
3784013   +          0.32085561497326 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.32085561497326 <=
NumCatalogPurchases THEN DO;
3784014   +      _NODE_  =                   28;
MPRINT(SCORETABLES):   _NODE_ = 28;
3784015   +      _LEAF_  =                   23;
MPRINT(SCORETABLES):   _LEAF_ = 23;
3784016   +      P_DepVar0  =               0.0625;
MPRINT(SCORETABLES):   P_DepVar0 = 0.0625;
3784017   +      P_DepVar1  =               0.9375;
MPRINT(SCORETABLES):   P_DepVar1 = 0.9375;
3784018   +      Q_DepVar0  =               0.0625;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.0625;
3784019   +      Q_DepVar1  =               0.9375;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.9375;
3784020   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784021   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784022   +      END;
MPRINT(SCORETABLES):   END;
3784023   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784024   +      _NODE_  =                   27;
MPRINT(SCORETABLES):   _NODE_ = 27;
3784025   +      _LEAF_  =                   22;
MPRINT(SCORETABLES):   _LEAF_ = 22;
3784026   +      P_DepVar0  =     0.70833333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.70833333333333;
3784027   +      P_DepVar1  =     0.29166666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.29166666666666;
3784028   +      Q_DepVar0  =     0.70833333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.70833333333333;
3784029   +      Q_DepVar1  =     0.29166666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.29166666666666;
3784030   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784031   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784032   +      END;
MPRINT(SCORETABLES):   END;
3784033   +    END;
MPRINT(SCORETABLES):   END;
3784034   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3784035   +        0.63131313131313 <= RANGE_Recency  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.63131313131313 <=
RANGE_Recency THEN DO;
3784036   +    _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(SCORETABLES):   _ARBFMT_8 = PUT( Marital_Status , $8.);
3784037   +     %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(SCORETABLES):  ;
3784038   +    IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
MPRINT(SCORETABLES):   IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
3784039   +      _NODE_  =                   29;
MPRINT(SCORETABLES):   _NODE_ = 29;
3784040   +      _LEAF_  =                   24;
MPRINT(SCORETABLES):   _LEAF_ = 24;
3784041   +      P_DepVar0  =     0.92307692307692;
MPRINT(SCORETABLES):   P_DepVar0 = 0.92307692307692;
3784042   +      P_DepVar1  =     0.07692307692307;
MPRINT(SCORETABLES):   P_DepVar1 = 0.07692307692307;
3784043   +      Q_DepVar0  =     0.92307692307692;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.92307692307692;
3784044   +      Q_DepVar1  =     0.07692307692307;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.07692307692307;
3784045   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784046   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784047   +      END;
MPRINT(SCORETABLES):   END;
3784048   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784049   +      IF  NOT MISSING(NumCatalogPurchases ) AND
3784050   +            0.31393861892583 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.31393861892583 <=
NumCatalogPurchases THEN DO;
3784051   +        _NODE_  =                   49;
MPRINT(SCORETABLES):   _NODE_ = 49;
3784052   +        _LEAF_  =                   26;
MPRINT(SCORETABLES):   _LEAF_ = 26;
3784053   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3784054   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3784055   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3784056   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3784057   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784058   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784059   +        END;
MPRINT(SCORETABLES):   END;
3784060   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784061   +        _NODE_  =                   48;
MPRINT(SCORETABLES):   _NODE_ = 48;
3784062   +        _LEAF_  =                   25;
MPRINT(SCORETABLES):   _LEAF_ = 25;
3784063   +        P_DepVar0  =                  0.8;
MPRINT(SCORETABLES):   P_DepVar0 = 0.8;
3784064   +        P_DepVar1  =                  0.2;
MPRINT(SCORETABLES):   P_DepVar1 = 0.2;
3784065   +        Q_DepVar0  =                  0.8;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.8;
3784066   +        Q_DepVar1  =                  0.2;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.2;
3784067   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784068   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784069   +        END;
MPRINT(SCORETABLES):   END;
3784070   +      END;
MPRINT(SCORETABLES):   END;
3784071   +    END;
MPRINT(SCORETABLES):   END;
3784072   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784073   +    _NODE_  =                   10;
MPRINT(SCORETABLES):   _NODE_ = 10;
3784074   +    _LEAF_  =                   21;
MPRINT(SCORETABLES):   _LEAF_ = 21;
3784075   +    P_DepVar0  =     0.08771929824561;
MPRINT(SCORETABLES):   P_DepVar0 = 0.08771929824561;
3784076   +    P_DepVar1  =     0.91228070175438;
MPRINT(SCORETABLES):   P_DepVar1 = 0.91228070175438;
3784077   +    Q_DepVar0  =     0.08771929824561;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.08771929824561;
3784078   +    Q_DepVar1  =     0.91228070175438;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.91228070175438;
3784079   +    I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784080   +    U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784081   +    END;
MPRINT(SCORETABLES):   END;
3784082   +  END;
MPRINT(SCORETABLES):   END;
3784083   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784084   +  IF  NOT MISSING(RANGE_Recency ) AND
3784085   +    RANGE_Recency  <     0.08585858585858 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.08585858585858
THEN DO;
3784086   +    IF  NOT MISSING(MntCard_Games ) AND
3784087   +          0.55312113720642 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.55312113720642 <= MntCard_Games
THEN DO;
3784088   +      _NODE_  =                   14;
MPRINT(SCORETABLES):   _NODE_ = 14;
3784089   +      _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3784090   +      P_DepVar0  =     0.06666666666666;
MPRINT(SCORETABLES):   P_DepVar0 = 0.06666666666666;
3784091   +      P_DepVar1  =     0.93333333333333;
MPRINT(SCORETABLES):   P_DepVar1 = 0.93333333333333;
3784092   +      Q_DepVar0  =     0.06666666666666;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.06666666666666;
3784093   +      Q_DepVar1  =     0.93333333333333;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.93333333333333;
3784094   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784095   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784096   +      END;
MPRINT(SCORETABLES):   END;
3784097   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784098   +      IF  NOT MISSING(NumDealsPurchases ) AND
3784099   +            0.14835164835164 <= NumDealsPurchases  AND
3784100   +        NumDealsPurchases  <     0.37037037037037 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.14835164835164 <=
NumDealsPurchases AND NumDealsPurchases < 0.37037037037037 THEN DO;
3784101   +        _NODE_  =                   32;
MPRINT(SCORETABLES):   _NODE_ = 32;
3784102   +        _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3784103   +        P_DepVar0  =     0.67241379310344;
MPRINT(SCORETABLES):   P_DepVar0 = 0.67241379310344;
3784104   +        P_DepVar1  =     0.32758620689655;
MPRINT(SCORETABLES):   P_DepVar1 = 0.32758620689655;
3784105   +        Q_DepVar0  =     0.67241379310344;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.67241379310344;
3784106   +        Q_DepVar1  =     0.32758620689655;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.32758620689655;
3784107   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784108   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784109   +        END;
MPRINT(SCORETABLES):   END;
3784110   +      ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3784111   +            0.37037037037037 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.37037037037037 <=
NumDealsPurchases THEN DO;
3784112   +        _NODE_  =                   33;
MPRINT(SCORETABLES):   _NODE_ = 33;
3784113   +        _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3784114   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3784115   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3784116   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3784117   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3784118   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784119   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784120   +        END;
MPRINT(SCORETABLES):   END;
3784121   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784122   +        _NODE_  =                   31;
MPRINT(SCORETABLES):   _NODE_ = 31;
3784123   +        _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3784124   +        P_DepVar0  =     0.93670886075949;
MPRINT(SCORETABLES):   P_DepVar0 = 0.93670886075949;
3784125   +        P_DepVar1  =      0.0632911392405;
MPRINT(SCORETABLES):   P_DepVar1 = 0.0632911392405;
3784126   +        Q_DepVar0  =     0.93670886075949;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.93670886075949;
3784127   +        Q_DepVar1  =      0.0632911392405;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.0632911392405;
3784128   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784129   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784130   +        END;
MPRINT(SCORETABLES):   END;
3784131   +      END;
MPRINT(SCORETABLES):   END;
3784132   +    END;
MPRINT(SCORETABLES):   END;
3784133   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3784134   +        0.08585858585858 <= RANGE_Recency  AND
3784135   +    RANGE_Recency  <     0.36868686868686 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.08585858585858 <=
RANGE_Recency AND RANGE_Recency < 0.36868686868686 THEN DO;
3784136   +    IF  NOT MISSING(MntCard_Games ) AND
3784137   +          0.47871376811594 <= MntCard_Games  AND
3784138   +      MntCard_Games  <     0.69924668183695 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.47871376811594 <= MntCard_Games
AND MntCard_Games < 0.69924668183695 THEN DO;
3784139   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(SCORETABLES):   _ARBFMT_8 = PUT( Marital_Status , $8.);
3784140   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(SCORETABLES):  ;
3784141   +      IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
MPRINT(SCORETABLES):   IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
3784142   +        IF  NOT MISSING(NumDealsPurchases ) AND
3784143   +              0.20089285714285 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.20089285714285 <=
NumDealsPurchases THEN DO;
3784144   +          _NODE_  =                   55;
MPRINT(SCORETABLES):   _NODE_ = 55;
3784145   +          _LEAF_  =                    7;
MPRINT(SCORETABLES):   _LEAF_ = 7;
3784146   +          P_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.33333333333333;
3784147   +          P_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.66666666666666;
3784148   +          Q_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.33333333333333;
3784149   +          Q_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.66666666666666;
3784150   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784151   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784152   +          END;
MPRINT(SCORETABLES):   END;
3784153   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784154   +          _NODE_  =                   54;
MPRINT(SCORETABLES):   _NODE_ = 54;
3784155   +          _LEAF_  =                    6;
MPRINT(SCORETABLES):   _LEAF_ = 6;
3784156   +          P_DepVar0  =     0.97368421052631;
MPRINT(SCORETABLES):   P_DepVar0 = 0.97368421052631;
3784157   +          P_DepVar1  =     0.02631578947368;
MPRINT(SCORETABLES):   P_DepVar1 = 0.02631578947368;
3784158   +          Q_DepVar0  =     0.97368421052631;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.97368421052631;
3784159   +          Q_DepVar1  =     0.02631578947368;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.02631578947368;
3784160   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784161   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784162   +          END;
MPRINT(SCORETABLES):   END;
3784163   +        END;
MPRINT(SCORETABLES):   END;
3784164   +      ELSE IF _ARBFMT_8 IN ('SINGLE' ) THEN DO;
MPRINT(SCORETABLES):   ELSE IF _ARBFMT_8 IN ('SINGLE' ) THEN DO;
3784165   +        IF  NOT MISSING(NumCatalogPurchases ) AND
3784166   +              0.22252747252747 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.22252747252747 <=
NumCatalogPurchases THEN DO;
3784167   +          _NODE_  =                   57;
MPRINT(SCORETABLES):   _NODE_ = 57;
3784168   +          _LEAF_  =                    9;
MPRINT(SCORETABLES):   _LEAF_ = 9;
3784169   +          P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3784170   +          P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3784171   +          Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3784172   +          Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3784173   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784174   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784175   +          END;
MPRINT(SCORETABLES):   END;
3784176   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784177   +          _NODE_  =                   56;
MPRINT(SCORETABLES):   _NODE_ = 56;
3784178   +          _LEAF_  =                    8;
MPRINT(SCORETABLES):   _LEAF_ = 8;
3784179   +          P_DepVar0  =     0.71428571428571;
MPRINT(SCORETABLES):   P_DepVar0 = 0.71428571428571;
3784180   +          P_DepVar1  =     0.28571428571428;
MPRINT(SCORETABLES):   P_DepVar1 = 0.28571428571428;
3784181   +          Q_DepVar0  =     0.71428571428571;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.71428571428571;
3784182   +          Q_DepVar1  =     0.28571428571428;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.28571428571428;
3784183   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784184   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784185   +          END;
MPRINT(SCORETABLES):   END;
3784186   +        END;
MPRINT(SCORETABLES):   END;
3784187   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784188   +        _NODE_  =                   38;
MPRINT(SCORETABLES):   _NODE_ = 38;
3784189   +        _LEAF_  =                   10;
MPRINT(SCORETABLES):   _LEAF_ = 10;
3784190   +        P_DepVar0  =     0.21428571428571;
MPRINT(SCORETABLES):   P_DepVar0 = 0.21428571428571;
3784191   +        P_DepVar1  =     0.78571428571428;
MPRINT(SCORETABLES):   P_DepVar1 = 0.78571428571428;
3784192   +        Q_DepVar0  =     0.21428571428571;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.21428571428571;
3784193   +        Q_DepVar1  =     0.78571428571428;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.78571428571428;
3784194   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784195   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784196   +        END;
MPRINT(SCORETABLES):   END;
3784197   +      END;
MPRINT(SCORETABLES):   END;
3784198   +    ELSE IF  NOT MISSING(MntCard_Games ) AND
3784199   +          0.69924668183695 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntCard_Games ) AND 0.69924668183695 <=
MntCard_Games THEN DO;
3784200   +      _NODE_  =                   17;
MPRINT(SCORETABLES):   _NODE_ = 17;
3784201   +      _LEAF_  =                   11;
MPRINT(SCORETABLES):   _LEAF_ = 11;
3784202   +      P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3784203   +      P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3784204   +      Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3784205   +      Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3784206   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784207   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784208   +      END;
MPRINT(SCORETABLES):   END;
3784209   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784210   +      _NODE_  =                   15;
MPRINT(SCORETABLES):   _NODE_ = 15;
3784211   +      _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3784212   +      P_DepVar0  =     0.94025974025974;
MPRINT(SCORETABLES):   P_DepVar0 = 0.94025974025974;
3784213   +      P_DepVar1  =     0.05974025974025;
MPRINT(SCORETABLES):   P_DepVar1 = 0.05974025974025;
3784214   +      Q_DepVar0  =     0.94025974025974;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.94025974025974;
3784215   +      Q_DepVar1  =     0.05974025974025;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.05974025974025;
3784216   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784217   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784218   +      END;
MPRINT(SCORETABLES):   END;
3784219   +    END;
MPRINT(SCORETABLES):   END;
3784220   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784221   +    _NODE_  =                    7;
MPRINT(SCORETABLES):   _NODE_ = 7;
3784222   +    _LEAF_  =                   12;
MPRINT(SCORETABLES):   _LEAF_ = 12;
3784223   +    P_DepVar0  =     0.99142857142857;
MPRINT(SCORETABLES):   P_DepVar0 = 0.99142857142857;
3784224   +    P_DepVar1  =     0.00857142857142;
MPRINT(SCORETABLES):   P_DepVar1 = 0.00857142857142;
3784225   +    Q_DepVar0  =     0.99142857142857;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.99142857142857;
3784226   +    Q_DepVar1  =     0.00857142857142;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.00857142857142;
3784227   +    I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784228   +    U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784229   +    END;
MPRINT(SCORETABLES):   END;
3784230   +  END;
MPRINT(SCORETABLES):   END;
3784231   +
3784232   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3784233   +IF  F_DepVar  NE '0'
3784234   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3784235   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3784236   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3784237   + END;
MPRINT(SCORETABLES):   END;
3784238   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784239   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3784240   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3784241   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3784242   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3784243   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3784244   +       END;
MPRINT(SCORETABLES):   END;
3784245   + END;
MPRINT(SCORETABLES):   END;
3784246   +
3784247   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3784248   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3784249   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3784250   +
3784251   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3784252   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3784253   +* EndGrp2: EndGroup;
MPRINT(SCORETABLES):   * EndGrp2: EndGroup;
3784254   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3784255   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3784256   +* Group: ^(cv_var =1);
MPRINT(SCORETABLES):   * Group: ^(cv_var =1);
3784257   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3784258   +end;
MPRINT(SCORETABLES):   end;
3784259   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3784260   +* Grp2: StartGroup;
MPRINT(SCORETABLES):   * Grp2: StartGroup;
3784261   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3784262   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3784263   +* Group: ^(cv_var =2);
MPRINT(SCORETABLES):   * Group: ^(cv_var =2);
3784264   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3784265   +if (cv_var =2)  then do;
MPRINT(SCORETABLES):   if (cv_var =2) then do;
3784266   +_XVAL_=2;
MPRINT(SCORETABLES):   _XVAL_=2;
3784267   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3784268   +* Tree2: DecisionTree;
MPRINT(SCORETABLES):   * Tree2: DecisionTree;
3784269   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3784270   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3784271   +* Group: ^(cv_var =2);
MPRINT(SCORETABLES):   * Group: ^(cv_var =2);
3784272   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3784273   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3784274   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3784275   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3784276   +
3784277   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3784278   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3784279   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3784280   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3784281   +
3784282   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3784283   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3784284   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3784285   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3784286   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3784287   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3784288   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3784289   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3784290   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3784291   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3784292   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3784293   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3784294   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3784295   +
3784296   +
3784297   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3784298   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3784299   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3784300   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_8 $ 8;
MPRINT(SCORETABLES):   DROP _ARBFMT_8;
3784301   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_8 = ' ';
3784302   +
3784303   +
3784304   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3784305   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3784306   +
3784307   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3784308   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3784309   +                 0.125 <= RANGE_campaign_acceptance  AND
3784310   +  RANGE_campaign_acceptance  <                0.375 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <=
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.375 THEN DO;
3784311   +  IF  NOT MISSING(RANGE_Recency ) AND
3784312   +    RANGE_Recency  <     0.31818181818181 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.31818181818181
THEN DO;
3784313   +    IF  NOT MISSING(MntCard_Games ) AND
3784314   +          0.37104462156395 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.37104462156395 <= MntCard_Games
THEN DO;
3784315   +      _NODE_  =                   22;
MPRINT(SCORETABLES):   _NODE_ = 22;
3784316   +      _LEAF_  =                   18;
MPRINT(SCORETABLES):   _LEAF_ = 18;
3784317   +      P_DepVar0  =     0.08928571428571;
MPRINT(SCORETABLES):   P_DepVar0 = 0.08928571428571;
3784318   +      P_DepVar1  =     0.91071428571428;
MPRINT(SCORETABLES):   P_DepVar1 = 0.91071428571428;
3784319   +      Q_DepVar0  =     0.08928571428571;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.08928571428571;
3784320   +      Q_DepVar1  =     0.91071428571428;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.91071428571428;
3784321   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784322   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784323   +      END;
MPRINT(SCORETABLES):   END;
3784324   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784325   +      IF  NOT MISSING(NumDealsPurchases ) AND
3784326   +            0.12132352941176 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.12132352941176 <=
NumDealsPurchases THEN DO;
3784327   +        IF  NOT MISSING(NumCatalogPurchases ) AND
3784328   +          NumCatalogPurchases  <     0.18614718614718 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND NumCatalogPurchases <
0.18614718614718 THEN DO;
3784329   +          _NODE_  =                   69;
MPRINT(SCORETABLES):   _NODE_ = 69;
3784330   +          _LEAF_  =                   16;
MPRINT(SCORETABLES):   _LEAF_ = 16;
3784331   +          P_DepVar0  =                0.875;
MPRINT(SCORETABLES):   P_DepVar0 = 0.875;
3784332   +          P_DepVar1  =                0.125;
MPRINT(SCORETABLES):   P_DepVar1 = 0.125;
3784333   +          Q_DepVar0  =                0.875;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.875;
3784334   +          Q_DepVar1  =                0.125;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.125;
3784335   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784336   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784337   +          END;
MPRINT(SCORETABLES):   END;
3784338   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784339   +          _NODE_  =                   70;
MPRINT(SCORETABLES):   _NODE_ = 70;
3784340   +          _LEAF_  =                   17;
MPRINT(SCORETABLES):   _LEAF_ = 17;
3784341   +          P_DepVar0  =     0.09090909090909;
MPRINT(SCORETABLES):   P_DepVar0 = 0.09090909090909;
3784342   +          P_DepVar1  =      0.9090909090909;
MPRINT(SCORETABLES):   P_DepVar1 = 0.9090909090909;
3784343   +          Q_DepVar0  =     0.09090909090909;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.09090909090909;
3784344   +          Q_DepVar1  =      0.9090909090909;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.9090909090909;
3784345   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784346   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784347   +          END;
MPRINT(SCORETABLES):   END;
3784348   +        END;
MPRINT(SCORETABLES):   END;
3784349   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784350   +        IF  NOT MISSING(NumCatalogPurchases ) AND
3784351   +              0.27429467084639 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.27429467084639 <=
NumCatalogPurchases THEN DO;
3784352   +          _NODE_  =                   68;
MPRINT(SCORETABLES):   _NODE_ = 68;
3784353   +          _LEAF_  =                   15;
MPRINT(SCORETABLES):   _LEAF_ = 15;
3784354   +          P_DepVar0  =     0.38461538461538;
MPRINT(SCORETABLES):   P_DepVar0 = 0.38461538461538;
3784355   +          P_DepVar1  =     0.61538461538461;
MPRINT(SCORETABLES):   P_DepVar1 = 0.61538461538461;
3784356   +          Q_DepVar0  =     0.38461538461538;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.38461538461538;
3784357   +          Q_DepVar1  =     0.61538461538461;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.61538461538461;
3784358   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784359   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784360   +          END;
MPRINT(SCORETABLES):   END;
3784361   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784362   +          _NODE_  =                   67;
MPRINT(SCORETABLES):   _NODE_ = 67;
3784363   +          _LEAF_  =                   14;
MPRINT(SCORETABLES):   _LEAF_ = 14;
3784364   +          P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3784365   +          P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3784366   +          Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3784367   +          Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3784368   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784369   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784370   +          END;
MPRINT(SCORETABLES):   END;
3784371   +        END;
MPRINT(SCORETABLES):   END;
3784372   +      END;
MPRINT(SCORETABLES):   END;
3784373   +    END;
MPRINT(SCORETABLES):   END;
3784374   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784375   +    IF  NOT MISSING(NumDealsPurchases ) AND
3784376   +          0.31009615384615 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.31009615384615 <=
NumDealsPurchases THEN DO;
3784377   +      IF  NOT MISSING(RANGE_average_purchase ) AND
3784378   +        RANGE_average_purchase  <     0.12834706305947 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_average_purchase ) AND RANGE_average_purchase <
0.12834706305947 THEN DO;
3784379   +        _NODE_  =                   50;
MPRINT(SCORETABLES):   _NODE_ = 50;
3784380   +        _LEAF_  =                   23;
MPRINT(SCORETABLES):   _LEAF_ = 23;
3784381   +        P_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.33333333333333;
3784382   +        P_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.66666666666666;
3784383   +        Q_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.33333333333333;
3784384   +        Q_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.66666666666666;
3784385   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784386   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784387   +        END;
MPRINT(SCORETABLES):   END;
3784388   +      ELSE IF  NOT MISSING(RANGE_average_purchase ) AND
3784389   +            0.12834706305947 <= RANGE_average_purchase  AND
3784390   +        RANGE_average_purchase  <     0.16593054977226 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_average_purchase ) AND 0.12834706305947 <=
RANGE_average_purchase AND RANGE_average_purchase < 0.16593054977226 THEN DO;
3784391   +        _NODE_  =                   51;
MPRINT(SCORETABLES):   _NODE_ = 51;
3784392   +        _LEAF_  =                   24;
MPRINT(SCORETABLES):   _LEAF_ = 24;
3784393   +        P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3784394   +        P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3784395   +        Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3784396   +        Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3784397   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784398   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784399   +        END;
MPRINT(SCORETABLES):   END;
3784400   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784401   +        _NODE_  =                   52;
MPRINT(SCORETABLES):   _NODE_ = 52;
3784402   +        _LEAF_  =                   25;
MPRINT(SCORETABLES):   _LEAF_ = 25;
3784403   +        P_DepVar0  =     0.14285714285714;
MPRINT(SCORETABLES):   P_DepVar0 = 0.14285714285714;
3784404   +        P_DepVar1  =     0.85714285714285;
MPRINT(SCORETABLES):   P_DepVar1 = 0.85714285714285;
3784405   +        Q_DepVar0  =     0.14285714285714;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.14285714285714;
3784406   +        Q_DepVar1  =     0.85714285714285;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.85714285714285;
3784407   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784408   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784409   +        END;
MPRINT(SCORETABLES):   END;
3784410   +      END;
MPRINT(SCORETABLES):   END;
3784411   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784412   +      IF  NOT MISSING(MntCard_Games ) AND
3784413   +            0.52461453744493 <= MntCard_Games  AND
3784414   +        MntCard_Games  <     0.63081837541831 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.52461453744493 <= MntCard_Games
AND MntCard_Games < 0.63081837541831 THEN DO;
3784415   +        IF  NOT MISSING(RANGE_Recency ) AND
3784416   +          RANGE_Recency  <     0.51010101010101 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.51010101010101
THEN DO;
3784417   +          _NODE_  =                   74;
MPRINT(SCORETABLES):   _NODE_ = 74;
3784418   +          _LEAF_  =                   20;
MPRINT(SCORETABLES):   _LEAF_ = 20;
3784419   +          P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3784420   +          P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3784421   +          Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3784422   +          Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3784423   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784424   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784425   +          END;
MPRINT(SCORETABLES):   END;
3784426   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784427   +          _NODE_  =                   75;
MPRINT(SCORETABLES):   _NODE_ = 75;
3784428   +          _LEAF_  =                   21;
MPRINT(SCORETABLES):   _LEAF_ = 21;
3784429   +          P_DepVar0  =     0.95238095238095;
MPRINT(SCORETABLES):   P_DepVar0 = 0.95238095238095;
3784430   +          P_DepVar1  =     0.04761904761904;
MPRINT(SCORETABLES):   P_DepVar1 = 0.04761904761904;
3784431   +          Q_DepVar0  =     0.95238095238095;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.95238095238095;
3784432   +          Q_DepVar1  =     0.04761904761904;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.04761904761904;
3784433   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784434   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784435   +          END;
MPRINT(SCORETABLES):   END;
3784436   +        END;
MPRINT(SCORETABLES):   END;
3784437   +      ELSE IF  NOT MISSING(MntCard_Games ) AND
3784438   +            0.63081837541831 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntCard_Games ) AND 0.63081837541831 <=
MntCard_Games THEN DO;
3784439   +        _NODE_  =                   49;
MPRINT(SCORETABLES):   _NODE_ = 49;
3784440   +        _LEAF_  =                   22;
MPRINT(SCORETABLES):   _LEAF_ = 22;
3784441   +        P_DepVar0  =                  0.2;
MPRINT(SCORETABLES):   P_DepVar0 = 0.2;
3784442   +        P_DepVar1  =                  0.8;
MPRINT(SCORETABLES):   P_DepVar1 = 0.8;
3784443   +        Q_DepVar0  =                  0.2;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.2;
3784444   +        Q_DepVar1  =                  0.8;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.8;
3784445   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784446   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784447   +        END;
MPRINT(SCORETABLES):   END;
3784448   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784449   +        _NODE_  =                   47;
MPRINT(SCORETABLES):   _NODE_ = 47;
3784450   +        _LEAF_  =                   19;
MPRINT(SCORETABLES):   _LEAF_ = 19;
3784451   +        P_DepVar0  =     0.98412698412698;
MPRINT(SCORETABLES):   P_DepVar0 = 0.98412698412698;
3784452   +        P_DepVar1  =     0.01587301587301;
MPRINT(SCORETABLES):   P_DepVar1 = 0.01587301587301;
3784453   +        Q_DepVar0  =     0.98412698412698;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.98412698412698;
3784454   +        Q_DepVar1  =     0.01587301587301;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.01587301587301;
3784455   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784456   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784457   +        END;
MPRINT(SCORETABLES):   END;
3784458   +      END;
MPRINT(SCORETABLES):   END;
3784459   +    END;
MPRINT(SCORETABLES):   END;
3784460   +  END;
MPRINT(SCORETABLES):   END;
3784461   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3784462   +                 0.375 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.375 <=
RANGE_campaign_acceptance THEN DO;
3784463   +  IF  NOT MISSING(RANGE_Recency ) AND
3784464   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888
THEN DO;
3784465   +    _NODE_  =                   10;
MPRINT(SCORETABLES):   _NODE_ = 10;
3784466   +    _LEAF_  =                   26;
MPRINT(SCORETABLES):   _LEAF_ = 26;
3784467   +    P_DepVar0  =     0.07692307692307;
MPRINT(SCORETABLES):   P_DepVar0 = 0.07692307692307;
3784468   +    P_DepVar1  =     0.92307692307692;
MPRINT(SCORETABLES):   P_DepVar1 = 0.92307692307692;
3784469   +    Q_DepVar0  =     0.07692307692307;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.07692307692307;
3784470   +    Q_DepVar1  =     0.92307692307692;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.92307692307692;
3784471   +    I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784472   +    U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784473   +    END;
MPRINT(SCORETABLES):   END;
3784474   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3784475   +        0.38888888888888 <= RANGE_Recency  AND
3784476   +    RANGE_Recency  <     0.69191919191919 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.38888888888888 <=
RANGE_Recency AND RANGE_Recency < 0.69191919191919 THEN DO;
3784477   +    IF  NOT MISSING(NumCatalogPurchases ) AND
3784478   +          0.32085561497326 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.32085561497326 <=
NumCatalogPurchases THEN DO;
3784479   +      _NODE_  =                   28;
MPRINT(SCORETABLES):   _NODE_ = 28;
3784480   +      _LEAF_  =                   30;
MPRINT(SCORETABLES):   _LEAF_ = 30;
3784481   +      P_DepVar0  =     0.11111111111111;
MPRINT(SCORETABLES):   P_DepVar0 = 0.11111111111111;
3784482   +      P_DepVar1  =     0.88888888888888;
MPRINT(SCORETABLES):   P_DepVar1 = 0.88888888888888;
3784483   +      Q_DepVar0  =     0.11111111111111;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.11111111111111;
3784484   +      Q_DepVar1  =     0.88888888888888;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.88888888888888;
3784485   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784486   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784487   +      END;
MPRINT(SCORETABLES):   END;
3784488   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784489   +      IF  NOT MISSING(MntCard_Games ) AND
3784490   +            0.28772603094576 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.28772603094576 <= MntCard_Games
THEN DO;
3784491   +        IF  NOT MISSING(RANGE_Recency ) AND
3784492   +              0.57070707070707 <= RANGE_Recency  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND 0.57070707070707 <= RANGE_Recency
THEN DO;
3784493   +          _NODE_  =                   77;
MPRINT(SCORETABLES):   _NODE_ = 77;
3784494   +          _LEAF_  =                   29;
MPRINT(SCORETABLES):   _LEAF_ = 29;
3784495   +          P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3784496   +          P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3784497   +          Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3784498   +          Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3784499   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784500   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784501   +          END;
MPRINT(SCORETABLES):   END;
3784502   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784503   +          _NODE_  =                   76;
MPRINT(SCORETABLES):   _NODE_ = 76;
3784504   +          _LEAF_  =                   28;
MPRINT(SCORETABLES):   _LEAF_ = 28;
3784505   +          P_DepVar0  =     0.83333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.83333333333333;
3784506   +          P_DepVar1  =     0.16666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.16666666666666;
3784507   +          Q_DepVar0  =     0.83333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.83333333333333;
3784508   +          Q_DepVar1  =     0.16666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.16666666666666;
3784509   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784510   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784511   +          END;
MPRINT(SCORETABLES):   END;
3784512   +        END;
MPRINT(SCORETABLES):   END;
3784513   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784514   +        _NODE_  =                   53;
MPRINT(SCORETABLES):   _NODE_ = 53;
3784515   +        _LEAF_  =                   27;
MPRINT(SCORETABLES):   _LEAF_ = 27;
3784516   +        P_DepVar0  =               0.9375;
MPRINT(SCORETABLES):   P_DepVar0 = 0.9375;
3784517   +        P_DepVar1  =               0.0625;
MPRINT(SCORETABLES):   P_DepVar1 = 0.0625;
3784518   +        Q_DepVar0  =               0.9375;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.9375;
3784519   +        Q_DepVar1  =               0.0625;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.0625;
3784520   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784521   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784522   +        END;
MPRINT(SCORETABLES):   END;
3784523   +      END;
MPRINT(SCORETABLES):   END;
3784524   +    END;
MPRINT(SCORETABLES):   END;
3784525   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784526   +    _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(SCORETABLES):   _ARBFMT_8 = PUT( Marital_Status , $8.);
3784527   +     %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(SCORETABLES):  ;
3784528   +    IF _ARBFMT_8 IN ('TOGETHER' ,'MARRIED' ) THEN DO;
MPRINT(SCORETABLES):   IF _ARBFMT_8 IN ('TOGETHER' ,'MARRIED' ) THEN DO;
3784529   +      _NODE_  =                   30;
MPRINT(SCORETABLES):   _NODE_ = 30;
3784530   +      _LEAF_  =                   33;
MPRINT(SCORETABLES):   _LEAF_ = 33;
3784531   +      P_DepVar0  =     0.94594594594594;
MPRINT(SCORETABLES):   P_DepVar0 = 0.94594594594594;
3784532   +      P_DepVar1  =     0.05405405405405;
MPRINT(SCORETABLES):   P_DepVar1 = 0.05405405405405;
3784533   +      Q_DepVar0  =     0.94594594594594;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.94594594594594;
3784534   +      Q_DepVar1  =     0.05405405405405;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.05405405405405;
3784535   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784536   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784537   +      END;
MPRINT(SCORETABLES):   END;
3784538   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784539   +      IF  NOT MISSING(MntCard_Games ) AND
3784540   +             0.4699259811227 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.4699259811227 <= MntCard_Games
THEN DO;
3784541   +        _NODE_  =                   56;
MPRINT(SCORETABLES):   _NODE_ = 56;
3784542   +        _LEAF_  =                   32;
MPRINT(SCORETABLES):   _LEAF_ = 32;
3784543   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3784544   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3784545   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3784546   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3784547   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784548   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784549   +        END;
MPRINT(SCORETABLES):   END;
3784550   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784551   +        _NODE_  =                   55;
MPRINT(SCORETABLES):   _NODE_ = 55;
3784552   +        _LEAF_  =                   31;
MPRINT(SCORETABLES):   _LEAF_ = 31;
3784553   +        P_DepVar0  =     0.72727272727272;
MPRINT(SCORETABLES):   P_DepVar0 = 0.72727272727272;
3784554   +        P_DepVar1  =     0.27272727272727;
MPRINT(SCORETABLES):   P_DepVar1 = 0.27272727272727;
3784555   +        Q_DepVar0  =     0.72727272727272;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.72727272727272;
3784556   +        Q_DepVar1  =     0.27272727272727;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.27272727272727;
3784557   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784558   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784559   +        END;
MPRINT(SCORETABLES):   END;
3784560   +      END;
MPRINT(SCORETABLES):   END;
3784561   +    END;
MPRINT(SCORETABLES):   END;
3784562   +  END;
MPRINT(SCORETABLES):   END;
3784563   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784564   +  IF  NOT MISSING(RANGE_Recency ) AND
3784565   +    RANGE_Recency  <     0.08585858585858 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.08585858585858
THEN DO;
3784566   +    IF  NOT MISSING(MntCard_Games ) AND
3784567   +          0.49545604758757 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.49545604758757 <= MntCard_Games
THEN DO;
3784568   +      _NODE_  =                   14;
MPRINT(SCORETABLES):   _NODE_ = 14;
3784569   +      _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3784570   +      P_DepVar0  =     0.27272727272727;
MPRINT(SCORETABLES):   P_DepVar0 = 0.27272727272727;
3784571   +      P_DepVar1  =     0.72727272727272;
MPRINT(SCORETABLES):   P_DepVar1 = 0.72727272727272;
3784572   +      Q_DepVar0  =     0.27272727272727;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.27272727272727;
3784573   +      Q_DepVar1  =     0.72727272727272;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.72727272727272;
3784574   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784575   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784576   +      END;
MPRINT(SCORETABLES):   END;
3784577   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784578   +      IF  NOT MISSING(NumDealsPurchases ) AND
3784579   +            0.14835164835164 <= NumDealsPurchases  AND
3784580   +        NumDealsPurchases  <     0.32575757575757 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.14835164835164 <=
NumDealsPurchases AND NumDealsPurchases < 0.32575757575757 THEN DO;
3784581   +        IF  NOT MISSING(MntCard_Games ) AND
3784582   +              0.31347795163584 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.31347795163584 <= MntCard_Games
THEN DO;
3784583   +          _NODE_  =                   60;
MPRINT(SCORETABLES):   _NODE_ = 60;
3784584   +          _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3784585   +          P_DepVar0  =                 0.45;
MPRINT(SCORETABLES):   P_DepVar0 = 0.45;
3784586   +          P_DepVar1  =                 0.55;
MPRINT(SCORETABLES):   P_DepVar1 = 0.55;
3784587   +          Q_DepVar0  =                 0.45;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.45;
3784588   +          Q_DepVar1  =                 0.55;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.55;
3784589   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784590   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784591   +          END;
MPRINT(SCORETABLES):   END;
3784592   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784593   +          _NODE_  =                   59;
MPRINT(SCORETABLES):   _NODE_ = 59;
3784594   +          _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3784595   +          P_DepVar0  =     0.90322580645161;
MPRINT(SCORETABLES):   P_DepVar0 = 0.90322580645161;
3784596   +          P_DepVar1  =     0.09677419354838;
MPRINT(SCORETABLES):   P_DepVar1 = 0.09677419354838;
3784597   +          Q_DepVar0  =     0.90322580645161;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.90322580645161;
3784598   +          Q_DepVar1  =     0.09677419354838;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.09677419354838;
3784599   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784600   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784601   +          END;
MPRINT(SCORETABLES):   END;
3784602   +        END;
MPRINT(SCORETABLES):   END;
3784603   +      ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3784604   +            0.32575757575757 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.32575757575757 <=
NumDealsPurchases THEN DO;
3784605   +        _NODE_  =                   33;
MPRINT(SCORETABLES):   _NODE_ = 33;
3784606   +        _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3784607   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3784608   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3784609   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3784610   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3784611   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784612   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784613   +        END;
MPRINT(SCORETABLES):   END;
3784614   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784615   +        _NODE_  =                   31;
MPRINT(SCORETABLES):   _NODE_ = 31;
3784616   +        _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3784617   +        P_DepVar0  =     0.97101449275362;
MPRINT(SCORETABLES):   P_DepVar0 = 0.97101449275362;
3784618   +        P_DepVar1  =     0.02898550724637;
MPRINT(SCORETABLES):   P_DepVar1 = 0.02898550724637;
3784619   +        Q_DepVar0  =     0.97101449275362;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.97101449275362;
3784620   +        Q_DepVar1  =     0.02898550724637;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.02898550724637;
3784621   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784622   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784623   +        END;
MPRINT(SCORETABLES):   END;
3784624   +      END;
MPRINT(SCORETABLES):   END;
3784625   +    END;
MPRINT(SCORETABLES):   END;
3784626   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3784627   +        0.08585858585858 <= RANGE_Recency  AND
3784628   +    RANGE_Recency  <     0.32828282828282 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.08585858585858 <=
RANGE_Recency AND RANGE_Recency < 0.32828282828282 THEN DO;
3784629   +    IF  NOT MISSING(MntCard_Games ) AND
3784630   +          0.41233448947554 <= MntCard_Games  AND
3784631   +      MntCard_Games  <     0.60774438019947 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.41233448947554 <= MntCard_Games
AND MntCard_Games < 0.60774438019947 THEN DO;
3784632   +      IF  NOT MISSING(NumDealsPurchases ) AND
3784633   +            0.20344827586206 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.20344827586206 <=
NumDealsPurchases THEN DO;
3784634   +        _NODE_  =                   38;
MPRINT(SCORETABLES):   _NODE_ = 38;
3784635   +        _LEAF_  =                   11;
MPRINT(SCORETABLES):   _LEAF_ = 11;
3784636   +        P_DepVar0  =                 0.32;
MPRINT(SCORETABLES):   P_DepVar0 = 0.32;
3784637   +        P_DepVar1  =                 0.68;
MPRINT(SCORETABLES):   P_DepVar1 = 0.68;
3784638   +        Q_DepVar0  =                 0.32;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.32;
3784639   +        Q_DepVar1  =                 0.68;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.68;
3784640   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784641   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784642   +        END;
MPRINT(SCORETABLES):   END;
3784643   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784644   +        IF  NOT MISSING(NumCatalogPurchases ) AND
3784645   +              0.34057971014492 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.34057971014492 <=
NumCatalogPurchases THEN DO;
3784646   +          _NODE_  =                   64;
MPRINT(SCORETABLES):   _NODE_ = 64;
3784647   +          _LEAF_  =                   10;
MPRINT(SCORETABLES):   _LEAF_ = 10;
3784648   +          P_DepVar0  =     0.28571428571428;
MPRINT(SCORETABLES):   P_DepVar0 = 0.28571428571428;
3784649   +          P_DepVar1  =     0.71428571428571;
MPRINT(SCORETABLES):   P_DepVar1 = 0.71428571428571;
3784650   +          Q_DepVar0  =     0.28571428571428;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.28571428571428;
3784651   +          Q_DepVar1  =     0.71428571428571;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.71428571428571;
3784652   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784653   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784654   +          END;
MPRINT(SCORETABLES):   END;
3784655   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784656   +          _NODE_  =                   63;
MPRINT(SCORETABLES):   _NODE_ = 63;
3784657   +          _LEAF_  =                    9;
MPRINT(SCORETABLES):   _LEAF_ = 9;
3784658   +          P_DepVar0  =     0.88095238095238;
MPRINT(SCORETABLES):   P_DepVar0 = 0.88095238095238;
3784659   +          P_DepVar1  =     0.11904761904761;
MPRINT(SCORETABLES):   P_DepVar1 = 0.11904761904761;
3784660   +          Q_DepVar0  =     0.88095238095238;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.88095238095238;
3784661   +          Q_DepVar1  =     0.11904761904761;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.11904761904761;
3784662   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784663   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784664   +          END;
MPRINT(SCORETABLES):   END;
3784665   +        END;
MPRINT(SCORETABLES):   END;
3784666   +      END;
MPRINT(SCORETABLES):   END;
3784667   +    ELSE IF  NOT MISSING(MntCard_Games ) AND
3784668   +          0.60774438019947 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntCard_Games ) AND 0.60774438019947 <=
MntCard_Games THEN DO;
3784669   +      _NODE_  =                   17;
MPRINT(SCORETABLES):   _NODE_ = 17;
3784670   +      _LEAF_  =                   12;
MPRINT(SCORETABLES):   _LEAF_ = 12;
3784671   +      P_DepVar0  =                 0.25;
MPRINT(SCORETABLES):   P_DepVar0 = 0.25;
3784672   +      P_DepVar1  =                 0.75;
MPRINT(SCORETABLES):   P_DepVar1 = 0.75;
3784673   +      Q_DepVar0  =                 0.25;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.25;
3784674   +      Q_DepVar1  =                 0.75;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.75;
3784675   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784676   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784677   +      END;
MPRINT(SCORETABLES):   END;
3784678   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784679   +      IF  NOT MISSING(NumDealsPurchases ) AND
3784680   +            0.26491228070175 <= NumDealsPurchases  AND
3784681   +        NumDealsPurchases  <     0.31009615384615 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.26491228070175 <=
NumDealsPurchases AND NumDealsPurchases < 0.31009615384615 THEN DO;
3784682   +        _NODE_  =                   35;
MPRINT(SCORETABLES):   _NODE_ = 35;
3784683   +        _LEAF_  =                    7;
MPRINT(SCORETABLES):   _LEAF_ = 7;
3784684   +        P_DepVar0  =     0.72222222222222;
MPRINT(SCORETABLES):   P_DepVar0 = 0.72222222222222;
3784685   +        P_DepVar1  =     0.27777777777777;
MPRINT(SCORETABLES):   P_DepVar1 = 0.27777777777777;
3784686   +        Q_DepVar0  =     0.72222222222222;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.72222222222222;
3784687   +        Q_DepVar1  =     0.27777777777777;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.27777777777777;
3784688   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784689   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784690   +        END;
MPRINT(SCORETABLES):   END;
3784691   +      ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3784692   +            0.31009615384615 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.31009615384615 <=
NumDealsPurchases THEN DO;
3784693   +        _NODE_  =                   36;
MPRINT(SCORETABLES):   _NODE_ = 36;
3784694   +        _LEAF_  =                    8;
MPRINT(SCORETABLES):   _LEAF_ = 8;
3784695   +        P_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   P_DepVar0 = 0.4;
3784696   +        P_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   P_DepVar1 = 0.6;
3784697   +        Q_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.4;
3784698   +        Q_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.6;
3784699   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784700   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784701   +        END;
MPRINT(SCORETABLES):   END;
3784702   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784703   +        _NODE_  =                   34;
MPRINT(SCORETABLES):   _NODE_ = 34;
3784704   +        _LEAF_  =                    6;
MPRINT(SCORETABLES):   _LEAF_ = 6;
3784705   +        P_DepVar0  =     0.98455598455598;
MPRINT(SCORETABLES):   P_DepVar0 = 0.98455598455598;
3784706   +        P_DepVar1  =     0.01544401544401;
MPRINT(SCORETABLES):   P_DepVar1 = 0.01544401544401;
3784707   +        Q_DepVar0  =     0.98455598455598;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.98455598455598;
3784708   +        Q_DepVar1  =     0.01544401544401;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.01544401544401;
3784709   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784710   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784711   +        END;
MPRINT(SCORETABLES):   END;
3784712   +      END;
MPRINT(SCORETABLES):   END;
3784713   +    END;
MPRINT(SCORETABLES):   END;
3784714   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784715   +    _NODE_  =                    7;
MPRINT(SCORETABLES):   _NODE_ = 7;
3784716   +    _LEAF_  =                   13;
MPRINT(SCORETABLES):   _LEAF_ = 13;
3784717   +    P_DepVar0  =     0.98820326678765;
MPRINT(SCORETABLES):   P_DepVar0 = 0.98820326678765;
3784718   +    P_DepVar1  =     0.01179673321234;
MPRINT(SCORETABLES):   P_DepVar1 = 0.01179673321234;
3784719   +    Q_DepVar0  =     0.98820326678765;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.98820326678765;
3784720   +    Q_DepVar1  =     0.01179673321234;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.01179673321234;
3784721   +    I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784722   +    U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784723   +    END;
MPRINT(SCORETABLES):   END;
3784724   +  END;
MPRINT(SCORETABLES):   END;
3784725   +
3784726   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3784727   +IF  F_DepVar  NE '0'
3784728   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3784729   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3784730   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3784731   + END;
MPRINT(SCORETABLES):   END;
3784732   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784733   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3784734   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3784735   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3784736   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3784737   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3784738   +       END;
MPRINT(SCORETABLES):   END;
3784739   + END;
MPRINT(SCORETABLES):   END;
3784740   +
3784741   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3784742   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3784743   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3784744   +
3784745   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3784746   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3784747   +* EndGrp2: EndGroup;
MPRINT(SCORETABLES):   * EndGrp2: EndGroup;
3784748   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3784749   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3784750   +* Group: ^(cv_var =2);
MPRINT(SCORETABLES):   * Group: ^(cv_var =2);
3784751   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3784752   +end;
MPRINT(SCORETABLES):   end;
3784753   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3784754   +* Grp2: StartGroup;
MPRINT(SCORETABLES):   * Grp2: StartGroup;
3784755   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3784756   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3784757   +* Group: ^(cv_var =3);
MPRINT(SCORETABLES):   * Group: ^(cv_var =3);
3784758   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3784759   +if (cv_var =3)  then do;
MPRINT(SCORETABLES):   if (cv_var =3) then do;
3784760   +_XVAL_=3;
MPRINT(SCORETABLES):   _XVAL_=3;
3784761   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3784762   +* Tree2: DecisionTree;
MPRINT(SCORETABLES):   * Tree2: DecisionTree;
3784763   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3784764   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3784765   +* Group: ^(cv_var =3);
MPRINT(SCORETABLES):   * Group: ^(cv_var =3);
3784766   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3784767   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3784768   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3784769   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3784770   +
3784771   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3784772   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3784773   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3784774   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3784775   +
3784776   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3784777   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3784778   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3784779   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3784780   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3784781   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3784782   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3784783   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3784784   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3784785   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3784786   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3784787   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3784788   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3784789   +
3784790   +
3784791   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3784792   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3784793   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3784794   +
3784795   +
3784796   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3784797   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3784798   +
3784799   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3784800   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3784801   +                 0.125 <= RANGE_campaign_acceptance  AND
3784802   +  RANGE_campaign_acceptance  <                0.375 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <=
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.375 THEN DO;
3784803   +  IF  NOT MISSING(RANGE_Recency ) AND
3784804   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888
THEN DO;
3784805   +    IF  NOT MISSING(MntCard_Games ) AND
3784806   +          0.37104462156395 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.37104462156395 <= MntCard_Games
THEN DO;
3784807   +      _NODE_  =                   21;
MPRINT(SCORETABLES):   _NODE_ = 21;
3784808   +      _LEAF_  =                   16;
MPRINT(SCORETABLES):   _LEAF_ = 16;
3784809   +      P_DepVar0  =     0.08333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.08333333333333;
3784810   +      P_DepVar1  =     0.91666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.91666666666666;
3784811   +      Q_DepVar0  =     0.08333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.08333333333333;
3784812   +      Q_DepVar1  =     0.91666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.91666666666666;
3784813   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784814   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784815   +      END;
MPRINT(SCORETABLES):   END;
3784816   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784817   +      IF  NOT MISSING(NumCatalogPurchases ) AND
3784818   +            0.24068965517241 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.24068965517241 <=
NumCatalogPurchases THEN DO;
3784819   +        IF  NOT MISSING(NumDealsPurchases ) AND
3784820   +              0.11896551724137 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.11896551724137 <=
NumDealsPurchases THEN DO;
3784821   +          _NODE_  =                   64;
MPRINT(SCORETABLES):   _NODE_ = 64;
3784822   +          _LEAF_  =                   15;
MPRINT(SCORETABLES):   _LEAF_ = 15;
3784823   +          P_DepVar0  =     0.06666666666666;
MPRINT(SCORETABLES):   P_DepVar0 = 0.06666666666666;
3784824   +          P_DepVar1  =     0.93333333333333;
MPRINT(SCORETABLES):   P_DepVar1 = 0.93333333333333;
3784825   +          Q_DepVar0  =     0.06666666666666;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.06666666666666;
3784826   +          Q_DepVar1  =     0.93333333333333;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.93333333333333;
3784827   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784828   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784829   +          END;
MPRINT(SCORETABLES):   END;
3784830   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784831   +          _NODE_  =                   63;
MPRINT(SCORETABLES):   _NODE_ = 63;
3784832   +          _LEAF_  =                   14;
MPRINT(SCORETABLES):   _LEAF_ = 14;
3784833   +          P_DepVar0  =                0.625;
MPRINT(SCORETABLES):   P_DepVar0 = 0.625;
3784834   +          P_DepVar1  =                0.375;
MPRINT(SCORETABLES):   P_DepVar1 = 0.375;
3784835   +          Q_DepVar0  =                0.625;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.625;
3784836   +          Q_DepVar1  =                0.375;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.375;
3784837   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784838   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784839   +          END;
MPRINT(SCORETABLES):   END;
3784840   +        END;
MPRINT(SCORETABLES):   END;
3784841   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784842   +        _NODE_  =                   40;
MPRINT(SCORETABLES):   _NODE_ = 40;
3784843   +        _LEAF_  =                   13;
MPRINT(SCORETABLES):   _LEAF_ = 13;
3784844   +        P_DepVar0  =     0.85106382978723;
MPRINT(SCORETABLES):   P_DepVar0 = 0.85106382978723;
3784845   +        P_DepVar1  =     0.14893617021276;
MPRINT(SCORETABLES):   P_DepVar1 = 0.14893617021276;
3784846   +        Q_DepVar0  =     0.85106382978723;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.85106382978723;
3784847   +        Q_DepVar1  =     0.14893617021276;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.14893617021276;
3784848   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784849   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784850   +        END;
MPRINT(SCORETABLES):   END;
3784851   +      END;
MPRINT(SCORETABLES):   END;
3784852   +    END;
MPRINT(SCORETABLES):   END;
3784853   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784854   +    IF  NOT MISSING(MntCard_Games ) AND
3784855   +          0.39140787852045 <= MntCard_Games  AND
3784856   +      MntCard_Games  <     0.61026789380447 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.39140787852045 <= MntCard_Games
AND MntCard_Games < 0.61026789380447 THEN DO;
3784857   +      IF  NOT MISSING(NumDealsPurchases ) AND
3784858   +            0.26785714285714 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.26785714285714 <=
NumDealsPurchases THEN DO;
3784859   +        _NODE_  =                   45;
MPRINT(SCORETABLES):   _NODE_ = 45;
3784860   +        _LEAF_  =                   20;
MPRINT(SCORETABLES):   _LEAF_ = 20;
3784861   +        P_DepVar0  =     0.22222222222222;
MPRINT(SCORETABLES):   P_DepVar0 = 0.22222222222222;
3784862   +        P_DepVar1  =     0.77777777777777;
MPRINT(SCORETABLES):   P_DepVar1 = 0.77777777777777;
3784863   +        Q_DepVar0  =     0.22222222222222;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.22222222222222;
3784864   +        Q_DepVar1  =     0.77777777777777;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.77777777777777;
3784865   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784866   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784867   +        END;
MPRINT(SCORETABLES):   END;
3784868   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784869   +        IF  NOT MISSING(RANGE_Recency ) AND
3784870   +          RANGE_Recency  <     0.48989898989899 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.48989898989899
THEN DO;
3784871   +          _NODE_  =                   65;
MPRINT(SCORETABLES):   _NODE_ = 65;
3784872   +          _LEAF_  =                   18;
MPRINT(SCORETABLES):   _LEAF_ = 18;
3784873   +          P_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   P_DepVar0 = 0.4;
3784874   +          P_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   P_DepVar1 = 0.6;
3784875   +          Q_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.4;
3784876   +          Q_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.6;
3784877   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784878   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784879   +          END;
MPRINT(SCORETABLES):   END;
3784880   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784881   +          _NODE_  =                   66;
MPRINT(SCORETABLES):   _NODE_ = 66;
3784882   +          _LEAF_  =                   19;
MPRINT(SCORETABLES):   _LEAF_ = 19;
3784883   +          P_DepVar0  =     0.98076923076923;
MPRINT(SCORETABLES):   P_DepVar0 = 0.98076923076923;
3784884   +          P_DepVar1  =     0.01923076923076;
MPRINT(SCORETABLES):   P_DepVar1 = 0.01923076923076;
3784885   +          Q_DepVar0  =     0.98076923076923;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.98076923076923;
3784886   +          Q_DepVar1  =     0.01923076923076;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.01923076923076;
3784887   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784888   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784889   +          END;
MPRINT(SCORETABLES):   END;
3784890   +        END;
MPRINT(SCORETABLES):   END;
3784891   +      END;
MPRINT(SCORETABLES):   END;
3784892   +    ELSE IF  NOT MISSING(MntCard_Games ) AND
3784893   +          0.61026789380447 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntCard_Games ) AND 0.61026789380447 <=
MntCard_Games THEN DO;
3784894   +      _NODE_  =                   24;
MPRINT(SCORETABLES):   _NODE_ = 24;
3784895   +      _LEAF_  =                   21;
MPRINT(SCORETABLES):   _LEAF_ = 21;
3784896   +      P_DepVar0  =     0.16666666666666;
MPRINT(SCORETABLES):   P_DepVar0 = 0.16666666666666;
3784897   +      P_DepVar1  =     0.83333333333333;
MPRINT(SCORETABLES):   P_DepVar1 = 0.83333333333333;
3784898   +      Q_DepVar0  =     0.16666666666666;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.16666666666666;
3784899   +      Q_DepVar1  =     0.83333333333333;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.83333333333333;
3784900   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784901   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784902   +      END;
MPRINT(SCORETABLES):   END;
3784903   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784904   +      _NODE_  =                   22;
MPRINT(SCORETABLES):   _NODE_ = 22;
3784905   +      _LEAF_  =                   17;
MPRINT(SCORETABLES):   _LEAF_ = 17;
3784906   +      P_DepVar0  =     0.98540145985401;
MPRINT(SCORETABLES):   P_DepVar0 = 0.98540145985401;
3784907   +      P_DepVar1  =     0.01459854014598;
MPRINT(SCORETABLES):   P_DepVar1 = 0.01459854014598;
3784908   +      Q_DepVar0  =     0.98540145985401;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.98540145985401;
3784909   +      Q_DepVar1  =     0.01459854014598;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.01459854014598;
3784910   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784911   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784912   +      END;
MPRINT(SCORETABLES):   END;
3784913   +    END;
MPRINT(SCORETABLES):   END;
3784914   +  END;
MPRINT(SCORETABLES):   END;
3784915   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3784916   +                 0.375 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.375 <=
RANGE_campaign_acceptance THEN DO;
3784917   +  IF  NOT MISSING(RANGE_Recency ) AND
3784918   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888
THEN DO;
3784919   +    _NODE_  =                   10;
MPRINT(SCORETABLES):   _NODE_ = 10;
3784920   +    _LEAF_  =                   22;
MPRINT(SCORETABLES):   _LEAF_ = 22;
3784921   +    P_DepVar0  =     0.10714285714285;
MPRINT(SCORETABLES):   P_DepVar0 = 0.10714285714285;
3784922   +    P_DepVar1  =     0.89285714285714;
MPRINT(SCORETABLES):   P_DepVar1 = 0.89285714285714;
3784923   +    Q_DepVar0  =     0.10714285714285;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.10714285714285;
3784924   +    Q_DepVar1  =     0.89285714285714;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.89285714285714;
3784925   +    I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784926   +    U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784927   +    END;
MPRINT(SCORETABLES):   END;
3784928   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784929   +    IF  NOT MISSING(NumCatalogPurchases ) AND
3784930   +          0.32247899159663 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.32247899159663 <=
NumCatalogPurchases THEN DO;
3784931   +      _NODE_  =                   28;
MPRINT(SCORETABLES):   _NODE_ = 28;
3784932   +      _LEAF_  =                   25;
MPRINT(SCORETABLES):   _LEAF_ = 25;
3784933   +      P_DepVar0  =                  0.3;
MPRINT(SCORETABLES):   P_DepVar0 = 0.3;
3784934   +      P_DepVar1  =                  0.7;
MPRINT(SCORETABLES):   P_DepVar1 = 0.7;
3784935   +      Q_DepVar0  =                  0.3;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.3;
3784936   +      Q_DepVar1  =                  0.7;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.7;
3784937   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784938   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784939   +      END;
MPRINT(SCORETABLES):   END;
3784940   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784941   +      IF  NOT MISSING(RANGE_average_purchase ) AND
3784942   +            0.69439879420345 <= RANGE_average_purchase  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_average_purchase ) AND 0.69439879420345 <=
RANGE_average_purchase THEN DO;
3784943   +        _NODE_  =                   47;
MPRINT(SCORETABLES):   _NODE_ = 47;
3784944   +        _LEAF_  =                   24;
MPRINT(SCORETABLES):   _LEAF_ = 24;
3784945   +        P_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.33333333333333;
3784946   +        P_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.66666666666666;
3784947   +        Q_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.33333333333333;
3784948   +        Q_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.66666666666666;
3784949   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784950   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784951   +        END;
MPRINT(SCORETABLES):   END;
3784952   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784953   +        _NODE_  =                   46;
MPRINT(SCORETABLES):   _NODE_ = 46;
3784954   +        _LEAF_  =                   23;
MPRINT(SCORETABLES):   _LEAF_ = 23;
3784955   +        P_DepVar0  =     0.88524590163934;
MPRINT(SCORETABLES):   P_DepVar0 = 0.88524590163934;
3784956   +        P_DepVar1  =     0.11475409836065;
MPRINT(SCORETABLES):   P_DepVar1 = 0.11475409836065;
3784957   +        Q_DepVar0  =     0.88524590163934;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.88524590163934;
3784958   +        Q_DepVar1  =     0.11475409836065;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.11475409836065;
3784959   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784960   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784961   +        END;
MPRINT(SCORETABLES):   END;
3784962   +      END;
MPRINT(SCORETABLES):   END;
3784963   +    END;
MPRINT(SCORETABLES):   END;
3784964   +  END;
MPRINT(SCORETABLES):   END;
3784965   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784966   +  IF  NOT MISSING(RANGE_Recency ) AND
3784967   +    RANGE_Recency  <     0.13636363636363 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.13636363636363
THEN DO;
3784968   +    IF  NOT MISSING(MntCard_Games ) AND
3784969   +          0.45678092399403 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.45678092399403 <= MntCard_Games
THEN DO;
3784970   +      _NODE_  =                   13;
MPRINT(SCORETABLES):   _NODE_ = 13;
3784971   +      _LEAF_  =                    6;
MPRINT(SCORETABLES):   _LEAF_ = 6;
3784972   +      P_DepVar0  =     0.28571428571428;
MPRINT(SCORETABLES):   P_DepVar0 = 0.28571428571428;
3784973   +      P_DepVar1  =     0.71428571428571;
MPRINT(SCORETABLES):   P_DepVar1 = 0.71428571428571;
3784974   +      Q_DepVar0  =     0.28571428571428;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.28571428571428;
3784975   +      Q_DepVar1  =     0.71428571428571;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.71428571428571;
3784976   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3784977   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3784978   +      END;
MPRINT(SCORETABLES):   END;
3784979   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3784980   +      IF  NOT MISSING(NumDealsPurchases ) AND
3784981   +            0.17156862745098 <= NumDealsPurchases  AND
3784982   +        NumDealsPurchases  <     0.35416666666666 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.17156862745098 <=
NumDealsPurchases AND NumDealsPurchases < 0.35416666666666 THEN DO;
3784983   +        _NODE_  =                   30;
MPRINT(SCORETABLES):   _NODE_ = 30;
3784984   +        _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3784985   +        P_DepVar0  =     0.74137931034482;
MPRINT(SCORETABLES):   P_DepVar0 = 0.74137931034482;
3784986   +        P_DepVar1  =     0.25862068965517;
MPRINT(SCORETABLES):   P_DepVar1 = 0.25862068965517;
3784987   +        Q_DepVar0  =     0.74137931034482;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.74137931034482;
3784988   +        Q_DepVar1  =     0.25862068965517;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.25862068965517;
3784989   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3784990   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3784991   +        END;
MPRINT(SCORETABLES):   END;
3784992   +      ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3784993   +            0.35416666666666 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.35416666666666 <=
NumDealsPurchases THEN DO;
3784994   +        _NODE_  =                   31;
MPRINT(SCORETABLES):   _NODE_ = 31;
3784995   +        _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3784996   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3784997   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3784998   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3784999   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3785000   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785001   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785002   +        END;
MPRINT(SCORETABLES):   END;
3785003   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785004   +        IF  NOT MISSING(MntMagazines ) AND
3785005   +              0.03940374572029 <= MntMagazines  AND
3785006   +          MntMagazines  <     0.04442832417693 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntMagazines ) AND 0.03940374572029 <= MntMagazines AND
MntMagazines < 0.04442832417693 THEN DO;
3785007   +          _NODE_  =                   49;
MPRINT(SCORETABLES):   _NODE_ = 49;
3785008   +          _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3785009   +          P_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   P_DepVar0 = 0.4;
3785010   +          P_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   P_DepVar1 = 0.6;
3785011   +          Q_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.4;
3785012   +          Q_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.6;
3785013   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785014   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785015   +          END;
MPRINT(SCORETABLES):   END;
3785016   +        ELSE IF  NOT MISSING(MntMagazines ) AND
3785017   +              0.04442832417693 <= MntMagazines  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntMagazines ) AND 0.04442832417693 <= MntMagazines
THEN DO;
3785018   +          _NODE_  =                   50;
MPRINT(SCORETABLES):   _NODE_ = 50;
3785019   +          _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3785020   +          P_DepVar0  =     0.96923076923076;
MPRINT(SCORETABLES):   P_DepVar0 = 0.96923076923076;
3785021   +          P_DepVar1  =     0.03076923076923;
MPRINT(SCORETABLES):   P_DepVar1 = 0.03076923076923;
3785022   +          Q_DepVar0  =     0.96923076923076;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.96923076923076;
3785023   +          Q_DepVar1  =     0.03076923076923;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.03076923076923;
3785024   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785025   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785026   +          END;
MPRINT(SCORETABLES):   END;
3785027   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785028   +          _NODE_  =                   48;
MPRINT(SCORETABLES):   _NODE_ = 48;
3785029   +          _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3785030   +          P_DepVar0  =     0.97368421052631;
MPRINT(SCORETABLES):   P_DepVar0 = 0.97368421052631;
3785031   +          P_DepVar1  =     0.02631578947368;
MPRINT(SCORETABLES):   P_DepVar1 = 0.02631578947368;
3785032   +          Q_DepVar0  =     0.97368421052631;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.97368421052631;
3785033   +          Q_DepVar1  =     0.02631578947368;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.02631578947368;
3785034   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785035   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785036   +          END;
MPRINT(SCORETABLES):   END;
3785037   +        END;
MPRINT(SCORETABLES):   END;
3785038   +      END;
MPRINT(SCORETABLES):   END;
3785039   +    END;
MPRINT(SCORETABLES):   END;
3785040   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3785041   +        0.13636363636363 <= RANGE_Recency  AND
3785042   +    RANGE_Recency  <     0.36868686868686 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.13636363636363 <=
RANGE_Recency AND RANGE_Recency < 0.36868686868686 THEN DO;
3785043   +    IF  NOT MISSING(NumDealsPurchases ) AND
3785044   +      NumDealsPurchases  <     0.04653679653679 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND NumDealsPurchases <
0.04653679653679 THEN DO;
3785045   +      IF  NOT MISSING(MntCard_Games ) AND
3785046   +            0.63883384460336 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.63883384460336 <= MntCard_Games
THEN DO;
3785047   +        _NODE_  =                   33;
MPRINT(SCORETABLES):   _NODE_ = 33;
3785048   +        _LEAF_  =                    8;
MPRINT(SCORETABLES):   _LEAF_ = 8;
3785049   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3785050   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3785051   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3785052   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3785053   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785054   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785055   +        END;
MPRINT(SCORETABLES):   END;
3785056   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785057   +        _NODE_  =                   32;
MPRINT(SCORETABLES):   _NODE_ = 32;
3785058   +        _LEAF_  =                    7;
MPRINT(SCORETABLES):   _LEAF_ = 7;
3785059   +        P_DepVar0  =     0.83018867924528;
MPRINT(SCORETABLES):   P_DepVar0 = 0.83018867924528;
3785060   +        P_DepVar1  =     0.16981132075471;
MPRINT(SCORETABLES):   P_DepVar1 = 0.16981132075471;
3785061   +        Q_DepVar0  =     0.83018867924528;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.83018867924528;
3785062   +        Q_DepVar1  =     0.16981132075471;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.16981132075471;
3785063   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785064   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785065   +        END;
MPRINT(SCORETABLES):   END;
3785066   +      END;
MPRINT(SCORETABLES):   END;
3785067   +    ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3785068   +          0.20294117647058 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.20294117647058 <=
NumDealsPurchases THEN DO;
3785069   +      IF  NOT MISSING(MntCard_Games ) AND
3785070   +            0.35027388922702 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.35027388922702 <= MntCard_Games
THEN DO;
3785071   +        _NODE_  =                   37;
MPRINT(SCORETABLES):   _NODE_ = 37;
3785072   +        _LEAF_  =                   11;
MPRINT(SCORETABLES):   _LEAF_ = 11;
3785073   +        P_DepVar0  =                0.375;
MPRINT(SCORETABLES):   P_DepVar0 = 0.375;
3785074   +        P_DepVar1  =                0.625;
MPRINT(SCORETABLES):   P_DepVar1 = 0.625;
3785075   +        Q_DepVar0  =                0.375;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.375;
3785076   +        Q_DepVar1  =                0.625;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.625;
3785077   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785078   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785079   +        END;
MPRINT(SCORETABLES):   END;
3785080   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785081   +        _NODE_  =                   36;
MPRINT(SCORETABLES):   _NODE_ = 36;
3785082   +        _LEAF_  =                   10;
MPRINT(SCORETABLES):   _LEAF_ = 10;
3785083   +        P_DepVar0  =              0.90625;
MPRINT(SCORETABLES):   P_DepVar0 = 0.90625;
3785084   +        P_DepVar1  =              0.09375;
MPRINT(SCORETABLES):   P_DepVar1 = 0.09375;
3785085   +        Q_DepVar0  =              0.90625;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.90625;
3785086   +        Q_DepVar1  =              0.09375;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.09375;
3785087   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785088   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785089   +        END;
MPRINT(SCORETABLES):   END;
3785090   +      END;
MPRINT(SCORETABLES):   END;
3785091   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785092   +      _NODE_  =                   15;
MPRINT(SCORETABLES):   _NODE_ = 15;
3785093   +      _LEAF_  =                    9;
MPRINT(SCORETABLES):   _LEAF_ = 9;
3785094   +      P_DepVar0  =     0.97318007662835;
MPRINT(SCORETABLES):   P_DepVar0 = 0.97318007662835;
3785095   +      P_DepVar1  =     0.02681992337164;
MPRINT(SCORETABLES):   P_DepVar1 = 0.02681992337164;
3785096   +      Q_DepVar0  =     0.97318007662835;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.97318007662835;
3785097   +      Q_DepVar1  =     0.02681992337164;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.02681992337164;
3785098   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785099   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785100   +      END;
MPRINT(SCORETABLES):   END;
3785101   +    END;
MPRINT(SCORETABLES):   END;
3785102   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785103   +    _NODE_  =                    7;
MPRINT(SCORETABLES):   _NODE_ = 7;
3785104   +    _LEAF_  =                   12;
MPRINT(SCORETABLES):   _LEAF_ = 12;
3785105   +    P_DepVar0  =     0.99319727891156;
MPRINT(SCORETABLES):   P_DepVar0 = 0.99319727891156;
3785106   +    P_DepVar1  =     0.00680272108843;
MPRINT(SCORETABLES):   P_DepVar1 = 0.00680272108843;
3785107   +    Q_DepVar0  =     0.99319727891156;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.99319727891156;
3785108   +    Q_DepVar1  =     0.00680272108843;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.00680272108843;
3785109   +    I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785110   +    U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785111   +    END;
MPRINT(SCORETABLES):   END;
3785112   +  END;
MPRINT(SCORETABLES):   END;
3785113   +
3785114   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3785115   +IF  F_DepVar  NE '0'
3785116   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3785117   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3785118   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3785119   + END;
MPRINT(SCORETABLES):   END;
3785120   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785121   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3785122   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3785123   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3785124   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3785125   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3785126   +       END;
MPRINT(SCORETABLES):   END;
3785127   + END;
MPRINT(SCORETABLES):   END;
3785128   +
3785129   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3785130   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3785131   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3785132   +
3785133   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3785134   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3785135   +* EndGrp2: EndGroup;
MPRINT(SCORETABLES):   * EndGrp2: EndGroup;
3785136   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3785137   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3785138   +* Group: ^(cv_var =3);
MPRINT(SCORETABLES):   * Group: ^(cv_var =3);
3785139   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3785140   +end;
MPRINT(SCORETABLES):   end;
3785141   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3785142   +* Grp2: StartGroup;
MPRINT(SCORETABLES):   * Grp2: StartGroup;
3785143   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3785144   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3785145   +* Group: ^(cv_var =4);
MPRINT(SCORETABLES):   * Group: ^(cv_var =4);
3785146   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3785147   +if (cv_var =4)  then do;
MPRINT(SCORETABLES):   if (cv_var =4) then do;
3785148   +_XVAL_=4;
MPRINT(SCORETABLES):   _XVAL_=4;
3785149   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3785150   +* Tree2: DecisionTree;
MPRINT(SCORETABLES):   * Tree2: DecisionTree;
3785151   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3785152   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3785153   +* Group: ^(cv_var =4);
MPRINT(SCORETABLES):   * Group: ^(cv_var =4);
3785154   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3785155   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3785156   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3785157   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3785158   +
3785159   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3785160   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3785161   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3785162   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3785163   +
3785164   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3785165   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3785166   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3785167   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3785168   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3785169   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3785170   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3785171   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3785172   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3785173   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3785174   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3785175   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3785176   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3785177   +
3785178   +
3785179   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3785180   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3785181   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3785182   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_8 $ 8;
MPRINT(SCORETABLES):   DROP _ARBFMT_8;
3785183   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_8 = ' ';
3785184   +
3785185   +
3785186   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3785187   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3785188   +
3785189   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3785190   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3785191   +                 0.125 <= RANGE_campaign_acceptance  AND
3785192   +  RANGE_campaign_acceptance  <                0.375 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <=
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.375 THEN DO;
3785193   +  IF  NOT MISSING(RANGE_Recency ) AND
3785194   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888
THEN DO;
3785195   +    IF  NOT MISSING(MntCard_Games ) AND
3785196   +          0.37104462156395 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.37104462156395 <= MntCard_Games
THEN DO;
3785197   +      _NODE_  =                   22;
MPRINT(SCORETABLES):   _NODE_ = 22;
3785198   +      _LEAF_  =                   16;
MPRINT(SCORETABLES):   _LEAF_ = 16;
3785199   +      P_DepVar0  =     0.11290322580645;
MPRINT(SCORETABLES):   P_DepVar0 = 0.11290322580645;
3785200   +      P_DepVar1  =     0.88709677419354;
MPRINT(SCORETABLES):   P_DepVar1 = 0.88709677419354;
3785201   +      Q_DepVar0  =     0.11290322580645;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.11290322580645;
3785202   +      Q_DepVar1  =     0.88709677419354;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.88709677419354;
3785203   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785204   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785205   +      END;
MPRINT(SCORETABLES):   END;
3785206   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785207   +      IF  NOT MISSING(NumCatalogPurchases ) AND
3785208   +            0.27429467084639 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.27429467084639 <=
NumCatalogPurchases THEN DO;
3785209   +        _NODE_  =                   44;
MPRINT(SCORETABLES):   _NODE_ = 44;
3785210   +        _LEAF_  =                   15;
MPRINT(SCORETABLES):   _LEAF_ = 15;
3785211   +        P_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.33333333333333;
3785212   +        P_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.66666666666666;
3785213   +        Q_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.33333333333333;
3785214   +        Q_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.66666666666666;
3785215   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785216   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785217   +        END;
MPRINT(SCORETABLES):   END;
3785218   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785219   +        _NODE_  =                   43;
MPRINT(SCORETABLES):   _NODE_ = 43;
3785220   +        _LEAF_  =                   14;
MPRINT(SCORETABLES):   _LEAF_ = 14;
3785221   +        P_DepVar0  =     0.80701754385964;
MPRINT(SCORETABLES):   P_DepVar0 = 0.80701754385964;
3785222   +        P_DepVar1  =     0.19298245614035;
MPRINT(SCORETABLES):   P_DepVar1 = 0.19298245614035;
3785223   +        Q_DepVar0  =     0.80701754385964;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.80701754385964;
3785224   +        Q_DepVar1  =     0.19298245614035;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.19298245614035;
3785225   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785226   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785227   +        END;
MPRINT(SCORETABLES):   END;
3785228   +      END;
MPRINT(SCORETABLES):   END;
3785229   +    END;
MPRINT(SCORETABLES):   END;
3785230   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785231   +    IF  NOT MISSING(MntCard_Games ) AND
3785232   +          0.44932877072913 <= MntCard_Games  AND
3785233   +      MntCard_Games  <     0.61026789380447 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.44932877072913 <= MntCard_Games
AND MntCard_Games < 0.61026789380447 THEN DO;
3785234   +      IF  NOT MISSING(RANGE_Recency ) AND
3785235   +        RANGE_Recency  <     0.48989898989899 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.48989898989899
THEN DO;
3785236   +        _NODE_  =                   49;
MPRINT(SCORETABLES):   _NODE_ = 49;
3785237   +        _LEAF_  =                   18;
MPRINT(SCORETABLES):   _LEAF_ = 18;
3785238   +        P_DepVar0  =     0.14285714285714;
MPRINT(SCORETABLES):   P_DepVar0 = 0.14285714285714;
3785239   +        P_DepVar1  =     0.85714285714285;
MPRINT(SCORETABLES):   P_DepVar1 = 0.85714285714285;
3785240   +        Q_DepVar0  =     0.14285714285714;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.14285714285714;
3785241   +        Q_DepVar1  =     0.85714285714285;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.85714285714285;
3785242   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785243   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785244   +        END;
MPRINT(SCORETABLES):   END;
3785245   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785246   +        IF  NOT MISSING(NumDealsPurchases ) AND
3785247   +                         0.225 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.225 <= NumDealsPurchases THEN
DO;
3785248   +          _NODE_  =                   72;
MPRINT(SCORETABLES):   _NODE_ = 72;
3785249   +          _LEAF_  =                   20;
MPRINT(SCORETABLES):   _LEAF_ = 20;
3785250   +          P_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   P_DepVar0 = 0.4;
3785251   +          P_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   P_DepVar1 = 0.6;
3785252   +          Q_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.4;
3785253   +          Q_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.6;
3785254   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785255   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785256   +          END;
MPRINT(SCORETABLES):   END;
3785257   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785258   +          _NODE_  =                   71;
MPRINT(SCORETABLES):   _NODE_ = 71;
3785259   +          _LEAF_  =                   19;
MPRINT(SCORETABLES):   _LEAF_ = 19;
3785260   +          P_DepVar0  =     0.97368421052631;
MPRINT(SCORETABLES):   P_DepVar0 = 0.97368421052631;
3785261   +          P_DepVar1  =     0.02631578947368;
MPRINT(SCORETABLES):   P_DepVar1 = 0.02631578947368;
3785262   +          Q_DepVar0  =     0.97368421052631;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.97368421052631;
3785263   +          Q_DepVar1  =     0.02631578947368;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.02631578947368;
3785264   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785265   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785266   +          END;
MPRINT(SCORETABLES):   END;
3785267   +        END;
MPRINT(SCORETABLES):   END;
3785268   +      END;
MPRINT(SCORETABLES):   END;
3785269   +    ELSE IF  NOT MISSING(MntCard_Games ) AND
3785270   +          0.61026789380447 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntCard_Games ) AND 0.61026789380447 <=
MntCard_Games THEN DO;
3785271   +      _NODE_  =                   25;
MPRINT(SCORETABLES):   _NODE_ = 25;
3785272   +      _LEAF_  =                   21;
MPRINT(SCORETABLES):   _LEAF_ = 21;
3785273   +      P_DepVar0  =                0.375;
MPRINT(SCORETABLES):   P_DepVar0 = 0.375;
3785274   +      P_DepVar1  =                0.625;
MPRINT(SCORETABLES):   P_DepVar1 = 0.625;
3785275   +      Q_DepVar0  =                0.375;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.375;
3785276   +      Q_DepVar1  =                0.625;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.625;
3785277   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785278   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785279   +      END;
MPRINT(SCORETABLES):   END;
3785280   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785281   +      _NODE_  =                   23;
MPRINT(SCORETABLES):   _NODE_ = 23;
3785282   +      _LEAF_  =                   17;
MPRINT(SCORETABLES):   _LEAF_ = 17;
3785283   +      P_DepVar0  =     0.97435897435897;
MPRINT(SCORETABLES):   P_DepVar0 = 0.97435897435897;
3785284   +      P_DepVar1  =     0.02564102564102;
MPRINT(SCORETABLES):   P_DepVar1 = 0.02564102564102;
3785285   +      Q_DepVar0  =     0.97435897435897;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.97435897435897;
3785286   +      Q_DepVar1  =     0.02564102564102;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.02564102564102;
3785287   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785288   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785289   +      END;
MPRINT(SCORETABLES):   END;
3785290   +    END;
MPRINT(SCORETABLES):   END;
3785291   +  END;
MPRINT(SCORETABLES):   END;
3785292   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3785293   +                 0.375 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.375 <=
RANGE_campaign_acceptance THEN DO;
3785294   +  IF  NOT MISSING(RANGE_Recency ) AND
3785295   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888
THEN DO;
3785296   +    IF  NOT MISSING(RANGE_average_purchase ) AND
3785297   +      RANGE_average_purchase  <     0.19601153776757 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_average_purchase ) AND RANGE_average_purchase <
0.19601153776757 THEN DO;
3785298   +      _NODE_  =                   26;
MPRINT(SCORETABLES):   _NODE_ = 26;
3785299   +      _LEAF_  =                   22;
MPRINT(SCORETABLES):   _LEAF_ = 22;
3785300   +      P_DepVar0  =                  0.6;
MPRINT(SCORETABLES):   P_DepVar0 = 0.6;
3785301   +      P_DepVar1  =                  0.4;
MPRINT(SCORETABLES):   P_DepVar1 = 0.4;
3785302   +      Q_DepVar0  =                  0.6;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.6;
3785303   +      Q_DepVar1  =                  0.4;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.4;
3785304   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785305   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785306   +      END;
MPRINT(SCORETABLES):   END;
3785307   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785308   +      _NODE_  =                   27;
MPRINT(SCORETABLES):   _NODE_ = 27;
3785309   +      _LEAF_  =                   23;
MPRINT(SCORETABLES):   _LEAF_ = 23;
3785310   +      P_DepVar0  =                 0.04;
MPRINT(SCORETABLES):   P_DepVar0 = 0.04;
3785311   +      P_DepVar1  =                 0.96;
MPRINT(SCORETABLES):   P_DepVar1 = 0.96;
3785312   +      Q_DepVar0  =                 0.04;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.04;
3785313   +      Q_DepVar1  =                 0.96;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.96;
3785314   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785315   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785316   +      END;
MPRINT(SCORETABLES):   END;
3785317   +    END;
MPRINT(SCORETABLES):   END;
3785318   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3785319   +        0.38888888888888 <= RANGE_Recency  AND
3785320   +    RANGE_Recency  <     0.63131313131313 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.38888888888888 <=
RANGE_Recency AND RANGE_Recency < 0.63131313131313 THEN DO;
3785321   +    IF  NOT MISSING(NumCatalogPurchases ) AND
3785322   +          0.32085561497326 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.32085561497326 <=
NumCatalogPurchases THEN DO;
3785323   +      _NODE_  =                   29;
MPRINT(SCORETABLES):   _NODE_ = 29;
3785324   +      _LEAF_  =                   25;
MPRINT(SCORETABLES):   _LEAF_ = 25;
3785325   +      P_DepVar0  =     0.05882352941176;
MPRINT(SCORETABLES):   P_DepVar0 = 0.05882352941176;
3785326   +      P_DepVar1  =     0.94117647058823;
MPRINT(SCORETABLES):   P_DepVar1 = 0.94117647058823;
3785327   +      Q_DepVar0  =     0.05882352941176;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.05882352941176;
3785328   +      Q_DepVar1  =     0.94117647058823;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.94117647058823;
3785329   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785330   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785331   +      END;
MPRINT(SCORETABLES):   END;
3785332   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785333   +      _NODE_  =                   28;
MPRINT(SCORETABLES):   _NODE_ = 28;
3785334   +      _LEAF_  =                   24;
MPRINT(SCORETABLES):   _LEAF_ = 24;
3785335   +      P_DepVar0  =     0.77272727272727;
MPRINT(SCORETABLES):   P_DepVar0 = 0.77272727272727;
3785336   +      P_DepVar1  =     0.22727272727272;
MPRINT(SCORETABLES):   P_DepVar1 = 0.22727272727272;
3785337   +      Q_DepVar0  =     0.77272727272727;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.77272727272727;
3785338   +      Q_DepVar1  =     0.22727272727272;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.22727272727272;
3785339   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785340   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785341   +      END;
MPRINT(SCORETABLES):   END;
3785342   +    END;
MPRINT(SCORETABLES):   END;
3785343   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785344   +    _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(SCORETABLES):   _ARBFMT_8 = PUT( Marital_Status , $8.);
3785345   +     %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(SCORETABLES):  ;
3785346   +    IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
MPRINT(SCORETABLES):   IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
3785347   +      _NODE_  =                   30;
MPRINT(SCORETABLES):   _NODE_ = 30;
3785348   +      _LEAF_  =                   26;
MPRINT(SCORETABLES):   _LEAF_ = 26;
3785349   +      P_DepVar0  =     0.90243902439024;
MPRINT(SCORETABLES):   P_DepVar0 = 0.90243902439024;
3785350   +      P_DepVar1  =     0.09756097560975;
MPRINT(SCORETABLES):   P_DepVar1 = 0.09756097560975;
3785351   +      Q_DepVar0  =     0.90243902439024;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.90243902439024;
3785352   +      Q_DepVar1  =     0.09756097560975;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.09756097560975;
3785353   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785354   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785355   +      END;
MPRINT(SCORETABLES):   END;
3785356   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785357   +      IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3785358   +        RANGE_campaign_acceptance  <                0.625 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND
RANGE_campaign_acceptance < 0.625 THEN DO;
3785359   +        _NODE_  =                   53;
MPRINT(SCORETABLES):   _NODE_ = 53;
3785360   +        _LEAF_  =                   27;
MPRINT(SCORETABLES):   _LEAF_ = 27;
3785361   +        P_DepVar0  =     0.85714285714285;
MPRINT(SCORETABLES):   P_DepVar0 = 0.85714285714285;
3785362   +        P_DepVar1  =     0.14285714285714;
MPRINT(SCORETABLES):   P_DepVar1 = 0.14285714285714;
3785363   +        Q_DepVar0  =     0.85714285714285;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.85714285714285;
3785364   +        Q_DepVar1  =     0.14285714285714;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.14285714285714;
3785365   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785366   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785367   +        END;
MPRINT(SCORETABLES):   END;
3785368   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785369   +        _NODE_  =                   54;
MPRINT(SCORETABLES):   _NODE_ = 54;
3785370   +        _LEAF_  =                   28;
MPRINT(SCORETABLES):   _LEAF_ = 28;
3785371   +        P_DepVar0  =                0.125;
MPRINT(SCORETABLES):   P_DepVar0 = 0.125;
3785372   +        P_DepVar1  =                0.875;
MPRINT(SCORETABLES):   P_DepVar1 = 0.875;
3785373   +        Q_DepVar0  =                0.125;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.125;
3785374   +        Q_DepVar1  =                0.875;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.875;
3785375   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785376   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785377   +        END;
MPRINT(SCORETABLES):   END;
3785378   +      END;
MPRINT(SCORETABLES):   END;
3785379   +    END;
MPRINT(SCORETABLES):   END;
3785380   +  END;
MPRINT(SCORETABLES):   END;
3785381   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785382   +  IF  NOT MISSING(RANGE_Recency ) AND
3785383   +    RANGE_Recency  <     0.08585858585858 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.08585858585858
THEN DO;
3785384   +    IF  NOT MISSING(MntCard_Games ) AND
3785385   +          0.49545604758757 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.49545604758757 <= MntCard_Games
THEN DO;
3785386   +      _NODE_  =                   14;
MPRINT(SCORETABLES):   _NODE_ = 14;
3785387   +      _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3785388   +      P_DepVar0  =      0.2258064516129;
MPRINT(SCORETABLES):   P_DepVar0 = 0.2258064516129;
3785389   +      P_DepVar1  =     0.77419354838709;
MPRINT(SCORETABLES):   P_DepVar1 = 0.77419354838709;
3785390   +      Q_DepVar0  =      0.2258064516129;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.2258064516129;
3785391   +      Q_DepVar1  =     0.77419354838709;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.77419354838709;
3785392   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785393   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785394   +      END;
MPRINT(SCORETABLES):   END;
3785395   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785396   +      IF  NOT MISSING(NumDealsPurchases ) AND
3785397   +            0.14835164835164 <= NumDealsPurchases  AND
3785398   +        NumDealsPurchases  <     0.37037037037037 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.14835164835164 <=
NumDealsPurchases AND NumDealsPurchases < 0.37037037037037 THEN DO;
3785399   +        IF  NOT MISSING(MntCard_Games ) AND
3785400   +              0.31347795163584 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.31347795163584 <= MntCard_Games
THEN DO;
3785401   +          _NODE_  =                   58;
MPRINT(SCORETABLES):   _NODE_ = 58;
3785402   +          _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3785403   +          P_DepVar0  =     0.47826086956521;
MPRINT(SCORETABLES):   P_DepVar0 = 0.47826086956521;
3785404   +          P_DepVar1  =     0.52173913043478;
MPRINT(SCORETABLES):   P_DepVar1 = 0.52173913043478;
3785405   +          Q_DepVar0  =     0.47826086956521;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.47826086956521;
3785406   +          Q_DepVar1  =     0.52173913043478;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.52173913043478;
3785407   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785408   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785409   +          END;
MPRINT(SCORETABLES):   END;
3785410   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785411   +          _NODE_  =                   57;
MPRINT(SCORETABLES):   _NODE_ = 57;
3785412   +          _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3785413   +          P_DepVar0  =     0.92857142857142;
MPRINT(SCORETABLES):   P_DepVar0 = 0.92857142857142;
3785414   +          P_DepVar1  =     0.07142857142857;
MPRINT(SCORETABLES):   P_DepVar1 = 0.07142857142857;
3785415   +          Q_DepVar0  =     0.92857142857142;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.92857142857142;
3785416   +          Q_DepVar1  =     0.07142857142857;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.07142857142857;
3785417   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785418   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785419   +          END;
MPRINT(SCORETABLES):   END;
3785420   +        END;
MPRINT(SCORETABLES):   END;
3785421   +      ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3785422   +            0.37037037037037 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.37037037037037 <=
NumDealsPurchases THEN DO;
3785423   +        _NODE_  =                   34;
MPRINT(SCORETABLES):   _NODE_ = 34;
3785424   +        _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3785425   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3785426   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3785427   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3785428   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3785429   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785430   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785431   +        END;
MPRINT(SCORETABLES):   END;
3785432   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785433   +        _NODE_  =                   32;
MPRINT(SCORETABLES):   _NODE_ = 32;
3785434   +        _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3785435   +        P_DepVar0  =     0.95714285714285;
MPRINT(SCORETABLES):   P_DepVar0 = 0.95714285714285;
3785436   +        P_DepVar1  =     0.04285714285714;
MPRINT(SCORETABLES):   P_DepVar1 = 0.04285714285714;
3785437   +        Q_DepVar0  =     0.95714285714285;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.95714285714285;
3785438   +        Q_DepVar1  =     0.04285714285714;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.04285714285714;
3785439   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785440   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785441   +        END;
MPRINT(SCORETABLES):   END;
3785442   +      END;
MPRINT(SCORETABLES):   END;
3785443   +    END;
MPRINT(SCORETABLES):   END;
3785444   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3785445   +        0.08585858585858 <= RANGE_Recency  AND
3785446   +    RANGE_Recency  <     0.32828282828282 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.08585858585858 <=
RANGE_Recency AND RANGE_Recency < 0.32828282828282 THEN DO;
3785447   +    IF  NOT MISSING(MntCard_Games ) AND
3785448   +          0.41233448947554 <= MntCard_Games  AND
3785449   +      MntCard_Games  <     0.64616340478409 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.41233448947554 <= MntCard_Games
AND MntCard_Games < 0.64616340478409 THEN DO;
3785450   +      IF  NOT MISSING(NumDealsPurchases ) AND
3785451   +            0.20344827586206 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.20344827586206 <=
NumDealsPurchases THEN DO;
3785452   +        _NODE_  =                   39;
MPRINT(SCORETABLES):   _NODE_ = 39;
3785453   +        _LEAF_  =                   11;
MPRINT(SCORETABLES):   _LEAF_ = 11;
3785454   +        P_DepVar0  =     0.37037037037037;
MPRINT(SCORETABLES):   P_DepVar0 = 0.37037037037037;
3785455   +        P_DepVar1  =     0.62962962962962;
MPRINT(SCORETABLES):   P_DepVar1 = 0.62962962962962;
3785456   +        Q_DepVar0  =     0.37037037037037;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.37037037037037;
3785457   +        Q_DepVar1  =     0.62962962962962;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.62962962962962;
3785458   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785459   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785460   +        END;
MPRINT(SCORETABLES):   END;
3785461   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785462   +        IF  NOT MISSING(NumCatalogPurchases ) AND
3785463   +              0.34057971014492 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.34057971014492 <=
NumCatalogPurchases THEN DO;
3785464   +          _NODE_  =                   62;
MPRINT(SCORETABLES):   _NODE_ = 62;
3785465   +          _LEAF_  =                   10;
MPRINT(SCORETABLES):   _LEAF_ = 10;
3785466   +          P_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   P_DepVar0 = 0.4;
3785467   +          P_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   P_DepVar1 = 0.6;
3785468   +          Q_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.4;
3785469   +          Q_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.6;
3785470   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785471   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785472   +          END;
MPRINT(SCORETABLES):   END;
3785473   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785474   +          _NODE_  =                   61;
MPRINT(SCORETABLES):   _NODE_ = 61;
3785475   +          _LEAF_  =                    9;
MPRINT(SCORETABLES):   _LEAF_ = 9;
3785476   +          P_DepVar0  =     0.91208791208791;
MPRINT(SCORETABLES):   P_DepVar0 = 0.91208791208791;
3785477   +          P_DepVar1  =     0.08791208791208;
MPRINT(SCORETABLES):   P_DepVar1 = 0.08791208791208;
3785478   +          Q_DepVar0  =     0.91208791208791;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.91208791208791;
3785479   +          Q_DepVar1  =     0.08791208791208;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.08791208791208;
3785480   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785481   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785482   +          END;
MPRINT(SCORETABLES):   END;
3785483   +        END;
MPRINT(SCORETABLES):   END;
3785484   +      END;
MPRINT(SCORETABLES):   END;
3785485   +    ELSE IF  NOT MISSING(MntCard_Games ) AND
3785486   +          0.64616340478409 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntCard_Games ) AND 0.64616340478409 <=
MntCard_Games THEN DO;
3785487   +      _NODE_  =                   17;
MPRINT(SCORETABLES):   _NODE_ = 17;
3785488   +      _LEAF_  =                   12;
MPRINT(SCORETABLES):   _LEAF_ = 12;
3785489   +      P_DepVar0  =     0.11111111111111;
MPRINT(SCORETABLES):   P_DepVar0 = 0.11111111111111;
3785490   +      P_DepVar1  =     0.88888888888888;
MPRINT(SCORETABLES):   P_DepVar1 = 0.88888888888888;
3785491   +      Q_DepVar0  =     0.11111111111111;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.11111111111111;
3785492   +      Q_DepVar1  =     0.88888888888888;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.88888888888888;
3785493   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785494   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785495   +      END;
MPRINT(SCORETABLES):   END;
3785496   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785497   +      IF  NOT MISSING(NumDealsPurchases ) AND
3785498   +            0.27157894736842 <= NumDealsPurchases  AND
3785499   +        NumDealsPurchases  <     0.32291666666666 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.27157894736842 <=
NumDealsPurchases AND NumDealsPurchases < 0.32291666666666 THEN DO;
3785500   +        _NODE_  =                   36;
MPRINT(SCORETABLES):   _NODE_ = 36;
3785501   +        _LEAF_  =                    7;
MPRINT(SCORETABLES):   _LEAF_ = 7;
3785502   +        P_DepVar0  =     0.78947368421052;
MPRINT(SCORETABLES):   P_DepVar0 = 0.78947368421052;
3785503   +        P_DepVar1  =     0.21052631578947;
MPRINT(SCORETABLES):   P_DepVar1 = 0.21052631578947;
3785504   +        Q_DepVar0  =     0.78947368421052;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.78947368421052;
3785505   +        Q_DepVar1  =     0.21052631578947;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.21052631578947;
3785506   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785507   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785508   +        END;
MPRINT(SCORETABLES):   END;
3785509   +      ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3785510   +            0.32291666666666 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.32291666666666 <=
NumDealsPurchases THEN DO;
3785511   +        _NODE_  =                   37;
MPRINT(SCORETABLES):   _NODE_ = 37;
3785512   +        _LEAF_  =                    8;
MPRINT(SCORETABLES):   _LEAF_ = 8;
3785513   +        P_DepVar0  =                  0.2;
MPRINT(SCORETABLES):   P_DepVar0 = 0.2;
3785514   +        P_DepVar1  =                  0.8;
MPRINT(SCORETABLES):   P_DepVar1 = 0.8;
3785515   +        Q_DepVar0  =                  0.2;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.2;
3785516   +        Q_DepVar1  =                  0.8;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.8;
3785517   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785518   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785519   +        END;
MPRINT(SCORETABLES):   END;
3785520   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785521   +        _NODE_  =                   35;
MPRINT(SCORETABLES):   _NODE_ = 35;
3785522   +        _LEAF_  =                    6;
MPRINT(SCORETABLES):   _LEAF_ = 6;
3785523   +        P_DepVar0  =     0.98084291187739;
MPRINT(SCORETABLES):   P_DepVar0 = 0.98084291187739;
3785524   +        P_DepVar1  =      0.0191570881226;
MPRINT(SCORETABLES):   P_DepVar1 = 0.0191570881226;
3785525   +        Q_DepVar0  =     0.98084291187739;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.98084291187739;
3785526   +        Q_DepVar1  =      0.0191570881226;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.0191570881226;
3785527   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785528   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785529   +        END;
MPRINT(SCORETABLES):   END;
3785530   +      END;
MPRINT(SCORETABLES):   END;
3785531   +    END;
MPRINT(SCORETABLES):   END;
3785532   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785533   +    _NODE_  =                    7;
MPRINT(SCORETABLES):   _NODE_ = 7;
3785534   +    _LEAF_  =                   13;
MPRINT(SCORETABLES):   _LEAF_ = 13;
3785535   +    P_DepVar0  =     0.99002719854941;
MPRINT(SCORETABLES):   P_DepVar0 = 0.99002719854941;
3785536   +    P_DepVar1  =     0.00997280145058;
MPRINT(SCORETABLES):   P_DepVar1 = 0.00997280145058;
3785537   +    Q_DepVar0  =     0.99002719854941;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.99002719854941;
3785538   +    Q_DepVar1  =     0.00997280145058;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.00997280145058;
3785539   +    I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785540   +    U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785541   +    END;
MPRINT(SCORETABLES):   END;
3785542   +  END;
MPRINT(SCORETABLES):   END;
3785543   +
3785544   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3785545   +IF  F_DepVar  NE '0'
3785546   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3785547   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3785548   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3785549   + END;
MPRINT(SCORETABLES):   END;
3785550   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785551   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3785552   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3785553   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3785554   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3785555   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3785556   +       END;
MPRINT(SCORETABLES):   END;
3785557   + END;
MPRINT(SCORETABLES):   END;
3785558   +
3785559   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3785560   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3785561   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3785562   +
3785563   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3785564   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3785565   +* EndGrp2: EndGroup;
MPRINT(SCORETABLES):   * EndGrp2: EndGroup;
3785566   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3785567   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3785568   +* Group: ^(cv_var =4);
MPRINT(SCORETABLES):   * Group: ^(cv_var =4);
3785569   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3785570   +end;
MPRINT(SCORETABLES):   end;
3785571   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3785572   +* Grp2: StartGroup;
MPRINT(SCORETABLES):   * Grp2: StartGroup;
3785573   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3785574   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3785575   +* Group: ^(cv_var =5);
MPRINT(SCORETABLES):   * Group: ^(cv_var =5);
3785576   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3785577   +if (cv_var =5)  then do;
MPRINT(SCORETABLES):   if (cv_var =5) then do;
3785578   +_XVAL_=5;
MPRINT(SCORETABLES):   _XVAL_=5;
3785579   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3785580   +* Tree2: DecisionTree;
MPRINT(SCORETABLES):   * Tree2: DecisionTree;
3785581   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3785582   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3785583   +* Group: ^(cv_var =5);
MPRINT(SCORETABLES):   * Group: ^(cv_var =5);
3785584   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3785585   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3785586   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3785587   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3785588   +
3785589   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3785590   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3785591   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3785592   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3785593   +
3785594   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3785595   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3785596   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3785597   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3785598   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3785599   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3785600   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3785601   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3785602   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3785603   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3785604   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3785605   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3785606   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3785607   +
3785608   +
3785609   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3785610   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3785611   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3785612   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_8 $ 8;
MPRINT(SCORETABLES):   DROP _ARBFMT_8;
3785613   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_8 = ' ';
3785614   +
3785615   +
3785616   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3785617   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3785618   +
3785619   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3785620   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3785621   +                 0.125 <= RANGE_campaign_acceptance  AND
3785622   +  RANGE_campaign_acceptance  <                0.375 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <=
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.375 THEN DO;
3785623   +  IF  NOT MISSING(RANGE_Recency ) AND
3785624   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888
THEN DO;
3785625   +    IF  NOT MISSING(MntCard_Games ) AND
3785626   +          0.37104462156395 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.37104462156395 <= MntCard_Games
THEN DO;
3785627   +      _NODE_  =                   21;
MPRINT(SCORETABLES):   _NODE_ = 21;
3785628   +      _LEAF_  =                   16;
MPRINT(SCORETABLES):   _LEAF_ = 16;
3785629   +      P_DepVar0  =      0.0983606557377;
MPRINT(SCORETABLES):   P_DepVar0 = 0.0983606557377;
3785630   +      P_DepVar1  =     0.90163934426229;
MPRINT(SCORETABLES):   P_DepVar1 = 0.90163934426229;
3785631   +      Q_DepVar0  =      0.0983606557377;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.0983606557377;
3785632   +      Q_DepVar1  =     0.90163934426229;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.90163934426229;
3785633   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785634   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785635   +      END;
MPRINT(SCORETABLES):   END;
3785636   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785637   +      IF  NOT MISSING(NumCatalogPurchases ) AND
3785638   +            0.24068965517241 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.24068965517241 <=
NumCatalogPurchases THEN DO;
3785639   +        IF  NOT MISSING(NumDealsPurchases ) AND
3785640   +              0.11896551724137 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.11896551724137 <=
NumDealsPurchases THEN DO;
3785641   +          _NODE_  =                   62;
MPRINT(SCORETABLES):   _NODE_ = 62;
3785642   +          _LEAF_  =                   15;
MPRINT(SCORETABLES):   _LEAF_ = 15;
3785643   +          P_DepVar0  =     0.07142857142857;
MPRINT(SCORETABLES):   P_DepVar0 = 0.07142857142857;
3785644   +          P_DepVar1  =     0.92857142857142;
MPRINT(SCORETABLES):   P_DepVar1 = 0.92857142857142;
3785645   +          Q_DepVar0  =     0.07142857142857;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.07142857142857;
3785646   +          Q_DepVar1  =     0.92857142857142;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.92857142857142;
3785647   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785648   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785649   +          END;
MPRINT(SCORETABLES):   END;
3785650   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785651   +          _NODE_  =                   61;
MPRINT(SCORETABLES):   _NODE_ = 61;
3785652   +          _LEAF_  =                   14;
MPRINT(SCORETABLES):   _LEAF_ = 14;
3785653   +          P_DepVar0  =     0.61904761904761;
MPRINT(SCORETABLES):   P_DepVar0 = 0.61904761904761;
3785654   +          P_DepVar1  =     0.38095238095238;
MPRINT(SCORETABLES):   P_DepVar1 = 0.38095238095238;
3785655   +          Q_DepVar0  =     0.61904761904761;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.61904761904761;
3785656   +          Q_DepVar1  =     0.38095238095238;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.38095238095238;
3785657   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785658   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785659   +          END;
MPRINT(SCORETABLES):   END;
3785660   +        END;
MPRINT(SCORETABLES):   END;
3785661   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785662   +        _NODE_  =                   38;
MPRINT(SCORETABLES):   _NODE_ = 38;
3785663   +        _LEAF_  =                   13;
MPRINT(SCORETABLES):   _LEAF_ = 13;
3785664   +        P_DepVar0  =     0.84090909090909;
MPRINT(SCORETABLES):   P_DepVar0 = 0.84090909090909;
3785665   +        P_DepVar1  =      0.1590909090909;
MPRINT(SCORETABLES):   P_DepVar1 = 0.1590909090909;
3785666   +        Q_DepVar0  =     0.84090909090909;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.84090909090909;
3785667   +        Q_DepVar1  =      0.1590909090909;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.1590909090909;
3785668   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785669   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785670   +        END;
MPRINT(SCORETABLES):   END;
3785671   +      END;
MPRINT(SCORETABLES):   END;
3785672   +    END;
MPRINT(SCORETABLES):   END;
3785673   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785674   +    IF  NOT MISSING(NumDealsPurchases ) AND
3785675   +          0.37626262626262 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.37626262626262 <=
NumDealsPurchases THEN DO;
3785676   +      IF  NOT MISSING(RANGE_average_purchase ) AND
3785677   +        RANGE_average_purchase  <     0.16532714796529 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_average_purchase ) AND RANGE_average_purchase <
0.16532714796529 THEN DO;
3785678   +        _NODE_  =                   45;
MPRINT(SCORETABLES):   _NODE_ = 45;
3785679   +        _LEAF_  =                   18;
MPRINT(SCORETABLES):   _LEAF_ = 18;
3785680   +        P_DepVar0  =                  0.8;
MPRINT(SCORETABLES):   P_DepVar0 = 0.8;
3785681   +        P_DepVar1  =                  0.2;
MPRINT(SCORETABLES):   P_DepVar1 = 0.2;
3785682   +        Q_DepVar0  =                  0.8;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.8;
3785683   +        Q_DepVar1  =                  0.2;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.2;
3785684   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785685   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785686   +        END;
MPRINT(SCORETABLES):   END;
3785687   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785688   +        _NODE_  =                   46;
MPRINT(SCORETABLES):   _NODE_ = 46;
3785689   +        _LEAF_  =                   19;
MPRINT(SCORETABLES):   _LEAF_ = 19;
3785690   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3785691   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3785692   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3785693   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3785694   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785695   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785696   +        END;
MPRINT(SCORETABLES):   END;
3785697   +      END;
MPRINT(SCORETABLES):   END;
3785698   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785699   +      _NODE_  =                   22;
MPRINT(SCORETABLES):   _NODE_ = 22;
3785700   +      _LEAF_  =                   17;
MPRINT(SCORETABLES):   _LEAF_ = 17;
3785701   +      P_DepVar0  =     0.93333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.93333333333333;
3785702   +      P_DepVar1  =     0.06666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.06666666666666;
3785703   +      Q_DepVar0  =     0.93333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.93333333333333;
3785704   +      Q_DepVar1  =     0.06666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.06666666666666;
3785705   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785706   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785707   +      END;
MPRINT(SCORETABLES):   END;
3785708   +    END;
MPRINT(SCORETABLES):   END;
3785709   +  END;
MPRINT(SCORETABLES):   END;
3785710   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3785711   +                 0.375 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.375 <=
RANGE_campaign_acceptance THEN DO;
3785712   +  IF  NOT MISSING(RANGE_Recency ) AND
3785713   +    RANGE_Recency  <     0.44949494949494 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.44949494949494
THEN DO;
3785714   +    _NODE_  =                   10;
MPRINT(SCORETABLES):   _NODE_ = 10;
3785715   +    _LEAF_  =                   20;
MPRINT(SCORETABLES):   _LEAF_ = 20;
3785716   +    P_DepVar0  =     0.13846153846153;
MPRINT(SCORETABLES):   P_DepVar0 = 0.13846153846153;
3785717   +    P_DepVar1  =     0.86153846153846;
MPRINT(SCORETABLES):   P_DepVar1 = 0.86153846153846;
3785718   +    Q_DepVar0  =     0.13846153846153;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.13846153846153;
3785719   +    Q_DepVar1  =     0.86153846153846;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.86153846153846;
3785720   +    I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785721   +    U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785722   +    END;
MPRINT(SCORETABLES):   END;
3785723   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785724   +    IF  NOT MISSING(MntCard_Games ) AND
3785725   +          0.52440244032449 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.52440244032449 <= MntCard_Games
THEN DO;
3785726   +      _NODE_  =                   25;
MPRINT(SCORETABLES):   _NODE_ = 25;
3785727   +      _LEAF_  =                   24;
MPRINT(SCORETABLES):   _LEAF_ = 24;
3785728   +      P_DepVar0  =     0.23529411764705;
MPRINT(SCORETABLES):   P_DepVar0 = 0.23529411764705;
3785729   +      P_DepVar1  =     0.76470588235294;
MPRINT(SCORETABLES):   P_DepVar1 = 0.76470588235294;
3785730   +      Q_DepVar0  =     0.23529411764705;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.23529411764705;
3785731   +      Q_DepVar1  =     0.76470588235294;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.76470588235294;
3785732   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785733   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785734   +      END;
MPRINT(SCORETABLES):   END;
3785735   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785736   +      IF  NOT MISSING(NumCatalogPurchases ) AND
3785737   +            0.31965944272445 <= NumCatalogPurchases  AND
3785738   +        NumCatalogPurchases  <      0.4068287037037 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.31965944272445 <=
NumCatalogPurchases AND NumCatalogPurchases < 0.4068287037037 THEN DO;
3785739   +        _NODE_  =                   48;
MPRINT(SCORETABLES):   _NODE_ = 48;
3785740   +        _LEAF_  =                   22;
MPRINT(SCORETABLES):   _LEAF_ = 22;
3785741   +        P_DepVar0  =     0.27272727272727;
MPRINT(SCORETABLES):   P_DepVar0 = 0.27272727272727;
3785742   +        P_DepVar1  =     0.72727272727272;
MPRINT(SCORETABLES):   P_DepVar1 = 0.72727272727272;
3785743   +        Q_DepVar0  =     0.27272727272727;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.27272727272727;
3785744   +        Q_DepVar1  =     0.72727272727272;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.72727272727272;
3785745   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785746   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785747   +        END;
MPRINT(SCORETABLES):   END;
3785748   +      ELSE IF  NOT MISSING(NumCatalogPurchases ) AND
3785749   +             0.4068287037037 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumCatalogPurchases ) AND 0.4068287037037 <=
NumCatalogPurchases THEN DO;
3785750   +        _NODE_  =                   49;
MPRINT(SCORETABLES):   _NODE_ = 49;
3785751   +        _LEAF_  =                   23;
MPRINT(SCORETABLES):   _LEAF_ = 23;
3785752   +        P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3785753   +        P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3785754   +        Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3785755   +        Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3785756   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785757   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785758   +        END;
MPRINT(SCORETABLES):   END;
3785759   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785760   +        _NODE_  =                   47;
MPRINT(SCORETABLES):   _NODE_ = 47;
3785761   +        _LEAF_  =                   21;
MPRINT(SCORETABLES):   _LEAF_ = 21;
3785762   +        P_DepVar0  =     0.90566037735849;
MPRINT(SCORETABLES):   P_DepVar0 = 0.90566037735849;
3785763   +        P_DepVar1  =      0.0943396226415;
MPRINT(SCORETABLES):   P_DepVar1 = 0.0943396226415;
3785764   +        Q_DepVar0  =     0.90566037735849;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.90566037735849;
3785765   +        Q_DepVar1  =      0.0943396226415;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.0943396226415;
3785766   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785767   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785768   +        END;
MPRINT(SCORETABLES):   END;
3785769   +      END;
MPRINT(SCORETABLES):   END;
3785770   +    END;
MPRINT(SCORETABLES):   END;
3785771   +  END;
MPRINT(SCORETABLES):   END;
3785772   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785773   +  IF  NOT MISSING(RANGE_Recency ) AND
3785774   +    RANGE_Recency  <     0.08585858585858 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.08585858585858
THEN DO;
3785775   +    IF  NOT MISSING(MntCard_Games ) AND
3785776   +          0.49545604758757 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.49545604758757 <= MntCard_Games
THEN DO;
3785777   +      _NODE_  =                   13;
MPRINT(SCORETABLES):   _NODE_ = 13;
3785778   +      _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3785779   +      P_DepVar0  =                 0.25;
MPRINT(SCORETABLES):   P_DepVar0 = 0.25;
3785780   +      P_DepVar1  =                 0.75;
MPRINT(SCORETABLES):   P_DepVar1 = 0.75;
3785781   +      Q_DepVar0  =                 0.25;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.25;
3785782   +      Q_DepVar1  =                 0.75;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.75;
3785783   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785784   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785785   +      END;
MPRINT(SCORETABLES):   END;
3785786   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785787   +      IF  NOT MISSING(NumDealsPurchases ) AND
3785788   +            0.14835164835164 <= NumDealsPurchases  AND
3785789   +        NumDealsPurchases  <     0.37037037037037 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.14835164835164 <=
NumDealsPurchases AND NumDealsPurchases < 0.37037037037037 THEN DO;
3785790   +        _NODE_  =                   27;
MPRINT(SCORETABLES):   _NODE_ = 27;
3785791   +        _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3785792   +        P_DepVar0  =     0.73076923076923;
MPRINT(SCORETABLES):   P_DepVar0 = 0.73076923076923;
3785793   +        P_DepVar1  =     0.26923076923076;
MPRINT(SCORETABLES):   P_DepVar1 = 0.26923076923076;
3785794   +        Q_DepVar0  =     0.73076923076923;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.73076923076923;
3785795   +        Q_DepVar1  =     0.26923076923076;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.26923076923076;
3785796   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785797   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785798   +        END;
MPRINT(SCORETABLES):   END;
3785799   +      ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3785800   +            0.37037037037037 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.37037037037037 <=
NumDealsPurchases THEN DO;
3785801   +        _NODE_  =                   28;
MPRINT(SCORETABLES):   _NODE_ = 28;
3785802   +        _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3785803   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3785804   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3785805   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3785806   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3785807   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785808   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785809   +        END;
MPRINT(SCORETABLES):   END;
3785810   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785811   +        _NODE_  =                   26;
MPRINT(SCORETABLES):   _NODE_ = 26;
3785812   +        _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3785813   +        P_DepVar0  =     0.95714285714285;
MPRINT(SCORETABLES):   P_DepVar0 = 0.95714285714285;
3785814   +        P_DepVar1  =     0.04285714285714;
MPRINT(SCORETABLES):   P_DepVar1 = 0.04285714285714;
3785815   +        Q_DepVar0  =     0.95714285714285;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.95714285714285;
3785816   +        Q_DepVar1  =     0.04285714285714;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.04285714285714;
3785817   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785818   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785819   +        END;
MPRINT(SCORETABLES):   END;
3785820   +      END;
MPRINT(SCORETABLES):   END;
3785821   +    END;
MPRINT(SCORETABLES):   END;
3785822   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3785823   +        0.08585858585858 <= RANGE_Recency  AND
3785824   +    RANGE_Recency  <     0.35858585858585 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.08585858585858 <=
RANGE_Recency AND RANGE_Recency < 0.35858585858585 THEN DO;
3785825   +    IF  NOT MISSING(MntCard_Games ) AND
3785826   +          0.41233448947554 <= MntCard_Games  AND
3785827   +      MntCard_Games  <     0.64616340478409 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.41233448947554 <= MntCard_Games
AND MntCard_Games < 0.64616340478409 THEN DO;
3785828   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(SCORETABLES):   _ARBFMT_8 = PUT( Marital_Status , $8.);
3785829   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(SCORETABLES):  ;
3785830   +      IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
MPRINT(SCORETABLES):   IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
3785831   +        _NODE_  =                   32;
MPRINT(SCORETABLES):   _NODE_ = 32;
3785832   +        _LEAF_  =                    8;
MPRINT(SCORETABLES):   _LEAF_ = 8;
3785833   +        P_DepVar0  =     0.88235294117647;
MPRINT(SCORETABLES):   P_DepVar0 = 0.88235294117647;
3785834   +        P_DepVar1  =     0.11764705882352;
MPRINT(SCORETABLES):   P_DepVar1 = 0.11764705882352;
3785835   +        Q_DepVar0  =     0.88235294117647;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.88235294117647;
3785836   +        Q_DepVar1  =     0.11764705882352;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.11764705882352;
3785837   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785838   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785839   +        END;
MPRINT(SCORETABLES):   END;
3785840   +      ELSE IF _ARBFMT_8 IN ('SINGLE' ) THEN DO;
MPRINT(SCORETABLES):   ELSE IF _ARBFMT_8 IN ('SINGLE' ) THEN DO;
3785841   +        _NODE_  =                   33;
MPRINT(SCORETABLES):   _NODE_ = 33;
3785842   +        _LEAF_  =                    9;
MPRINT(SCORETABLES):   _LEAF_ = 9;
3785843   +        P_DepVar0  =     0.58333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.58333333333333;
3785844   +        P_DepVar1  =     0.41666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.41666666666666;
3785845   +        Q_DepVar0  =     0.58333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.58333333333333;
3785846   +        Q_DepVar1  =     0.41666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.41666666666666;
3785847   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785848   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785849   +        END;
MPRINT(SCORETABLES):   END;
3785850   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785851   +        _NODE_  =                   34;
MPRINT(SCORETABLES):   _NODE_ = 34;
3785852   +        _LEAF_  =                   10;
MPRINT(SCORETABLES):   _LEAF_ = 10;
3785853   +        P_DepVar0  =     0.27777777777777;
MPRINT(SCORETABLES):   P_DepVar0 = 0.27777777777777;
3785854   +        P_DepVar1  =     0.72222222222222;
MPRINT(SCORETABLES):   P_DepVar1 = 0.72222222222222;
3785855   +        Q_DepVar0  =     0.27777777777777;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.27777777777777;
3785856   +        Q_DepVar1  =     0.72222222222222;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.72222222222222;
3785857   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785858   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785859   +        END;
MPRINT(SCORETABLES):   END;
3785860   +      END;
MPRINT(SCORETABLES):   END;
3785861   +    ELSE IF  NOT MISSING(MntCard_Games ) AND
3785862   +          0.64616340478409 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntCard_Games ) AND 0.64616340478409 <=
MntCard_Games THEN DO;
3785863   +      _NODE_  =                   16;
MPRINT(SCORETABLES):   _NODE_ = 16;
3785864   +      _LEAF_  =                   11;
MPRINT(SCORETABLES):   _LEAF_ = 11;
3785865   +      P_DepVar0  =     0.21428571428571;
MPRINT(SCORETABLES):   P_DepVar0 = 0.21428571428571;
3785866   +      P_DepVar1  =     0.78571428571428;
MPRINT(SCORETABLES):   P_DepVar1 = 0.78571428571428;
3785867   +      Q_DepVar0  =     0.21428571428571;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.21428571428571;
3785868   +      Q_DepVar1  =     0.78571428571428;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.78571428571428;
3785869   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785870   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785871   +      END;
MPRINT(SCORETABLES):   END;
3785872   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785873   +      IF  NOT MISSING(NumDealsPurchases ) AND
3785874   +            0.24404761904761 <= NumDealsPurchases  AND
3785875   +        NumDealsPurchases  <     0.32291666666666 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.24404761904761 <=
NumDealsPurchases AND NumDealsPurchases < 0.32291666666666 THEN DO;
3785876   +        _NODE_  =                   30;
MPRINT(SCORETABLES):   _NODE_ = 30;
3785877   +        _LEAF_  =                    6;
MPRINT(SCORETABLES):   _LEAF_ = 6;
3785878   +        P_DepVar0  =     0.83333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.83333333333333;
3785879   +        P_DepVar1  =     0.16666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.16666666666666;
3785880   +        Q_DepVar0  =     0.83333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.83333333333333;
3785881   +        Q_DepVar1  =     0.16666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.16666666666666;
3785882   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785883   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785884   +        END;
MPRINT(SCORETABLES):   END;
3785885   +      ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3785886   +            0.32291666666666 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.32291666666666 <=
NumDealsPurchases THEN DO;
3785887   +        _NODE_  =                   31;
MPRINT(SCORETABLES):   _NODE_ = 31;
3785888   +        _LEAF_  =                    7;
MPRINT(SCORETABLES):   _LEAF_ = 7;
3785889   +        P_DepVar0  =                  0.2;
MPRINT(SCORETABLES):   P_DepVar0 = 0.2;
3785890   +        P_DepVar1  =                  0.8;
MPRINT(SCORETABLES):   P_DepVar1 = 0.8;
3785891   +        Q_DepVar0  =                  0.2;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.2;
3785892   +        Q_DepVar1  =                  0.8;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.8;
3785893   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3785894   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3785895   +        END;
MPRINT(SCORETABLES):   END;
3785896   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785897   +        _NODE_  =                   29;
MPRINT(SCORETABLES):   _NODE_ = 29;
3785898   +        _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3785899   +        P_DepVar0  =     0.98576512455516;
MPRINT(SCORETABLES):   P_DepVar0 = 0.98576512455516;
3785900   +        P_DepVar1  =     0.01423487544483;
MPRINT(SCORETABLES):   P_DepVar1 = 0.01423487544483;
3785901   +        Q_DepVar0  =     0.98576512455516;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.98576512455516;
3785902   +        Q_DepVar1  =     0.01423487544483;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.01423487544483;
3785903   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785904   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785905   +        END;
MPRINT(SCORETABLES):   END;
3785906   +      END;
MPRINT(SCORETABLES):   END;
3785907   +    END;
MPRINT(SCORETABLES):   END;
3785908   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785909   +    _NODE_  =                    7;
MPRINT(SCORETABLES):   _NODE_ = 7;
3785910   +    _LEAF_  =                   12;
MPRINT(SCORETABLES):   _LEAF_ = 12;
3785911   +    P_DepVar0  =     0.99146110056926;
MPRINT(SCORETABLES):   P_DepVar0 = 0.99146110056926;
3785912   +    P_DepVar1  =     0.00853889943074;
MPRINT(SCORETABLES):   P_DepVar1 = 0.00853889943074;
3785913   +    Q_DepVar0  =     0.99146110056926;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.99146110056926;
3785914   +    Q_DepVar1  =     0.00853889943074;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.00853889943074;
3785915   +    I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3785916   +    U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3785917   +    END;
MPRINT(SCORETABLES):   END;
3785918   +  END;
MPRINT(SCORETABLES):   END;
3785919   +
3785920   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3785921   +IF  F_DepVar  NE '0'
3785922   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3785923   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3785924   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3785925   + END;
MPRINT(SCORETABLES):   END;
3785926   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3785927   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3785928   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3785929   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3785930   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3785931   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3785932   +       END;
MPRINT(SCORETABLES):   END;
3785933   + END;
MPRINT(SCORETABLES):   END;
3785934   +
3785935   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3785936   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3785937   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3785938   +
3785939   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3785940   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3785941   +* EndGrp2: EndGroup;
MPRINT(SCORETABLES):   * EndGrp2: EndGroup;
3785942   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3785943   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3785944   +* Group: ^(cv_var =5);
MPRINT(SCORETABLES):   * Group: ^(cv_var =5);
3785945   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3785946   +end;
MPRINT(SCORETABLES):   end;
3785947   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3785948   +* Grp2: StartGroup;
MPRINT(SCORETABLES):   * Grp2: StartGroup;
3785949   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3785950   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3785951   +* Group: ^(cv_var =6);
MPRINT(SCORETABLES):   * Group: ^(cv_var =6);
3785952   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3785953   +if (cv_var =6)  then do;
MPRINT(SCORETABLES):   if (cv_var =6) then do;
3785954   +_XVAL_=6;
MPRINT(SCORETABLES):   _XVAL_=6;
3785955   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3785956   +* Tree2: DecisionTree;
MPRINT(SCORETABLES):   * Tree2: DecisionTree;
3785957   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3785958   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3785959   +* Group: ^(cv_var =6);
MPRINT(SCORETABLES):   * Group: ^(cv_var =6);
3785960   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3785961   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3785962   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3785963   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3785964   +
3785965   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3785966   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3785967   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3785968   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3785969   +
3785970   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3785971   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3785972   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3785973   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3785974   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3785975   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3785976   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3785977   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3785978   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3785979   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3785980   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3785981   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3785982   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3785983   +
3785984   +
3785985   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3785986   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3785987   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3785988   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_8 $ 8;
MPRINT(SCORETABLES):   DROP _ARBFMT_8;
3785989   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_8 = ' ';
3785990   +
3785991   +
3785992   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3785993   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3785994   +
3785995   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3785996   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3785997   +                 0.125 <= RANGE_campaign_acceptance  AND
3785998   +  RANGE_campaign_acceptance  <                0.375 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <=
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.375 THEN DO;
3785999   +  IF  NOT MISSING(RANGE_Recency ) AND
3786000   +    RANGE_Recency  <     0.31818181818181 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.31818181818181
THEN DO;
3786001   +    IF  NOT MISSING(MntCard_Games ) AND
3786002   +          0.34833484451197 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.34833484451197 <= MntCard_Games
THEN DO;
3786003   +      _NODE_  =                   22;
MPRINT(SCORETABLES):   _NODE_ = 22;
3786004   +      _LEAF_  =                   17;
MPRINT(SCORETABLES):   _LEAF_ = 17;
3786005   +      P_DepVar0  =                  0.1;
MPRINT(SCORETABLES):   P_DepVar0 = 0.1;
3786006   +      P_DepVar1  =                  0.9;
MPRINT(SCORETABLES):   P_DepVar1 = 0.9;
3786007   +      Q_DepVar0  =                  0.1;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.1;
3786008   +      Q_DepVar1  =                  0.9;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.9;
3786009   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786010   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786011   +      END;
MPRINT(SCORETABLES):   END;
3786012   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786013   +      IF  NOT MISSING(NumCatalogPurchases ) AND
3786014   +            0.27429467084639 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.27429467084639 <=
NumCatalogPurchases THEN DO;
3786015   +        _NODE_  =                   45;
MPRINT(SCORETABLES):   _NODE_ = 45;
3786016   +        _LEAF_  =                   16;
MPRINT(SCORETABLES):   _LEAF_ = 16;
3786017   +        P_DepVar0  =     0.28571428571428;
MPRINT(SCORETABLES):   P_DepVar0 = 0.28571428571428;
3786018   +        P_DepVar1  =     0.71428571428571;
MPRINT(SCORETABLES):   P_DepVar1 = 0.71428571428571;
3786019   +        Q_DepVar0  =     0.28571428571428;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.28571428571428;
3786020   +        Q_DepVar1  =     0.71428571428571;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.71428571428571;
3786021   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786022   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786023   +        END;
MPRINT(SCORETABLES):   END;
3786024   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786025   +        _NODE_  =                   44;
MPRINT(SCORETABLES):   _NODE_ = 44;
3786026   +        _LEAF_  =                   15;
MPRINT(SCORETABLES):   _LEAF_ = 15;
3786027   +        P_DepVar0  =     0.76595744680851;
MPRINT(SCORETABLES):   P_DepVar0 = 0.76595744680851;
3786028   +        P_DepVar1  =     0.23404255319148;
MPRINT(SCORETABLES):   P_DepVar1 = 0.23404255319148;
3786029   +        Q_DepVar0  =     0.76595744680851;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.76595744680851;
3786030   +        Q_DepVar1  =     0.23404255319148;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.23404255319148;
3786031   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786032   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786033   +        END;
MPRINT(SCORETABLES):   END;
3786034   +      END;
MPRINT(SCORETABLES):   END;
3786035   +    END;
MPRINT(SCORETABLES):   END;
3786036   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786037   +    IF  NOT MISSING(MntCard_Games ) AND
3786038   +          0.39108898018617 <= MntCard_Games  AND
3786039   +      MntCard_Games  <     0.61026789380447 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.39108898018617 <= MntCard_Games
AND MntCard_Games < 0.61026789380447 THEN DO;
3786040   +      IF  NOT MISSING(NumDealsPurchases ) AND
3786041   +            0.26785714285714 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.26785714285714 <=
NumDealsPurchases THEN DO;
3786042   +        _NODE_  =                   49;
MPRINT(SCORETABLES):   _NODE_ = 49;
3786043   +        _LEAF_  =                   21;
MPRINT(SCORETABLES):   _LEAF_ = 21;
3786044   +        P_DepVar0  =     0.22222222222222;
MPRINT(SCORETABLES):   P_DepVar0 = 0.22222222222222;
3786045   +        P_DepVar1  =     0.77777777777777;
MPRINT(SCORETABLES):   P_DepVar1 = 0.77777777777777;
3786046   +        Q_DepVar0  =     0.22222222222222;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.22222222222222;
3786047   +        Q_DepVar1  =     0.77777777777777;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.77777777777777;
3786048   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786049   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786050   +        END;
MPRINT(SCORETABLES):   END;
3786051   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786052   +        IF  NOT MISSING(RANGE_Recency ) AND
3786053   +          RANGE_Recency  <     0.48989898989899 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.48989898989899
THEN DO;
3786054   +          _NODE_  =                   68;
MPRINT(SCORETABLES):   _NODE_ = 68;
3786055   +          _LEAF_  =                   19;
MPRINT(SCORETABLES):   _LEAF_ = 19;
3786056   +          P_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   P_DepVar0 = 0.4;
3786057   +          P_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   P_DepVar1 = 0.6;
3786058   +          Q_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.4;
3786059   +          Q_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.6;
3786060   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786061   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786062   +          END;
MPRINT(SCORETABLES):   END;
3786063   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786064   +          _NODE_  =                   69;
MPRINT(SCORETABLES):   _NODE_ = 69;
3786065   +          _LEAF_  =                   20;
MPRINT(SCORETABLES):   _LEAF_ = 20;
3786066   +          P_DepVar0  =     0.98275862068965;
MPRINT(SCORETABLES):   P_DepVar0 = 0.98275862068965;
3786067   +          P_DepVar1  =     0.01724137931034;
MPRINT(SCORETABLES):   P_DepVar1 = 0.01724137931034;
3786068   +          Q_DepVar0  =     0.98275862068965;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.98275862068965;
3786069   +          Q_DepVar1  =     0.01724137931034;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.01724137931034;
3786070   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786071   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786072   +          END;
MPRINT(SCORETABLES):   END;
3786073   +        END;
MPRINT(SCORETABLES):   END;
3786074   +      END;
MPRINT(SCORETABLES):   END;
3786075   +    ELSE IF  NOT MISSING(MntCard_Games ) AND
3786076   +          0.61026789380447 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntCard_Games ) AND 0.61026789380447 <=
MntCard_Games THEN DO;
3786077   +      _NODE_  =                   25;
MPRINT(SCORETABLES):   _NODE_ = 25;
3786078   +      _LEAF_  =                   22;
MPRINT(SCORETABLES):   _LEAF_ = 22;
3786079   +      P_DepVar0  =     0.22222222222222;
MPRINT(SCORETABLES):   P_DepVar0 = 0.22222222222222;
3786080   +      P_DepVar1  =     0.77777777777777;
MPRINT(SCORETABLES):   P_DepVar1 = 0.77777777777777;
3786081   +      Q_DepVar0  =     0.22222222222222;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.22222222222222;
3786082   +      Q_DepVar1  =     0.77777777777777;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.77777777777777;
3786083   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786084   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786085   +      END;
MPRINT(SCORETABLES):   END;
3786086   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786087   +      _NODE_  =                   23;
MPRINT(SCORETABLES):   _NODE_ = 23;
3786088   +      _LEAF_  =                   18;
MPRINT(SCORETABLES):   _LEAF_ = 18;
3786089   +      P_DepVar0  =     0.97777777777777;
MPRINT(SCORETABLES):   P_DepVar0 = 0.97777777777777;
3786090   +      P_DepVar1  =     0.02222222222222;
MPRINT(SCORETABLES):   P_DepVar1 = 0.02222222222222;
3786091   +      Q_DepVar0  =     0.97777777777777;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.97777777777777;
3786092   +      Q_DepVar1  =     0.02222222222222;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.02222222222222;
3786093   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786094   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786095   +      END;
MPRINT(SCORETABLES):   END;
3786096   +    END;
MPRINT(SCORETABLES):   END;
3786097   +  END;
MPRINT(SCORETABLES):   END;
3786098   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3786099   +                 0.375 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.375 <=
RANGE_campaign_acceptance THEN DO;
3786100   +  IF  NOT MISSING(RANGE_Recency ) AND
3786101   +    RANGE_Recency  <     0.42929292929292 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.42929292929292
THEN DO;
3786102   +    _NODE_  =                   10;
MPRINT(SCORETABLES):   _NODE_ = 10;
3786103   +    _LEAF_  =                   23;
MPRINT(SCORETABLES):   _LEAF_ = 23;
3786104   +    P_DepVar0  =     0.11666666666666;
MPRINT(SCORETABLES):   P_DepVar0 = 0.11666666666666;
3786105   +    P_DepVar1  =     0.88333333333333;
MPRINT(SCORETABLES):   P_DepVar1 = 0.88333333333333;
3786106   +    Q_DepVar0  =     0.11666666666666;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.11666666666666;
3786107   +    Q_DepVar1  =     0.88333333333333;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.88333333333333;
3786108   +    I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786109   +    U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786110   +    END;
MPRINT(SCORETABLES):   END;
3786111   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786112   +    IF  NOT MISSING(NumCatalogPurchases ) AND
3786113   +          0.32247899159663 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.32247899159663 <=
NumCatalogPurchases THEN DO;
3786114   +      IF  NOT MISSING(RANGE_Frq ) AND
3786115   +                        0.65 <= RANGE_Frq  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Frq ) AND 0.65 <= RANGE_Frq THEN DO;
3786116   +        _NODE_  =                   53;
MPRINT(SCORETABLES):   _NODE_ = 53;
3786117   +        _LEAF_  =                   27;
MPRINT(SCORETABLES):   _LEAF_ = 27;
3786118   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3786119   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3786120   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3786121   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3786122   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786123   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786124   +        END;
MPRINT(SCORETABLES):   END;
3786125   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786126   +        _NODE_  =                   52;
MPRINT(SCORETABLES):   _NODE_ = 52;
3786127   +        _LEAF_  =                   26;
MPRINT(SCORETABLES):   _LEAF_ = 26;
3786128   +        P_DepVar0  =     0.55555555555555;
MPRINT(SCORETABLES):   P_DepVar0 = 0.55555555555555;
3786129   +        P_DepVar1  =     0.44444444444444;
MPRINT(SCORETABLES):   P_DepVar1 = 0.44444444444444;
3786130   +        Q_DepVar0  =     0.55555555555555;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.55555555555555;
3786131   +        Q_DepVar1  =     0.44444444444444;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.44444444444444;
3786132   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786133   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786134   +        END;
MPRINT(SCORETABLES):   END;
3786135   +      END;
MPRINT(SCORETABLES):   END;
3786136   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786137   +      IF  NOT MISSING(RANGE_average_purchase ) AND
3786138   +            0.69439879420345 <= RANGE_average_purchase  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_average_purchase ) AND 0.69439879420345 <=
RANGE_average_purchase THEN DO;
3786139   +        _NODE_  =                   51;
MPRINT(SCORETABLES):   _NODE_ = 51;
3786140   +        _LEAF_  =                   25;
MPRINT(SCORETABLES):   _LEAF_ = 25;
3786141   +        P_DepVar0  =                  0.2;
MPRINT(SCORETABLES):   P_DepVar0 = 0.2;
3786142   +        P_DepVar1  =                  0.8;
MPRINT(SCORETABLES):   P_DepVar1 = 0.8;
3786143   +        Q_DepVar0  =                  0.2;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.2;
3786144   +        Q_DepVar1  =                  0.8;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.8;
3786145   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786146   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786147   +        END;
MPRINT(SCORETABLES):   END;
3786148   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786149   +        _NODE_  =                   50;
MPRINT(SCORETABLES):   _NODE_ = 50;
3786150   +        _LEAF_  =                   24;
MPRINT(SCORETABLES):   _LEAF_ = 24;
3786151   +        P_DepVar0  =     0.89655172413793;
MPRINT(SCORETABLES):   P_DepVar0 = 0.89655172413793;
3786152   +        P_DepVar1  =     0.10344827586206;
MPRINT(SCORETABLES):   P_DepVar1 = 0.10344827586206;
3786153   +        Q_DepVar0  =     0.89655172413793;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.89655172413793;
3786154   +        Q_DepVar1  =     0.10344827586206;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.10344827586206;
3786155   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786156   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786157   +        END;
MPRINT(SCORETABLES):   END;
3786158   +      END;
MPRINT(SCORETABLES):   END;
3786159   +    END;
MPRINT(SCORETABLES):   END;
3786160   +  END;
MPRINT(SCORETABLES):   END;
3786161   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786162   +  IF  NOT MISSING(RANGE_Recency ) AND
3786163   +    RANGE_Recency  <     0.13636363636363 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.13636363636363
THEN DO;
3786164   +    IF  NOT MISSING(MntCard_Games ) AND
3786165   +          0.45839333185644 <= MntCard_Games  AND
3786166   +      MntCard_Games  <     0.60612280804644 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.45839333185644 <= MntCard_Games
AND MntCard_Games < 0.60612280804644 THEN DO;
3786167   +      _NODE_  =                   13;
MPRINT(SCORETABLES):   _NODE_ = 13;
3786168   +      _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3786169   +      P_DepVar0  =     0.45652173913043;
MPRINT(SCORETABLES):   P_DepVar0 = 0.45652173913043;
3786170   +      P_DepVar1  =     0.54347826086956;
MPRINT(SCORETABLES):   P_DepVar1 = 0.54347826086956;
3786171   +      Q_DepVar0  =     0.45652173913043;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.45652173913043;
3786172   +      Q_DepVar1  =     0.54347826086956;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.54347826086956;
3786173   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786174   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786175   +      END;
MPRINT(SCORETABLES):   END;
3786176   +    ELSE IF  NOT MISSING(MntCard_Games ) AND
3786177   +          0.60612280804644 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntCard_Games ) AND 0.60612280804644 <=
MntCard_Games THEN DO;
3786178   +      _NODE_  =                   14;
MPRINT(SCORETABLES):   _NODE_ = 14;
3786179   +      _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3786180   +      P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3786181   +      P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3786182   +      Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3786183   +      Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3786184   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786185   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786186   +      END;
MPRINT(SCORETABLES):   END;
3786187   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786188   +      IF  NOT MISSING(NumDealsPurchases ) AND
3786189   +            0.17156862745098 <= NumDealsPurchases  AND
3786190   +        NumDealsPurchases  <     0.37037037037037 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.17156862745098 <=
NumDealsPurchases AND NumDealsPurchases < 0.37037037037037 THEN DO;
3786191   +        _NODE_  =                   31;
MPRINT(SCORETABLES):   _NODE_ = 31;
3786192   +        _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3786193   +        P_DepVar0  =                 0.75;
MPRINT(SCORETABLES):   P_DepVar0 = 0.75;
3786194   +        P_DepVar1  =                 0.25;
MPRINT(SCORETABLES):   P_DepVar1 = 0.25;
3786195   +        Q_DepVar0  =                 0.75;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.75;
3786196   +        Q_DepVar1  =                 0.25;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.25;
3786197   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786198   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786199   +        END;
MPRINT(SCORETABLES):   END;
3786200   +      ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3786201   +            0.37037037037037 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.37037037037037 <=
NumDealsPurchases THEN DO;
3786202   +        _NODE_  =                   32;
MPRINT(SCORETABLES):   _NODE_ = 32;
3786203   +        _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3786204   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3786205   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3786206   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3786207   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3786208   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786209   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786210   +        END;
MPRINT(SCORETABLES):   END;
3786211   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786212   +        _NODE_  =                   30;
MPRINT(SCORETABLES):   _NODE_ = 30;
3786213   +        _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3786214   +        P_DepVar0  =     0.95774647887323;
MPRINT(SCORETABLES):   P_DepVar0 = 0.95774647887323;
3786215   +        P_DepVar1  =     0.04225352112676;
MPRINT(SCORETABLES):   P_DepVar1 = 0.04225352112676;
3786216   +        Q_DepVar0  =     0.95774647887323;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.95774647887323;
3786217   +        Q_DepVar1  =     0.04225352112676;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.04225352112676;
3786218   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786219   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786220   +        END;
MPRINT(SCORETABLES):   END;
3786221   +      END;
MPRINT(SCORETABLES):   END;
3786222   +    END;
MPRINT(SCORETABLES):   END;
3786223   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3786224   +        0.13636363636363 <= RANGE_Recency  AND
3786225   +    RANGE_Recency  <     0.36868686868686 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.13636363636363 <=
RANGE_Recency AND RANGE_Recency < 0.36868686868686 THEN DO;
3786226   +    IF  NOT MISSING(NumDealsPurchases ) AND
3786227   +      NumDealsPurchases  <     0.04653679653679 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND NumDealsPurchases <
0.04653679653679 THEN DO;
3786228   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(SCORETABLES):   _ARBFMT_8 = PUT( Marital_Status , $8.);
3786229   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(SCORETABLES):  ;
3786230   +      IF _ARBFMT_8 IN ('DIVORCED' ,'SINGLE' ) THEN DO;
MPRINT(SCORETABLES):   IF _ARBFMT_8 IN ('DIVORCED' ,'SINGLE' ) THEN DO;
3786231   +        _NODE_  =                   33;
MPRINT(SCORETABLES):   _NODE_ = 33;
3786232   +        _LEAF_  =                    6;
MPRINT(SCORETABLES):   _LEAF_ = 6;
3786233   +        P_DepVar0  =                 0.45;
MPRINT(SCORETABLES):   P_DepVar0 = 0.45;
3786234   +        P_DepVar1  =                 0.55;
MPRINT(SCORETABLES):   P_DepVar1 = 0.55;
3786235   +        Q_DepVar0  =                 0.45;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.45;
3786236   +        Q_DepVar1  =                 0.55;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.55;
3786237   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786238   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786239   +        END;
MPRINT(SCORETABLES):   END;
3786240   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786241   +        _NODE_  =                   34;
MPRINT(SCORETABLES):   _NODE_ = 34;
3786242   +        _LEAF_  =                    7;
MPRINT(SCORETABLES):   _LEAF_ = 7;
3786243   +        P_DepVar0  =     0.95238095238095;
MPRINT(SCORETABLES):   P_DepVar0 = 0.95238095238095;
3786244   +        P_DepVar1  =     0.04761904761904;
MPRINT(SCORETABLES):   P_DepVar1 = 0.04761904761904;
3786245   +        Q_DepVar0  =     0.95238095238095;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.95238095238095;
3786246   +        Q_DepVar1  =     0.04761904761904;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.04761904761904;
3786247   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786248   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786249   +        END;
MPRINT(SCORETABLES):   END;
3786250   +      END;
MPRINT(SCORETABLES):   END;
3786251   +    ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3786252   +          0.20294117647058 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.20294117647058 <=
NumDealsPurchases THEN DO;
3786253   +      IF  NOT MISSING(MntCard_Games ) AND
3786254   +        MntCard_Games  <     0.35027388922702 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND MntCard_Games < 0.35027388922702
THEN DO;
3786255   +        _NODE_  =                   37;
MPRINT(SCORETABLES):   _NODE_ = 37;
3786256   +        _LEAF_  =                    9;
MPRINT(SCORETABLES):   _LEAF_ = 9;
3786257   +        P_DepVar0  =                  0.9;
MPRINT(SCORETABLES):   P_DepVar0 = 0.9;
3786258   +        P_DepVar1  =                  0.1;
MPRINT(SCORETABLES):   P_DepVar1 = 0.1;
3786259   +        Q_DepVar0  =                  0.9;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.9;
3786260   +        Q_DepVar1  =                  0.1;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.1;
3786261   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786262   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786263   +        END;
MPRINT(SCORETABLES):   END;
3786264   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786265   +        _NODE_  =                   38;
MPRINT(SCORETABLES):   _NODE_ = 38;
3786266   +        _LEAF_  =                   10;
MPRINT(SCORETABLES):   _LEAF_ = 10;
3786267   +        P_DepVar0  =     0.45454545454545;
MPRINT(SCORETABLES):   P_DepVar0 = 0.45454545454545;
3786268   +        P_DepVar1  =     0.54545454545454;
MPRINT(SCORETABLES):   P_DepVar1 = 0.54545454545454;
3786269   +        Q_DepVar0  =     0.45454545454545;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.45454545454545;
3786270   +        Q_DepVar1  =     0.54545454545454;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.54545454545454;
3786271   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786272   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786273   +        END;
MPRINT(SCORETABLES):   END;
3786274   +      END;
MPRINT(SCORETABLES):   END;
3786275   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786276   +      _NODE_  =                   16;
MPRINT(SCORETABLES):   _NODE_ = 16;
3786277   +      _LEAF_  =                    8;
MPRINT(SCORETABLES):   _LEAF_ = 8;
3786278   +      P_DepVar0  =     0.97701149425287;
MPRINT(SCORETABLES):   P_DepVar0 = 0.97701149425287;
3786279   +      P_DepVar1  =     0.02298850574712;
MPRINT(SCORETABLES):   P_DepVar1 = 0.02298850574712;
3786280   +      Q_DepVar0  =     0.97701149425287;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.97701149425287;
3786281   +      Q_DepVar1  =     0.02298850574712;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.02298850574712;
3786282   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786283   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786284   +      END;
MPRINT(SCORETABLES):   END;
3786285   +    END;
MPRINT(SCORETABLES):   END;
3786286   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786287   +    IF  NOT MISSING(NumCatalogPurchases ) AND
3786288   +           0.4037037037037 <= NumCatalogPurchases  AND
3786289   +      NumCatalogPurchases  <     0.45141065830721 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.4037037037037 <=
NumCatalogPurchases AND NumCatalogPurchases < 0.45141065830721 THEN DO;
3786290   +      IF  NOT MISSING(RANGE_Recency ) AND
3786291   +        RANGE_Recency  <     0.66161616161616 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.66161616161616
THEN DO;
3786292   +        _NODE_  =                   42;
MPRINT(SCORETABLES):   _NODE_ = 42;
3786293   +        _LEAF_  =                   12;
MPRINT(SCORETABLES):   _LEAF_ = 12;
3786294   +        P_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.33333333333333;
3786295   +        P_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.66666666666666;
3786296   +        Q_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.33333333333333;
3786297   +        Q_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.66666666666666;
3786298   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786299   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786300   +        END;
MPRINT(SCORETABLES):   END;
3786301   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786302   +        _NODE_  =                   43;
MPRINT(SCORETABLES):   _NODE_ = 43;
3786303   +        _LEAF_  =                   13;
MPRINT(SCORETABLES):   _LEAF_ = 13;
3786304   +        P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3786305   +        P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3786306   +        Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3786307   +        Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3786308   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786309   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786310   +        END;
MPRINT(SCORETABLES):   END;
3786311   +      END;
MPRINT(SCORETABLES):   END;
3786312   +    ELSE IF  NOT MISSING(NumCatalogPurchases ) AND
3786313   +          0.45141065830721 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumCatalogPurchases ) AND 0.45141065830721 <=
NumCatalogPurchases THEN DO;
3786314   +      _NODE_  =                   20;
MPRINT(SCORETABLES):   _NODE_ = 20;
3786315   +      _LEAF_  =                   14;
MPRINT(SCORETABLES):   _LEAF_ = 14;
3786316   +      P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3786317   +      P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3786318   +      Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3786319   +      Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3786320   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786321   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786322   +      END;
MPRINT(SCORETABLES):   END;
3786323   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786324   +      _NODE_  =                   18;
MPRINT(SCORETABLES):   _NODE_ = 18;
3786325   +      _LEAF_  =                   11;
MPRINT(SCORETABLES):   _LEAF_ = 11;
3786326   +      P_DepVar0  =     0.99401794616151;
MPRINT(SCORETABLES):   P_DepVar0 = 0.99401794616151;
3786327   +      P_DepVar1  =     0.00598205383848;
MPRINT(SCORETABLES):   P_DepVar1 = 0.00598205383848;
3786328   +      Q_DepVar0  =     0.99401794616151;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.99401794616151;
3786329   +      Q_DepVar1  =     0.00598205383848;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.00598205383848;
3786330   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786331   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786332   +      END;
MPRINT(SCORETABLES):   END;
3786333   +    END;
MPRINT(SCORETABLES):   END;
3786334   +  END;
MPRINT(SCORETABLES):   END;
3786335   +
3786336   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3786337   +IF  F_DepVar  NE '0'
3786338   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3786339   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3786340   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3786341   + END;
MPRINT(SCORETABLES):   END;
3786342   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786343   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3786344   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3786345   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3786346   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3786347   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3786348   +       END;
MPRINT(SCORETABLES):   END;
3786349   + END;
MPRINT(SCORETABLES):   END;
3786350   +
3786351   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3786352   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3786353   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3786354   +
3786355   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3786356   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3786357   +* EndGrp2: EndGroup;
MPRINT(SCORETABLES):   * EndGrp2: EndGroup;
3786358   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3786359   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3786360   +* Group: ^(cv_var =6);
MPRINT(SCORETABLES):   * Group: ^(cv_var =6);
3786361   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3786362   +end;
MPRINT(SCORETABLES):   end;
3786363   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3786364   +* Grp2: StartGroup;
MPRINT(SCORETABLES):   * Grp2: StartGroup;
3786365   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3786366   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3786367   +* Group: ^(cv_var =7);
MPRINT(SCORETABLES):   * Group: ^(cv_var =7);
3786368   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3786369   +if (cv_var =7)  then do;
MPRINT(SCORETABLES):   if (cv_var =7) then do;
3786370   +_XVAL_=7;
MPRINT(SCORETABLES):   _XVAL_=7;
3786371   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3786372   +* Tree2: DecisionTree;
MPRINT(SCORETABLES):   * Tree2: DecisionTree;
3786373   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3786374   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3786375   +* Group: ^(cv_var =7);
MPRINT(SCORETABLES):   * Group: ^(cv_var =7);
3786376   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3786377   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3786378   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3786379   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3786380   +
3786381   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3786382   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3786383   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3786384   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3786385   +
3786386   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3786387   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3786388   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3786389   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3786390   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3786391   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3786392   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3786393   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3786394   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3786395   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3786396   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3786397   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3786398   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3786399   +
3786400   +
3786401   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3786402   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3786403   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3786404   +
3786405   +
3786406   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3786407   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3786408   +
3786409   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3786410   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3786411   +                 0.125 <= RANGE_campaign_acceptance  AND
3786412   +  RANGE_campaign_acceptance  <                0.375 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <=
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.375 THEN DO;
3786413   +  IF  NOT MISSING(RANGE_Recency ) AND
3786414   +    RANGE_Recency  <     0.31818181818181 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.31818181818181
THEN DO;
3786415   +    IF  NOT MISSING(MntCard_Games ) AND
3786416   +      MntCard_Games  <     0.27480595174713 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND MntCard_Games < 0.27480595174713
THEN DO;
3786417   +      IF  NOT MISSING(NumCatalogPurchases ) AND
3786418   +            0.27429467084639 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.27429467084639 <=
NumCatalogPurchases THEN DO;
3786419   +        _NODE_  =                   44;
MPRINT(SCORETABLES):   _NODE_ = 44;
3786420   +        _LEAF_  =                   15;
MPRINT(SCORETABLES):   _LEAF_ = 15;
3786421   +        P_DepVar0  =                 0.25;
MPRINT(SCORETABLES):   P_DepVar0 = 0.25;
3786422   +        P_DepVar1  =                 0.75;
MPRINT(SCORETABLES):   P_DepVar1 = 0.75;
3786423   +        Q_DepVar0  =                 0.25;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.25;
3786424   +        Q_DepVar1  =                 0.75;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.75;
3786425   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786426   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786427   +        END;
MPRINT(SCORETABLES):   END;
3786428   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786429   +        IF  NOT MISSING(NumWebPurchases ) AND
3786430   +          NumWebPurchases  <     0.36515151515151 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumWebPurchases ) AND NumWebPurchases < 0.36515151515151
THEN DO;
3786431   +          _NODE_  =                   60;
MPRINT(SCORETABLES):   _NODE_ = 60;
3786432   +          _LEAF_  =                   13;
MPRINT(SCORETABLES):   _LEAF_ = 13;
3786433   +          P_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   P_DepVar0 = 0.4;
3786434   +          P_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   P_DepVar1 = 0.6;
3786435   +          Q_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.4;
3786436   +          Q_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.6;
3786437   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786438   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786439   +          END;
MPRINT(SCORETABLES):   END;
3786440   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786441   +          _NODE_  =                   61;
MPRINT(SCORETABLES):   _NODE_ = 61;
3786442   +          _LEAF_  =                   14;
MPRINT(SCORETABLES):   _LEAF_ = 14;
3786443   +          P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3786444   +          P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3786445   +          Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3786446   +          Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3786447   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786448   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786449   +          END;
MPRINT(SCORETABLES):   END;
3786450   +        END;
MPRINT(SCORETABLES):   END;
3786451   +      END;
MPRINT(SCORETABLES):   END;
3786452   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786453   +      IF  NOT MISSING(RANGE_Recency ) AND
3786454   +            0.25757575757575 <= RANGE_Recency  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND 0.25757575757575 <= RANGE_Recency
THEN DO;
3786455   +        IF  NOT MISSING(MntCard_Games ) AND
3786456   +              0.44589860532751 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.44589860532751 <= MntCard_Games
THEN DO;
3786457   +          _NODE_  =                   63;
MPRINT(SCORETABLES):   _NODE_ = 63;
3786458   +          _LEAF_  =                   18;
MPRINT(SCORETABLES):   _LEAF_ = 18;
3786459   +          P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3786460   +          P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3786461   +          Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3786462   +          Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3786463   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786464   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786465   +          END;
MPRINT(SCORETABLES):   END;
3786466   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786467   +          _NODE_  =                   62;
MPRINT(SCORETABLES):   _NODE_ = 62;
3786468   +          _LEAF_  =                   17;
MPRINT(SCORETABLES):   _LEAF_ = 17;
3786469   +          P_DepVar0  =     0.72727272727272;
MPRINT(SCORETABLES):   P_DepVar0 = 0.72727272727272;
3786470   +          P_DepVar1  =     0.27272727272727;
MPRINT(SCORETABLES):   P_DepVar1 = 0.27272727272727;
3786471   +          Q_DepVar0  =     0.72727272727272;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.72727272727272;
3786472   +          Q_DepVar1  =     0.27272727272727;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.27272727272727;
3786473   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786474   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786475   +          END;
MPRINT(SCORETABLES):   END;
3786476   +        END;
MPRINT(SCORETABLES):   END;
3786477   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786478   +        _NODE_  =                   45;
MPRINT(SCORETABLES):   _NODE_ = 45;
3786479   +        _LEAF_  =                   16;
MPRINT(SCORETABLES):   _LEAF_ = 16;
3786480   +        P_DepVar0  =     0.08064516129032;
MPRINT(SCORETABLES):   P_DepVar0 = 0.08064516129032;
3786481   +        P_DepVar1  =     0.91935483870967;
MPRINT(SCORETABLES):   P_DepVar1 = 0.91935483870967;
3786482   +        Q_DepVar0  =     0.08064516129032;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.08064516129032;
3786483   +        Q_DepVar1  =     0.91935483870967;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.91935483870967;
3786484   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786485   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786486   +        END;
MPRINT(SCORETABLES):   END;
3786487   +      END;
MPRINT(SCORETABLES):   END;
3786488   +    END;
MPRINT(SCORETABLES):   END;
3786489   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786490   +    IF  NOT MISSING(NumDealsPurchases ) AND
3786491   +          0.34313725490196 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.34313725490196 <=
NumDealsPurchases THEN DO;
3786492   +      _NODE_  =                   25;
MPRINT(SCORETABLES):   _NODE_ = 25;
3786493   +      _LEAF_  =                   23;
MPRINT(SCORETABLES):   _LEAF_ = 23;
3786494   +      P_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.33333333333333;
3786495   +      P_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.66666666666666;
3786496   +      Q_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.33333333333333;
3786497   +      Q_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.66666666666666;
3786498   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786499   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786500   +      END;
MPRINT(SCORETABLES):   END;
3786501   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786502   +      IF  NOT MISSING(MntCard_Games ) AND
3786503   +            0.40010994235899 <= MntCard_Games  AND
3786504   +        MntCard_Games  <     0.57331821617535 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.40010994235899 <= MntCard_Games
AND MntCard_Games < 0.57331821617535 THEN DO;
3786505   +        IF  NOT MISSING(NumDealsPurchases ) AND
3786506   +              0.22649572649572 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.22649572649572 <=
NumDealsPurchases THEN DO;
3786507   +          _NODE_  =                   65;
MPRINT(SCORETABLES):   _NODE_ = 65;
3786508   +          _LEAF_  =                   21;
MPRINT(SCORETABLES):   _LEAF_ = 21;
3786509   +          P_DepVar0  =     0.42857142857142;
MPRINT(SCORETABLES):   P_DepVar0 = 0.42857142857142;
3786510   +          P_DepVar1  =     0.57142857142857;
MPRINT(SCORETABLES):   P_DepVar1 = 0.57142857142857;
3786511   +          Q_DepVar0  =     0.42857142857142;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.42857142857142;
3786512   +          Q_DepVar1  =     0.57142857142857;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.57142857142857;
3786513   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786514   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786515   +          END;
MPRINT(SCORETABLES):   END;
3786516   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786517   +          _NODE_  =                   64;
MPRINT(SCORETABLES):   _NODE_ = 64;
3786518   +          _LEAF_  =                   20;
MPRINT(SCORETABLES):   _LEAF_ = 20;
3786519   +          P_DepVar0  =     0.92727272727272;
MPRINT(SCORETABLES):   P_DepVar0 = 0.92727272727272;
3786520   +          P_DepVar1  =     0.07272727272727;
MPRINT(SCORETABLES):   P_DepVar1 = 0.07272727272727;
3786521   +          Q_DepVar0  =     0.92727272727272;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.92727272727272;
3786522   +          Q_DepVar1  =     0.07272727272727;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.07272727272727;
3786523   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786524   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786525   +          END;
MPRINT(SCORETABLES):   END;
3786526   +        END;
MPRINT(SCORETABLES):   END;
3786527   +      ELSE IF  NOT MISSING(MntCard_Games ) AND
3786528   +            0.57331821617535 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntCard_Games ) AND 0.57331821617535 <=
MntCard_Games THEN DO;
3786529   +        _NODE_  =                   49;
MPRINT(SCORETABLES):   _NODE_ = 49;
3786530   +        _LEAF_  =                   22;
MPRINT(SCORETABLES):   _LEAF_ = 22;
3786531   +        P_DepVar0  =     0.53846153846153;
MPRINT(SCORETABLES):   P_DepVar0 = 0.53846153846153;
3786532   +        P_DepVar1  =     0.46153846153846;
MPRINT(SCORETABLES):   P_DepVar1 = 0.46153846153846;
3786533   +        Q_DepVar0  =     0.53846153846153;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.53846153846153;
3786534   +        Q_DepVar1  =     0.46153846153846;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.46153846153846;
3786535   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786536   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786537   +        END;
MPRINT(SCORETABLES):   END;
3786538   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786539   +        _NODE_  =                   47;
MPRINT(SCORETABLES):   _NODE_ = 47;
3786540   +        _LEAF_  =                   19;
MPRINT(SCORETABLES):   _LEAF_ = 19;
3786541   +        P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3786542   +        P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3786543   +        Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3786544   +        Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3786545   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786546   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786547   +        END;
MPRINT(SCORETABLES):   END;
3786548   +      END;
MPRINT(SCORETABLES):   END;
3786549   +    END;
MPRINT(SCORETABLES):   END;
3786550   +  END;
MPRINT(SCORETABLES):   END;
3786551   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3786552   +                 0.375 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.375 <=
RANGE_campaign_acceptance THEN DO;
3786553   +  IF  NOT MISSING(RANGE_Recency ) AND
3786554   +        0.38888888888888 <= RANGE_Recency  AND
3786555   +    RANGE_Recency  <     0.69191919191919 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND 0.38888888888888 <= RANGE_Recency
AND RANGE_Recency < 0.69191919191919 THEN DO;
3786556   +    IF  NOT MISSING(NumCatalogPurchases ) AND
3786557   +          0.32085561497326 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.32085561497326 <=
NumCatalogPurchases THEN DO;
3786558   +      _NODE_  =                   29;
MPRINT(SCORETABLES):   _NODE_ = 29;
3786559   +      _LEAF_  =                   26;
MPRINT(SCORETABLES):   _LEAF_ = 26;
3786560   +      P_DepVar0  =      0.1578947368421;
MPRINT(SCORETABLES):   P_DepVar0 = 0.1578947368421;
3786561   +      P_DepVar1  =     0.84210526315789;
MPRINT(SCORETABLES):   P_DepVar1 = 0.84210526315789;
3786562   +      Q_DepVar0  =      0.1578947368421;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.1578947368421;
3786563   +      Q_DepVar1  =     0.84210526315789;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.84210526315789;
3786564   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786565   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786566   +      END;
MPRINT(SCORETABLES):   END;
3786567   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786568   +      _NODE_  =                   28;
MPRINT(SCORETABLES):   _NODE_ = 28;
3786569   +      _LEAF_  =                   25;
MPRINT(SCORETABLES):   _LEAF_ = 25;
3786570   +      P_DepVar0  =     0.76923076923076;
MPRINT(SCORETABLES):   P_DepVar0 = 0.76923076923076;
3786571   +      P_DepVar1  =     0.23076923076923;
MPRINT(SCORETABLES):   P_DepVar1 = 0.23076923076923;
3786572   +      Q_DepVar0  =     0.76923076923076;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.76923076923076;
3786573   +      Q_DepVar1  =     0.23076923076923;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.23076923076923;
3786574   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786575   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786576   +      END;
MPRINT(SCORETABLES):   END;
3786577   +    END;
MPRINT(SCORETABLES):   END;
3786578   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3786579   +        0.69191919191919 <= RANGE_Recency  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.69191919191919 <=
RANGE_Recency THEN DO;
3786580   +    IF  NOT MISSING(MntCard_Games ) AND
3786581   +          0.48321777853642 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.48321777853642 <= MntCard_Games
THEN DO;
3786582   +      _NODE_  =                   31;
MPRINT(SCORETABLES):   _NODE_ = 31;
3786583   +      _LEAF_  =                   28;
MPRINT(SCORETABLES):   _LEAF_ = 28;
3786584   +      P_DepVar0  =     0.45454545454545;
MPRINT(SCORETABLES):   P_DepVar0 = 0.45454545454545;
3786585   +      P_DepVar1  =     0.54545454545454;
MPRINT(SCORETABLES):   P_DepVar1 = 0.54545454545454;
3786586   +      Q_DepVar0  =     0.45454545454545;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.45454545454545;
3786587   +      Q_DepVar1  =     0.54545454545454;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.54545454545454;
3786588   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786589   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786590   +      END;
MPRINT(SCORETABLES):   END;
3786591   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786592   +      _NODE_  =                   30;
MPRINT(SCORETABLES):   _NODE_ = 30;
3786593   +      _LEAF_  =                   27;
MPRINT(SCORETABLES):   _LEAF_ = 27;
3786594   +      P_DepVar0  =     0.97560975609756;
MPRINT(SCORETABLES):   P_DepVar0 = 0.97560975609756;
3786595   +      P_DepVar1  =     0.02439024390243;
MPRINT(SCORETABLES):   P_DepVar1 = 0.02439024390243;
3786596   +      Q_DepVar0  =     0.97560975609756;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.97560975609756;
3786597   +      Q_DepVar1  =     0.02439024390243;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.02439024390243;
3786598   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786599   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786600   +      END;
MPRINT(SCORETABLES):   END;
3786601   +    END;
MPRINT(SCORETABLES):   END;
3786602   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786603   +    _NODE_  =                   10;
MPRINT(SCORETABLES):   _NODE_ = 10;
3786604   +    _LEAF_  =                   24;
MPRINT(SCORETABLES):   _LEAF_ = 24;
3786605   +    P_DepVar0  =     0.08928571428571;
MPRINT(SCORETABLES):   P_DepVar0 = 0.08928571428571;
3786606   +    P_DepVar1  =     0.91071428571428;
MPRINT(SCORETABLES):   P_DepVar1 = 0.91071428571428;
3786607   +    Q_DepVar0  =     0.08928571428571;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.08928571428571;
3786608   +    Q_DepVar1  =     0.91071428571428;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.91071428571428;
3786609   +    I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786610   +    U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786611   +    END;
MPRINT(SCORETABLES):   END;
3786612   +  END;
MPRINT(SCORETABLES):   END;
3786613   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786614   +  IF  NOT MISSING(RANGE_Recency ) AND
3786615   +    RANGE_Recency  <     0.13636363636363 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.13636363636363
THEN DO;
3786616   +    IF  NOT MISSING(MntCard_Games ) AND
3786617   +          0.40792761279268 <= MntCard_Games  AND
3786618   +      MntCard_Games  <     0.53407239234544 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.40792761279268 <= MntCard_Games
AND MntCard_Games < 0.53407239234544 THEN DO;
3786619   +      _NODE_  =                   14;
MPRINT(SCORETABLES):   _NODE_ = 14;
3786620   +      _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3786621   +      P_DepVar0  =     0.67272727272727;
MPRINT(SCORETABLES):   P_DepVar0 = 0.67272727272727;
3786622   +      P_DepVar1  =     0.32727272727272;
MPRINT(SCORETABLES):   P_DepVar1 = 0.32727272727272;
3786623   +      Q_DepVar0  =     0.67272727272727;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.67272727272727;
3786624   +      Q_DepVar1  =     0.32727272727272;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.32727272727272;
3786625   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786626   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786627   +      END;
MPRINT(SCORETABLES):   END;
3786628   +    ELSE IF  NOT MISSING(MntCard_Games ) AND
3786629   +          0.53407239234544 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntCard_Games ) AND 0.53407239234544 <=
MntCard_Games THEN DO;
3786630   +      _NODE_  =                   15;
MPRINT(SCORETABLES):   _NODE_ = 15;
3786631   +      _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3786632   +      P_DepVar0  =     0.26315789473684;
MPRINT(SCORETABLES):   P_DepVar0 = 0.26315789473684;
3786633   +      P_DepVar1  =     0.73684210526315;
MPRINT(SCORETABLES):   P_DepVar1 = 0.73684210526315;
3786634   +      Q_DepVar0  =     0.26315789473684;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.26315789473684;
3786635   +      Q_DepVar1  =     0.73684210526315;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.73684210526315;
3786636   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786637   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786638   +      END;
MPRINT(SCORETABLES):   END;
3786639   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786640   +      IF  NOT MISSING(NumDealsPurchases ) AND
3786641   +            0.32575757575757 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.32575757575757 <=
NumDealsPurchases THEN DO;
3786642   +        _NODE_  =                   33;
MPRINT(SCORETABLES):   _NODE_ = 33;
3786643   +        _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3786644   +        P_DepVar0  =                 0.25;
MPRINT(SCORETABLES):   P_DepVar0 = 0.25;
3786645   +        P_DepVar1  =                 0.75;
MPRINT(SCORETABLES):   P_DepVar1 = 0.75;
3786646   +        Q_DepVar0  =                 0.25;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.25;
3786647   +        Q_DepVar1  =                 0.75;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.75;
3786648   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786649   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786650   +        END;
MPRINT(SCORETABLES):   END;
3786651   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786652   +        _NODE_  =                   32;
MPRINT(SCORETABLES):   _NODE_ = 32;
3786653   +        _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3786654   +        P_DepVar0  =     0.94152046783625;
MPRINT(SCORETABLES):   P_DepVar0 = 0.94152046783625;
3786655   +        P_DepVar1  =     0.05847953216374;
MPRINT(SCORETABLES):   P_DepVar1 = 0.05847953216374;
3786656   +        Q_DepVar0  =     0.94152046783625;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.94152046783625;
3786657   +        Q_DepVar1  =     0.05847953216374;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.05847953216374;
3786658   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786659   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786660   +        END;
MPRINT(SCORETABLES):   END;
3786661   +      END;
MPRINT(SCORETABLES):   END;
3786662   +    END;
MPRINT(SCORETABLES):   END;
3786663   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3786664   +        0.13636363636363 <= RANGE_Recency  AND
3786665   +    RANGE_Recency  <     0.31818181818181 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.13636363636363 <=
RANGE_Recency AND RANGE_Recency < 0.31818181818181 THEN DO;
3786666   +    IF  NOT MISSING(NumDealsPurchases ) AND
3786667   +      NumDealsPurchases  <     0.04653679653679 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND NumDealsPurchases <
0.04653679653679 THEN DO;
3786668   +      IF  NOT MISSING(MntCard_Games ) AND
3786669   +            0.64840525846128 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.64840525846128 <= MntCard_Games
THEN DO;
3786670   +        _NODE_  =                   35;
MPRINT(SCORETABLES):   _NODE_ = 35;
3786671   +        _LEAF_  =                    6;
MPRINT(SCORETABLES):   _LEAF_ = 6;
3786672   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3786673   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3786674   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3786675   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3786676   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786677   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786678   +        END;
MPRINT(SCORETABLES):   END;
3786679   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786680   +        _NODE_  =                   34;
MPRINT(SCORETABLES):   _NODE_ = 34;
3786681   +        _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3786682   +        P_DepVar0  =     0.85365853658536;
MPRINT(SCORETABLES):   P_DepVar0 = 0.85365853658536;
3786683   +        P_DepVar1  =     0.14634146341463;
MPRINT(SCORETABLES):   P_DepVar1 = 0.14634146341463;
3786684   +        Q_DepVar0  =     0.85365853658536;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.85365853658536;
3786685   +        Q_DepVar1  =     0.14634146341463;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.14634146341463;
3786686   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786687   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786688   +        END;
MPRINT(SCORETABLES):   END;
3786689   +      END;
MPRINT(SCORETABLES):   END;
3786690   +    ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3786691   +          0.25657894736842 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.25657894736842 <=
NumDealsPurchases THEN DO;
3786692   +      IF  NOT MISSING(RANGE_Recency ) AND
3786693   +            0.28282828282828 <= RANGE_Recency  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND 0.28282828282828 <= RANGE_Recency
THEN DO;
3786694   +        _NODE_  =                   39;
MPRINT(SCORETABLES):   _NODE_ = 39;
3786695   +        _LEAF_  =                   11;
MPRINT(SCORETABLES):   _LEAF_ = 11;
3786696   +        P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3786697   +        P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3786698   +        Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3786699   +        Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3786700   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786701   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786702   +        END;
MPRINT(SCORETABLES):   END;
3786703   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786704   +        _NODE_  =                   38;
MPRINT(SCORETABLES):   _NODE_ = 38;
3786705   +        _LEAF_  =                   10;
MPRINT(SCORETABLES):   _LEAF_ = 10;
3786706   +        P_DepVar0  =                 0.25;
MPRINT(SCORETABLES):   P_DepVar0 = 0.25;
3786707   +        P_DepVar1  =                 0.75;
MPRINT(SCORETABLES):   P_DepVar1 = 0.75;
3786708   +        Q_DepVar0  =                 0.25;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.25;
3786709   +        Q_DepVar1  =                 0.75;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.75;
3786710   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786711   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786712   +        END;
MPRINT(SCORETABLES):   END;
3786713   +      END;
MPRINT(SCORETABLES):   END;
3786714   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786715   +      IF  NOT MISSING(MntCard_Games ) AND
3786716   +            0.37933003425961 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.37933003425961 <= MntCard_Games
THEN DO;
3786717   +        IF  NOT MISSING(NumDealsPurchases ) AND
3786718   +              0.20294117647058 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.20294117647058 <=
NumDealsPurchases THEN DO;
3786719   +          _NODE_  =                   56;
MPRINT(SCORETABLES):   _NODE_ = 56;
3786720   +          _LEAF_  =                    9;
MPRINT(SCORETABLES):   _LEAF_ = 9;
3786721   +          P_DepVar0  =     0.46666666666666;
MPRINT(SCORETABLES):   P_DepVar0 = 0.46666666666666;
3786722   +          P_DepVar1  =     0.53333333333333;
MPRINT(SCORETABLES):   P_DepVar1 = 0.53333333333333;
3786723   +          Q_DepVar0  =     0.46666666666666;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.46666666666666;
3786724   +          Q_DepVar1  =     0.53333333333333;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.53333333333333;
3786725   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786726   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786727   +          END;
MPRINT(SCORETABLES):   END;
3786728   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786729   +          _NODE_  =                   55;
MPRINT(SCORETABLES):   _NODE_ = 55;
3786730   +          _LEAF_  =                    8;
MPRINT(SCORETABLES):   _LEAF_ = 8;
3786731   +          P_DepVar0  =     0.89855072463768;
MPRINT(SCORETABLES):   P_DepVar0 = 0.89855072463768;
3786732   +          P_DepVar1  =     0.10144927536231;
MPRINT(SCORETABLES):   P_DepVar1 = 0.10144927536231;
3786733   +          Q_DepVar0  =     0.89855072463768;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.89855072463768;
3786734   +          Q_DepVar1  =     0.10144927536231;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.10144927536231;
3786735   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786736   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786737   +          END;
MPRINT(SCORETABLES):   END;
3786738   +        END;
MPRINT(SCORETABLES):   END;
3786739   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786740   +        _NODE_  =                   36;
MPRINT(SCORETABLES):   _NODE_ = 36;
3786741   +        _LEAF_  =                    7;
MPRINT(SCORETABLES):   _LEAF_ = 7;
3786742   +        P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3786743   +        P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3786744   +        Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3786745   +        Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3786746   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786747   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786748   +        END;
MPRINT(SCORETABLES):   END;
3786749   +      END;
MPRINT(SCORETABLES):   END;
3786750   +    END;
MPRINT(SCORETABLES):   END;
3786751   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786752   +    _NODE_  =                    7;
MPRINT(SCORETABLES):   _NODE_ = 7;
3786753   +    _LEAF_  =                   12;
MPRINT(SCORETABLES):   _LEAF_ = 12;
3786754   +    P_DepVar0  =     0.98917944093778;
MPRINT(SCORETABLES):   P_DepVar0 = 0.98917944093778;
3786755   +    P_DepVar1  =     0.01082055906221;
MPRINT(SCORETABLES):   P_DepVar1 = 0.01082055906221;
3786756   +    Q_DepVar0  =     0.98917944093778;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.98917944093778;
3786757   +    Q_DepVar1  =     0.01082055906221;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.01082055906221;
3786758   +    I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786759   +    U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786760   +    END;
MPRINT(SCORETABLES):   END;
3786761   +  END;
MPRINT(SCORETABLES):   END;
3786762   +
3786763   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3786764   +IF  F_DepVar  NE '0'
3786765   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3786766   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3786767   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3786768   + END;
MPRINT(SCORETABLES):   END;
3786769   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786770   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3786771   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3786772   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3786773   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3786774   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3786775   +       END;
MPRINT(SCORETABLES):   END;
3786776   + END;
MPRINT(SCORETABLES):   END;
3786777   +
3786778   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3786779   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3786780   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3786781   +
3786782   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3786783   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3786784   +* EndGrp2: EndGroup;
MPRINT(SCORETABLES):   * EndGrp2: EndGroup;
3786785   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3786786   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3786787   +* Group: ^(cv_var =7);
MPRINT(SCORETABLES):   * Group: ^(cv_var =7);
3786788   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3786789   +end;
MPRINT(SCORETABLES):   end;
3786790   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3786791   +* Grp2: StartGroup;
MPRINT(SCORETABLES):   * Grp2: StartGroup;
3786792   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3786793   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3786794   +* Group: ^(cv_var =8);
MPRINT(SCORETABLES):   * Group: ^(cv_var =8);
3786795   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3786796   +if (cv_var =8)  then do;
MPRINT(SCORETABLES):   if (cv_var =8) then do;
3786797   +_XVAL_=8;
MPRINT(SCORETABLES):   _XVAL_=8;
3786798   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3786799   +* Tree2: DecisionTree;
MPRINT(SCORETABLES):   * Tree2: DecisionTree;
3786800   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3786801   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3786802   +* Group: ^(cv_var =8);
MPRINT(SCORETABLES):   * Group: ^(cv_var =8);
3786803   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3786804   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3786805   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3786806   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3786807   +
3786808   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3786809   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3786810   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3786811   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3786812   +
3786813   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3786814   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3786815   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3786816   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3786817   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3786818   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3786819   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3786820   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3786821   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3786822   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3786823   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3786824   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3786825   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3786826   +
3786827   +
3786828   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3786829   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3786830   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3786831   +
3786832   +
3786833   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3786834   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3786835   +
3786836   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3786837   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3786838   +                 0.125 <= RANGE_campaign_acceptance  AND
3786839   +  RANGE_campaign_acceptance  <                0.375 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <=
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.375 THEN DO;
3786840   +  IF  NOT MISSING(RANGE_Recency ) AND
3786841   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888
THEN DO;
3786842   +    IF  NOT MISSING(MntCard_Games ) AND
3786843   +          0.37104462156395 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.37104462156395 <= MntCard_Games
THEN DO;
3786844   +      _NODE_  =                   22;
MPRINT(SCORETABLES):   _NODE_ = 22;
3786845   +      _LEAF_  =                   14;
MPRINT(SCORETABLES):   _LEAF_ = 14;
3786846   +      P_DepVar0  =      0.1076923076923;
MPRINT(SCORETABLES):   P_DepVar0 = 0.1076923076923;
3786847   +      P_DepVar1  =     0.89230769230769;
MPRINT(SCORETABLES):   P_DepVar1 = 0.89230769230769;
3786848   +      Q_DepVar0  =      0.1076923076923;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.1076923076923;
3786849   +      Q_DepVar1  =     0.89230769230769;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.89230769230769;
3786850   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786851   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786852   +      END;
MPRINT(SCORETABLES):   END;
3786853   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786854   +      IF  NOT MISSING(NumCatalogPurchases ) AND
3786855   +            0.24068965517241 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.24068965517241 <=
NumCatalogPurchases THEN DO;
3786856   +        _NODE_  =                   44;
MPRINT(SCORETABLES):   _NODE_ = 44;
3786857   +        _LEAF_  =                   13;
MPRINT(SCORETABLES):   _LEAF_ = 13;
3786858   +        P_DepVar0  =     0.39473684210526;
MPRINT(SCORETABLES):   P_DepVar0 = 0.39473684210526;
3786859   +        P_DepVar1  =     0.60526315789473;
MPRINT(SCORETABLES):   P_DepVar1 = 0.60526315789473;
3786860   +        Q_DepVar0  =     0.39473684210526;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.39473684210526;
3786861   +        Q_DepVar1  =     0.60526315789473;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.60526315789473;
3786862   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786863   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786864   +        END;
MPRINT(SCORETABLES):   END;
3786865   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786866   +        IF  NOT MISSING(MntCard_Games ) AND
3786867   +              0.30232049928699 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.30232049928699 <= MntCard_Games
THEN DO;
3786868   +          _NODE_  =                   67;
MPRINT(SCORETABLES):   _NODE_ = 67;
3786869   +          _LEAF_  =                   12;
MPRINT(SCORETABLES):   _LEAF_ = 12;
3786870   +          P_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.33333333333333;
3786871   +          P_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.66666666666666;
3786872   +          Q_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.33333333333333;
3786873   +          Q_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.66666666666666;
3786874   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786875   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786876   +          END;
MPRINT(SCORETABLES):   END;
3786877   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786878   +          _NODE_  =                   66;
MPRINT(SCORETABLES):   _NODE_ = 66;
3786879   +          _LEAF_  =                   11;
MPRINT(SCORETABLES):   _LEAF_ = 11;
3786880   +          P_DepVar0  =     0.95121951219512;
MPRINT(SCORETABLES):   P_DepVar0 = 0.95121951219512;
3786881   +          P_DepVar1  =     0.04878048780487;
MPRINT(SCORETABLES):   P_DepVar1 = 0.04878048780487;
3786882   +          Q_DepVar0  =     0.95121951219512;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.95121951219512;
3786883   +          Q_DepVar1  =     0.04878048780487;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.04878048780487;
3786884   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786885   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786886   +          END;
MPRINT(SCORETABLES):   END;
3786887   +        END;
MPRINT(SCORETABLES):   END;
3786888   +      END;
MPRINT(SCORETABLES):   END;
3786889   +    END;
MPRINT(SCORETABLES):   END;
3786890   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786891   +    IF  NOT MISSING(NumDealsPurchases ) AND
3786892   +          0.37626262626262 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.37626262626262 <=
NumDealsPurchases THEN DO;
3786893   +      IF  NOT MISSING(RANGE_average_purchase ) AND
3786894   +        RANGE_average_purchase  <     0.16532714796529 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_average_purchase ) AND RANGE_average_purchase <
0.16532714796529 THEN DO;
3786895   +        _NODE_  =                   50;
MPRINT(SCORETABLES):   _NODE_ = 50;
3786896   +        _LEAF_  =                   19;
MPRINT(SCORETABLES):   _LEAF_ = 19;
3786897   +        P_DepVar0  =                  0.8;
MPRINT(SCORETABLES):   P_DepVar0 = 0.8;
3786898   +        P_DepVar1  =                  0.2;
MPRINT(SCORETABLES):   P_DepVar1 = 0.2;
3786899   +        Q_DepVar0  =                  0.8;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.8;
3786900   +        Q_DepVar1  =                  0.2;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.2;
3786901   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786902   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786903   +        END;
MPRINT(SCORETABLES):   END;
3786904   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786905   +        _NODE_  =                   51;
MPRINT(SCORETABLES):   _NODE_ = 51;
3786906   +        _LEAF_  =                   20;
MPRINT(SCORETABLES):   _LEAF_ = 20;
3786907   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3786908   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3786909   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3786910   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3786911   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786912   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786913   +        END;
MPRINT(SCORETABLES):   END;
3786914   +      END;
MPRINT(SCORETABLES):   END;
3786915   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786916   +      IF  NOT MISSING(MntCard_Games ) AND
3786917   +            0.50482159571827 <= MntCard_Games  AND
3786918   +        MntCard_Games  <     0.61026789380447 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.50482159571827 <= MntCard_Games
AND MntCard_Games < 0.61026789380447 THEN DO;
3786919   +        IF  NOT MISSING(RANGE_Recency ) AND
3786920   +          RANGE_Recency  <     0.47474747474747 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.47474747474747
THEN DO;
3786921   +          _NODE_  =                   71;
MPRINT(SCORETABLES):   _NODE_ = 71;
3786922   +          _LEAF_  =                   16;
MPRINT(SCORETABLES):   _LEAF_ = 16;
3786923   +          P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3786924   +          P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3786925   +          Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3786926   +          Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3786927   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786928   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786929   +          END;
MPRINT(SCORETABLES):   END;
3786930   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786931   +          _NODE_  =                   72;
MPRINT(SCORETABLES):   _NODE_ = 72;
3786932   +          _LEAF_  =                   17;
MPRINT(SCORETABLES):   _LEAF_ = 17;
3786933   +          P_DepVar0  =     0.95833333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.95833333333333;
3786934   +          P_DepVar1  =     0.04166666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.04166666666666;
3786935   +          Q_DepVar0  =     0.95833333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.95833333333333;
3786936   +          Q_DepVar1  =     0.04166666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.04166666666666;
3786937   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786938   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786939   +          END;
MPRINT(SCORETABLES):   END;
3786940   +        END;
MPRINT(SCORETABLES):   END;
3786941   +      ELSE IF  NOT MISSING(MntCard_Games ) AND
3786942   +            0.61026789380447 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntCard_Games ) AND 0.61026789380447 <=
MntCard_Games THEN DO;
3786943   +        _NODE_  =                   49;
MPRINT(SCORETABLES):   _NODE_ = 49;
3786944   +        _LEAF_  =                   18;
MPRINT(SCORETABLES):   _LEAF_ = 18;
3786945   +        P_DepVar0  =     0.42857142857142;
MPRINT(SCORETABLES):   P_DepVar0 = 0.42857142857142;
3786946   +        P_DepVar1  =     0.57142857142857;
MPRINT(SCORETABLES):   P_DepVar1 = 0.57142857142857;
3786947   +        Q_DepVar0  =     0.42857142857142;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.42857142857142;
3786948   +        Q_DepVar1  =     0.57142857142857;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.57142857142857;
3786949   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786950   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786951   +        END;
MPRINT(SCORETABLES):   END;
3786952   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786953   +        _NODE_  =                   47;
MPRINT(SCORETABLES):   _NODE_ = 47;
3786954   +        _LEAF_  =                   15;
MPRINT(SCORETABLES):   _LEAF_ = 15;
3786955   +        P_DepVar0  =     0.98295454545454;
MPRINT(SCORETABLES):   P_DepVar0 = 0.98295454545454;
3786956   +        P_DepVar1  =     0.01704545454545;
MPRINT(SCORETABLES):   P_DepVar1 = 0.01704545454545;
3786957   +        Q_DepVar0  =     0.98295454545454;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.98295454545454;
3786958   +        Q_DepVar1  =     0.01704545454545;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.01704545454545;
3786959   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786960   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786961   +        END;
MPRINT(SCORETABLES):   END;
3786962   +      END;
MPRINT(SCORETABLES):   END;
3786963   +    END;
MPRINT(SCORETABLES):   END;
3786964   +  END;
MPRINT(SCORETABLES):   END;
3786965   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3786966   +                 0.375 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.375 <=
RANGE_campaign_acceptance THEN DO;
3786967   +  IF  NOT MISSING(RANGE_Recency ) AND
3786968   +        0.38888888888888 <= RANGE_Recency  AND
3786969   +    RANGE_Recency  <     0.63131313131313 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND 0.38888888888888 <= RANGE_Recency
AND RANGE_Recency < 0.63131313131313 THEN DO;
3786970   +    IF  NOT MISSING(NumCatalogPurchases ) AND
3786971   +          0.32085561497326 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.32085561497326 <=
NumCatalogPurchases THEN DO;
3786972   +      _NODE_  =                   28;
MPRINT(SCORETABLES):   _NODE_ = 28;
3786973   +      _LEAF_  =                   23;
MPRINT(SCORETABLES):   _LEAF_ = 23;
3786974   +      P_DepVar0  =                0.125;
MPRINT(SCORETABLES):   P_DepVar0 = 0.125;
3786975   +      P_DepVar1  =                0.875;
MPRINT(SCORETABLES):   P_DepVar1 = 0.875;
3786976   +      Q_DepVar0  =                0.125;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.125;
3786977   +      Q_DepVar1  =                0.875;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.875;
3786978   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3786979   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3786980   +      END;
MPRINT(SCORETABLES):   END;
3786981   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3786982   +      _NODE_  =                   27;
MPRINT(SCORETABLES):   _NODE_ = 27;
3786983   +      _LEAF_  =                   22;
MPRINT(SCORETABLES):   _LEAF_ = 22;
3786984   +      P_DepVar0  =     0.69565217391304;
MPRINT(SCORETABLES):   P_DepVar0 = 0.69565217391304;
3786985   +      P_DepVar1  =     0.30434782608695;
MPRINT(SCORETABLES):   P_DepVar1 = 0.30434782608695;
3786986   +      Q_DepVar0  =     0.69565217391304;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.69565217391304;
3786987   +      Q_DepVar1  =     0.30434782608695;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.30434782608695;
3786988   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3786989   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3786990   +      END;
MPRINT(SCORETABLES):   END;
3786991   +    END;
MPRINT(SCORETABLES):   END;
3786992   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3786993   +        0.63131313131313 <= RANGE_Recency  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.63131313131313 <=
RANGE_Recency THEN DO;
3786994   +    IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3786995   +                     0.875 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.875 <=
RANGE_campaign_acceptance THEN DO;
3786996   +      _NODE_  =                   30;
MPRINT(SCORETABLES):   _NODE_ = 30;
3786997   +      _LEAF_  =                   25;
MPRINT(SCORETABLES):   _LEAF_ = 25;
3786998   +      P_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.33333333333333;
3786999   +      P_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.66666666666666;
3787000   +      Q_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.33333333333333;
3787001   +      Q_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.66666666666666;
3787002   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787003   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787004   +      END;
MPRINT(SCORETABLES):   END;
3787005   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787006   +      _NODE_  =                   29;
MPRINT(SCORETABLES):   _NODE_ = 29;
3787007   +      _LEAF_  =                   24;
MPRINT(SCORETABLES):   _LEAF_ = 24;
3787008   +      P_DepVar0  =     0.88235294117647;
MPRINT(SCORETABLES):   P_DepVar0 = 0.88235294117647;
3787009   +      P_DepVar1  =     0.11764705882352;
MPRINT(SCORETABLES):   P_DepVar1 = 0.11764705882352;
3787010   +      Q_DepVar0  =     0.88235294117647;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.88235294117647;
3787011   +      Q_DepVar1  =     0.11764705882352;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.11764705882352;
3787012   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787013   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787014   +      END;
MPRINT(SCORETABLES):   END;
3787015   +    END;
MPRINT(SCORETABLES):   END;
3787016   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787017   +    _NODE_  =                   10;
MPRINT(SCORETABLES):   _NODE_ = 10;
3787018   +    _LEAF_  =                   21;
MPRINT(SCORETABLES):   _LEAF_ = 21;
3787019   +    P_DepVar0  =     0.10526315789473;
MPRINT(SCORETABLES):   P_DepVar0 = 0.10526315789473;
3787020   +    P_DepVar1  =     0.89473684210526;
MPRINT(SCORETABLES):   P_DepVar1 = 0.89473684210526;
3787021   +    Q_DepVar0  =     0.10526315789473;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.10526315789473;
3787022   +    Q_DepVar1  =     0.89473684210526;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.89473684210526;
3787023   +    I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787024   +    U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787025   +    END;
MPRINT(SCORETABLES):   END;
3787026   +  END;
MPRINT(SCORETABLES):   END;
3787027   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787028   +  IF  NOT MISSING(RANGE_Recency ) AND
3787029   +    RANGE_Recency  <     0.13636363636363 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.13636363636363
THEN DO;
3787030   +    IF  NOT MISSING(MntCard_Games ) AND
3787031   +          0.49489795918367 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.49489795918367 <= MntCard_Games
THEN DO;
3787032   +      _NODE_  =                   14;
MPRINT(SCORETABLES):   _NODE_ = 14;
3787033   +      _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3787034   +      P_DepVar0  =     0.24489795918367;
MPRINT(SCORETABLES):   P_DepVar0 = 0.24489795918367;
3787035   +      P_DepVar1  =     0.75510204081632;
MPRINT(SCORETABLES):   P_DepVar1 = 0.75510204081632;
3787036   +      Q_DepVar0  =     0.24489795918367;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.24489795918367;
3787037   +      Q_DepVar1  =     0.75510204081632;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.75510204081632;
3787038   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787039   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787040   +      END;
MPRINT(SCORETABLES):   END;
3787041   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787042   +      IF  NOT MISSING(NumDealsPurchases ) AND
3787043   +            0.15192307692307 <= NumDealsPurchases  AND
3787044   +        NumDealsPurchases  <     0.35416666666666 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.15192307692307 <=
NumDealsPurchases AND NumDealsPurchases < 0.35416666666666 THEN DO;
3787045   +        _NODE_  =                   32;
MPRINT(SCORETABLES):   _NODE_ = 32;
3787046   +        _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3787047   +        P_DepVar0  =     0.76470588235294;
MPRINT(SCORETABLES):   P_DepVar0 = 0.76470588235294;
3787048   +        P_DepVar1  =     0.23529411764705;
MPRINT(SCORETABLES):   P_DepVar1 = 0.23529411764705;
3787049   +        Q_DepVar0  =     0.76470588235294;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.76470588235294;
3787050   +        Q_DepVar1  =     0.23529411764705;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.23529411764705;
3787051   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787052   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787053   +        END;
MPRINT(SCORETABLES):   END;
3787054   +      ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3787055   +            0.35416666666666 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.35416666666666 <=
NumDealsPurchases THEN DO;
3787056   +        _NODE_  =                   33;
MPRINT(SCORETABLES):   _NODE_ = 33;
3787057   +        _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3787058   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3787059   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3787060   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3787061   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3787062   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787063   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787064   +        END;
MPRINT(SCORETABLES):   END;
3787065   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787066   +        _NODE_  =                   31;
MPRINT(SCORETABLES):   _NODE_ = 31;
3787067   +        _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3787068   +        P_DepVar0  =                0.968;
MPRINT(SCORETABLES):   P_DepVar0 = 0.968;
3787069   +        P_DepVar1  =                0.032;
MPRINT(SCORETABLES):   P_DepVar1 = 0.032;
3787070   +        Q_DepVar0  =                0.968;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.968;
3787071   +        Q_DepVar1  =                0.032;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.032;
3787072   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787073   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787074   +        END;
MPRINT(SCORETABLES):   END;
3787075   +      END;
MPRINT(SCORETABLES):   END;
3787076   +    END;
MPRINT(SCORETABLES):   END;
3787077   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3787078   +        0.13636363636363 <= RANGE_Recency  AND
3787079   +    RANGE_Recency  <     0.36868686868686 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.13636363636363 <=
RANGE_Recency AND RANGE_Recency < 0.36868686868686 THEN DO;
3787080   +    IF  NOT MISSING(NumDealsPurchases ) AND
3787081   +      NumDealsPurchases  <     0.04653679653679 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND NumDealsPurchases <
0.04653679653679 THEN DO;
3787082   +      IF  NOT MISSING(MntCard_Games ) AND
3787083   +            0.63883384460336 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.63883384460336 <= MntCard_Games
THEN DO;
3787084   +        _NODE_  =                   35;
MPRINT(SCORETABLES):   _NODE_ = 35;
3787085   +        _LEAF_  =                    6;
MPRINT(SCORETABLES):   _LEAF_ = 6;
3787086   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3787087   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3787088   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3787089   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3787090   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787091   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787092   +        END;
MPRINT(SCORETABLES):   END;
3787093   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787094   +        _NODE_  =                   34;
MPRINT(SCORETABLES):   _NODE_ = 34;
3787095   +        _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3787096   +        P_DepVar0  =     0.85185185185185;
MPRINT(SCORETABLES):   P_DepVar0 = 0.85185185185185;
3787097   +        P_DepVar1  =     0.14814814814814;
MPRINT(SCORETABLES):   P_DepVar1 = 0.14814814814814;
3787098   +        Q_DepVar0  =     0.85185185185185;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.85185185185185;
3787099   +        Q_DepVar1  =     0.14814814814814;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.14814814814814;
3787100   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787101   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787102   +        END;
MPRINT(SCORETABLES):   END;
3787103   +      END;
MPRINT(SCORETABLES):   END;
3787104   +    ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3787105   +          0.20294117647058 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.20294117647058 <=
NumDealsPurchases THEN DO;
3787106   +      IF  NOT MISSING(MntCard_Games ) AND
3787107   +        MntCard_Games  <     0.35027388922702 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND MntCard_Games < 0.35027388922702
THEN DO;
3787108   +        _NODE_  =                   38;
MPRINT(SCORETABLES):   _NODE_ = 38;
3787109   +        _LEAF_  =                    8;
MPRINT(SCORETABLES):   _LEAF_ = 8;
3787110   +        P_DepVar0  =     0.90322580645161;
MPRINT(SCORETABLES):   P_DepVar0 = 0.90322580645161;
3787111   +        P_DepVar1  =     0.09677419354838;
MPRINT(SCORETABLES):   P_DepVar1 = 0.09677419354838;
3787112   +        Q_DepVar0  =     0.90322580645161;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.90322580645161;
3787113   +        Q_DepVar1  =     0.09677419354838;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.09677419354838;
3787114   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787115   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787116   +        END;
MPRINT(SCORETABLES):   END;
3787117   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787118   +        _NODE_  =                   39;
MPRINT(SCORETABLES):   _NODE_ = 39;
3787119   +        _LEAF_  =                    9;
MPRINT(SCORETABLES):   _LEAF_ = 9;
3787120   +        P_DepVar0  =              0.40625;
MPRINT(SCORETABLES):   P_DepVar0 = 0.40625;
3787121   +        P_DepVar1  =              0.59375;
MPRINT(SCORETABLES):   P_DepVar1 = 0.59375;
3787122   +        Q_DepVar0  =              0.40625;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.40625;
3787123   +        Q_DepVar1  =              0.59375;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.59375;
3787124   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787125   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787126   +        END;
MPRINT(SCORETABLES):   END;
3787127   +      END;
MPRINT(SCORETABLES):   END;
3787128   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787129   +      _NODE_  =                   16;
MPRINT(SCORETABLES):   _NODE_ = 16;
3787130   +      _LEAF_  =                    7;
MPRINT(SCORETABLES):   _LEAF_ = 7;
3787131   +      P_DepVar0  =      0.9718875502008;
MPRINT(SCORETABLES):   P_DepVar0 = 0.9718875502008;
3787132   +      P_DepVar1  =     0.02811244979919;
MPRINT(SCORETABLES):   P_DepVar1 = 0.02811244979919;
3787133   +      Q_DepVar0  =      0.9718875502008;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.9718875502008;
3787134   +      Q_DepVar1  =     0.02811244979919;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.02811244979919;
3787135   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787136   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787137   +      END;
MPRINT(SCORETABLES):   END;
3787138   +    END;
MPRINT(SCORETABLES):   END;
3787139   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787140   +    _NODE_  =                    7;
MPRINT(SCORETABLES):   _NODE_ = 7;
3787141   +    _LEAF_  =                   10;
MPRINT(SCORETABLES):   _LEAF_ = 10;
3787142   +    P_DepVar0  =     0.99126213592233;
MPRINT(SCORETABLES):   P_DepVar0 = 0.99126213592233;
3787143   +    P_DepVar1  =     0.00873786407766;
MPRINT(SCORETABLES):   P_DepVar1 = 0.00873786407766;
3787144   +    Q_DepVar0  =     0.99126213592233;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.99126213592233;
3787145   +    Q_DepVar1  =     0.00873786407766;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.00873786407766;
3787146   +    I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787147   +    U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787148   +    END;
MPRINT(SCORETABLES):   END;
3787149   +  END;
MPRINT(SCORETABLES):   END;
3787150   +
3787151   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3787152   +IF  F_DepVar  NE '0'
3787153   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3787154   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3787155   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3787156   + END;
MPRINT(SCORETABLES):   END;
3787157   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787158   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3787159   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3787160   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3787161   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3787162   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3787163   +       END;
MPRINT(SCORETABLES):   END;
3787164   + END;
MPRINT(SCORETABLES):   END;
3787165   +
3787166   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3787167   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3787168   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3787169   +
3787170   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3787171   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3787172   +* EndGrp2: EndGroup;
MPRINT(SCORETABLES):   * EndGrp2: EndGroup;
3787173   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3787174   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3787175   +* Group: ^(cv_var =8);
MPRINT(SCORETABLES):   * Group: ^(cv_var =8);
3787176   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3787177   +end;
MPRINT(SCORETABLES):   end;
3787178   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3787179   +* Grp2: StartGroup;
MPRINT(SCORETABLES):   * Grp2: StartGroup;
3787180   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3787181   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3787182   +* Group: ^(cv_var =9);
MPRINT(SCORETABLES):   * Group: ^(cv_var =9);
3787183   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3787184   +if (cv_var =9)  then do;
MPRINT(SCORETABLES):   if (cv_var =9) then do;
3787185   +_XVAL_=9;
MPRINT(SCORETABLES):   _XVAL_=9;
3787186   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3787187   +* Tree2: DecisionTree;
MPRINT(SCORETABLES):   * Tree2: DecisionTree;
3787188   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3787189   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3787190   +* Group: ^(cv_var =9);
MPRINT(SCORETABLES):   * Group: ^(cv_var =9);
3787191   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3787192   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3787193   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3787194   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3787195   +
3787196   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3787197   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3787198   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3787199   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3787200   +
3787201   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3787202   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3787203   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3787204   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3787205   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3787206   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3787207   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3787208   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3787209   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3787210   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3787211   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3787212   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3787213   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3787214   +
3787215   +
3787216   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3787217   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3787218   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3787219   +
3787220   +
3787221   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3787222   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3787223   +
3787224   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3787225   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3787226   +                 0.125 <= RANGE_campaign_acceptance  AND
3787227   +  RANGE_campaign_acceptance  <                0.375 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <=
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.375 THEN DO;
3787228   +  IF  NOT MISSING(RANGE_Recency ) AND
3787229   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888
THEN DO;
3787230   +    IF  NOT MISSING(MntCard_Games ) AND
3787231   +          0.37104462156395 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.37104462156395 <= MntCard_Games
THEN DO;
3787232   +      _NODE_  =                   22;
MPRINT(SCORETABLES):   _NODE_ = 22;
3787233   +      _LEAF_  =                   14;
MPRINT(SCORETABLES):   _LEAF_ = 14;
3787234   +      P_DepVar0  =     0.08064516129032;
MPRINT(SCORETABLES):   P_DepVar0 = 0.08064516129032;
3787235   +      P_DepVar1  =     0.91935483870967;
MPRINT(SCORETABLES):   P_DepVar1 = 0.91935483870967;
3787236   +      Q_DepVar0  =     0.08064516129032;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.08064516129032;
3787237   +      Q_DepVar1  =     0.91935483870967;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.91935483870967;
3787238   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787239   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787240   +      END;
MPRINT(SCORETABLES):   END;
3787241   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787242   +      IF  NOT MISSING(NumCatalogPurchases ) AND
3787243   +            0.24068965517241 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.24068965517241 <=
NumCatalogPurchases THEN DO;
3787244   +        IF  NOT MISSING(NumDealsPurchases ) AND
3787245   +              0.11896551724137 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.11896551724137 <=
NumDealsPurchases THEN DO;
3787246   +          _NODE_  =                   69;
MPRINT(SCORETABLES):   _NODE_ = 69;
3787247   +          _LEAF_  =                   13;
MPRINT(SCORETABLES):   _LEAF_ = 13;
3787248   +          P_DepVar0  =     0.07142857142857;
MPRINT(SCORETABLES):   P_DepVar0 = 0.07142857142857;
3787249   +          P_DepVar1  =     0.92857142857142;
MPRINT(SCORETABLES):   P_DepVar1 = 0.92857142857142;
3787250   +          Q_DepVar0  =     0.07142857142857;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.07142857142857;
3787251   +          Q_DepVar1  =     0.92857142857142;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.92857142857142;
3787252   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787253   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787254   +          END;
MPRINT(SCORETABLES):   END;
3787255   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787256   +          _NODE_  =                   68;
MPRINT(SCORETABLES):   _NODE_ = 68;
3787257   +          _LEAF_  =                   12;
MPRINT(SCORETABLES):   _LEAF_ = 12;
3787258   +          P_DepVar0  =     0.60869565217391;
MPRINT(SCORETABLES):   P_DepVar0 = 0.60869565217391;
3787259   +          P_DepVar1  =     0.39130434782608;
MPRINT(SCORETABLES):   P_DepVar1 = 0.39130434782608;
3787260   +          Q_DepVar0  =     0.60869565217391;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.60869565217391;
3787261   +          Q_DepVar1  =     0.39130434782608;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.39130434782608;
3787262   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787263   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787264   +          END;
MPRINT(SCORETABLES):   END;
3787265   +        END;
MPRINT(SCORETABLES):   END;
3787266   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787267   +        _NODE_  =                   44;
MPRINT(SCORETABLES):   _NODE_ = 44;
3787268   +        _LEAF_  =                   11;
MPRINT(SCORETABLES):   _LEAF_ = 11;
3787269   +        P_DepVar0  =     0.86666666666666;
MPRINT(SCORETABLES):   P_DepVar0 = 0.86666666666666;
3787270   +        P_DepVar1  =     0.13333333333333;
MPRINT(SCORETABLES):   P_DepVar1 = 0.13333333333333;
3787271   +        Q_DepVar0  =     0.86666666666666;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.86666666666666;
3787272   +        Q_DepVar1  =     0.13333333333333;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.13333333333333;
3787273   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787274   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787275   +        END;
MPRINT(SCORETABLES):   END;
3787276   +      END;
MPRINT(SCORETABLES):   END;
3787277   +    END;
MPRINT(SCORETABLES):   END;
3787278   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787279   +    IF  NOT MISSING(NumDealsPurchases ) AND
3787280   +          0.31009615384615 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.31009615384615 <=
NumDealsPurchases THEN DO;
3787281   +      IF  NOT MISSING(RANGE_Frq ) AND
3787282   +        RANGE_Frq  <     0.28333333333333 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Frq ) AND RANGE_Frq < 0.28333333333333 THEN DO;
3787283   +        _NODE_  =                   50;
MPRINT(SCORETABLES):   _NODE_ = 50;
3787284   +        _LEAF_  =                   18;
MPRINT(SCORETABLES):   _LEAF_ = 18;
3787285   +        P_DepVar0  =                  0.2;
MPRINT(SCORETABLES):   P_DepVar0 = 0.2;
3787286   +        P_DepVar1  =                  0.8;
MPRINT(SCORETABLES):   P_DepVar1 = 0.8;
3787287   +        Q_DepVar0  =                  0.2;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.2;
3787288   +        Q_DepVar1  =                  0.8;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.8;
3787289   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787290   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787291   +        END;
MPRINT(SCORETABLES):   END;
3787292   +      ELSE IF  NOT MISSING(RANGE_Frq ) AND
3787293   +            0.41666666666666 <= RANGE_Frq  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Frq ) AND 0.41666666666666 <= RANGE_Frq THEN
DO;
3787294   +        _NODE_  =                   52;
MPRINT(SCORETABLES):   _NODE_ = 52;
3787295   +        _LEAF_  =                   20;
MPRINT(SCORETABLES):   _LEAF_ = 20;
3787296   +        P_DepVar0  =                  0.2;
MPRINT(SCORETABLES):   P_DepVar0 = 0.2;
3787297   +        P_DepVar1  =                  0.8;
MPRINT(SCORETABLES):   P_DepVar1 = 0.8;
3787298   +        Q_DepVar0  =                  0.2;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.2;
3787299   +        Q_DepVar1  =                  0.8;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.8;
3787300   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787301   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787302   +        END;
MPRINT(SCORETABLES):   END;
3787303   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787304   +        _NODE_  =                   51;
MPRINT(SCORETABLES):   _NODE_ = 51;
3787305   +        _LEAF_  =                   19;
MPRINT(SCORETABLES):   _LEAF_ = 19;
3787306   +        P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3787307   +        P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3787308   +        Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3787309   +        Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3787310   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787311   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787312   +        END;
MPRINT(SCORETABLES):   END;
3787313   +      END;
MPRINT(SCORETABLES):   END;
3787314   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787315   +      IF  NOT MISSING(MntCard_Games ) AND
3787316   +            0.52461453744493 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.52461453744493 <= MntCard_Games
THEN DO;
3787317   +        IF  NOT MISSING(RANGE_Recency ) AND
3787318   +          RANGE_Recency  <     0.51515151515151 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.51515151515151
THEN DO;
3787319   +          _NODE_  =                   73;
MPRINT(SCORETABLES):   _NODE_ = 73;
3787320   +          _LEAF_  =                   16;
MPRINT(SCORETABLES):   _LEAF_ = 16;
3787321   +          P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3787322   +          P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3787323   +          Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3787324   +          Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3787325   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787326   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787327   +          END;
MPRINT(SCORETABLES):   END;
3787328   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787329   +          _NODE_  =                   74;
MPRINT(SCORETABLES):   _NODE_ = 74;
3787330   +          _LEAF_  =                   17;
MPRINT(SCORETABLES):   _LEAF_ = 17;
3787331   +          P_DepVar0  =                 0.85;
MPRINT(SCORETABLES):   P_DepVar0 = 0.85;
3787332   +          P_DepVar1  =                 0.15;
MPRINT(SCORETABLES):   P_DepVar1 = 0.15;
3787333   +          Q_DepVar0  =                 0.85;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.85;
3787334   +          Q_DepVar1  =                 0.15;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.15;
3787335   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787336   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787337   +          END;
MPRINT(SCORETABLES):   END;
3787338   +        END;
MPRINT(SCORETABLES):   END;
3787339   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787340   +        _NODE_  =                   48;
MPRINT(SCORETABLES):   _NODE_ = 48;
3787341   +        _LEAF_  =                   15;
MPRINT(SCORETABLES):   _LEAF_ = 15;
3787342   +        P_DepVar0  =     0.98255813953488;
MPRINT(SCORETABLES):   P_DepVar0 = 0.98255813953488;
3787343   +        P_DepVar1  =     0.01744186046511;
MPRINT(SCORETABLES):   P_DepVar1 = 0.01744186046511;
3787344   +        Q_DepVar0  =     0.98255813953488;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.98255813953488;
3787345   +        Q_DepVar1  =     0.01744186046511;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.01744186046511;
3787346   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787347   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787348   +        END;
MPRINT(SCORETABLES):   END;
3787349   +      END;
MPRINT(SCORETABLES):   END;
3787350   +    END;
MPRINT(SCORETABLES):   END;
3787351   +  END;
MPRINT(SCORETABLES):   END;
3787352   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3787353   +                 0.375 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.375 <=
RANGE_campaign_acceptance THEN DO;
3787354   +  IF  NOT MISSING(RANGE_Recency ) AND
3787355   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888
THEN DO;
3787356   +    _NODE_  =                   10;
MPRINT(SCORETABLES):   _NODE_ = 10;
3787357   +    _LEAF_  =                   21;
MPRINT(SCORETABLES):   _LEAF_ = 21;
3787358   +    P_DepVar0  =     0.10169491525423;
MPRINT(SCORETABLES):   P_DepVar0 = 0.10169491525423;
3787359   +    P_DepVar1  =     0.89830508474576;
MPRINT(SCORETABLES):   P_DepVar1 = 0.89830508474576;
3787360   +    Q_DepVar0  =     0.10169491525423;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.10169491525423;
3787361   +    Q_DepVar1  =     0.89830508474576;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.89830508474576;
3787362   +    I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787363   +    U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787364   +    END;
MPRINT(SCORETABLES):   END;
3787365   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3787366   +        0.38888888888888 <= RANGE_Recency  AND
3787367   +    RANGE_Recency  <     0.63131313131313 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.38888888888888 <=
RANGE_Recency AND RANGE_Recency < 0.63131313131313 THEN DO;
3787368   +    IF  NOT MISSING(NumCatalogPurchases ) AND
3787369   +          0.32085561497326 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.32085561497326 <=
NumCatalogPurchases THEN DO;
3787370   +      _NODE_  =                   28;
MPRINT(SCORETABLES):   _NODE_ = 28;
3787371   +      _LEAF_  =                   24;
MPRINT(SCORETABLES):   _LEAF_ = 24;
3787372   +      P_DepVar0  =     0.11111111111111;
MPRINT(SCORETABLES):   P_DepVar0 = 0.11111111111111;
3787373   +      P_DepVar1  =     0.88888888888888;
MPRINT(SCORETABLES):   P_DepVar1 = 0.88888888888888;
3787374   +      Q_DepVar0  =     0.11111111111111;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.11111111111111;
3787375   +      Q_DepVar1  =     0.88888888888888;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.88888888888888;
3787376   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787377   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787378   +      END;
MPRINT(SCORETABLES):   END;
3787379   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787380   +      IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3787381   +                       0.625 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.625 <=
RANGE_campaign_acceptance THEN DO;
3787382   +        _NODE_  =                   54;
MPRINT(SCORETABLES):   _NODE_ = 54;
3787383   +        _LEAF_  =                   23;
MPRINT(SCORETABLES):   _LEAF_ = 23;
3787384   +        P_DepVar0  =                  0.2;
MPRINT(SCORETABLES):   P_DepVar0 = 0.2;
3787385   +        P_DepVar1  =                  0.8;
MPRINT(SCORETABLES):   P_DepVar1 = 0.8;
3787386   +        Q_DepVar0  =                  0.2;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.2;
3787387   +        Q_DepVar1  =                  0.8;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.8;
3787388   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787389   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787390   +        END;
MPRINT(SCORETABLES):   END;
3787391   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787392   +        _NODE_  =                   53;
MPRINT(SCORETABLES):   _NODE_ = 53;
3787393   +        _LEAF_  =                   22;
MPRINT(SCORETABLES):   _LEAF_ = 22;
3787394   +        P_DepVar0  =     0.88235294117647;
MPRINT(SCORETABLES):   P_DepVar0 = 0.88235294117647;
3787395   +        P_DepVar1  =     0.11764705882352;
MPRINT(SCORETABLES):   P_DepVar1 = 0.11764705882352;
3787396   +        Q_DepVar0  =     0.88235294117647;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.88235294117647;
3787397   +        Q_DepVar1  =     0.11764705882352;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.11764705882352;
3787398   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787399   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787400   +        END;
MPRINT(SCORETABLES):   END;
3787401   +      END;
MPRINT(SCORETABLES):   END;
3787402   +    END;
MPRINT(SCORETABLES):   END;
3787403   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787404   +    IF  NOT MISSING(MntCard_Games ) AND
3787405   +          0.53238754946171 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.53238754946171 <= MntCard_Games
THEN DO;
3787406   +      _NODE_  =                   30;
MPRINT(SCORETABLES):   _NODE_ = 30;
3787407   +      _LEAF_  =                   27;
MPRINT(SCORETABLES):   _LEAF_ = 27;
3787408   +      P_DepVar0  =     0.36363636363636;
MPRINT(SCORETABLES):   P_DepVar0 = 0.36363636363636;
3787409   +      P_DepVar1  =     0.63636363636363;
MPRINT(SCORETABLES):   P_DepVar1 = 0.63636363636363;
3787410   +      Q_DepVar0  =     0.36363636363636;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.36363636363636;
3787411   +      Q_DepVar1  =     0.63636363636363;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.63636363636363;
3787412   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787413   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787414   +      END;
MPRINT(SCORETABLES):   END;
3787415   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787416   +      IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3787417   +                       0.875 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.875 <=
RANGE_campaign_acceptance THEN DO;
3787418   +        _NODE_  =                   56;
MPRINT(SCORETABLES):   _NODE_ = 56;
3787419   +        _LEAF_  =                   26;
MPRINT(SCORETABLES):   _LEAF_ = 26;
3787420   +        P_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   P_DepVar0 = 0.4;
3787421   +        P_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   P_DepVar1 = 0.6;
3787422   +        Q_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.4;
3787423   +        Q_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.6;
3787424   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787425   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787426   +        END;
MPRINT(SCORETABLES):   END;
3787427   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787428   +        _NODE_  =                   55;
MPRINT(SCORETABLES):   _NODE_ = 55;
3787429   +        _LEAF_  =                   25;
MPRINT(SCORETABLES):   _LEAF_ = 25;
3787430   +        P_DepVar0  =     0.93333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.93333333333333;
3787431   +        P_DepVar1  =     0.06666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.06666666666666;
3787432   +        Q_DepVar0  =     0.93333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.93333333333333;
3787433   +        Q_DepVar1  =     0.06666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.06666666666666;
3787434   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787435   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787436   +        END;
MPRINT(SCORETABLES):   END;
3787437   +      END;
MPRINT(SCORETABLES):   END;
3787438   +    END;
MPRINT(SCORETABLES):   END;
3787439   +  END;
MPRINT(SCORETABLES):   END;
3787440   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787441   +  IF  NOT MISSING(RANGE_Recency ) AND
3787442   +    RANGE_Recency  <     0.13636363636363 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.13636363636363
THEN DO;
3787443   +    IF  NOT MISSING(MntCard_Games ) AND
3787444   +          0.49489795918367 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.49489795918367 <= MntCard_Games
THEN DO;
3787445   +      _NODE_  =                   14;
MPRINT(SCORETABLES):   _NODE_ = 14;
3787446   +      _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3787447   +      P_DepVar0  =     0.26086956521739;
MPRINT(SCORETABLES):   P_DepVar0 = 0.26086956521739;
3787448   +      P_DepVar1  =      0.7391304347826;
MPRINT(SCORETABLES):   P_DepVar1 = 0.7391304347826;
3787449   +      Q_DepVar0  =     0.26086956521739;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.26086956521739;
3787450   +      Q_DepVar1  =      0.7391304347826;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.7391304347826;
3787451   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787452   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787453   +      END;
MPRINT(SCORETABLES):   END;
3787454   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787455   +      IF  NOT MISSING(NumDealsPurchases ) AND
3787456   +            0.14835164835164 <= NumDealsPurchases  AND
3787457   +        NumDealsPurchases  <     0.35416666666666 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.14835164835164 <=
NumDealsPurchases AND NumDealsPurchases < 0.35416666666666 THEN DO;
3787458   +        _NODE_  =                   32;
MPRINT(SCORETABLES):   _NODE_ = 32;
3787459   +        _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3787460   +        P_DepVar0  =     0.77173913043478;
MPRINT(SCORETABLES):   P_DepVar0 = 0.77173913043478;
3787461   +        P_DepVar1  =     0.22826086956521;
MPRINT(SCORETABLES):   P_DepVar1 = 0.22826086956521;
3787462   +        Q_DepVar0  =     0.77173913043478;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.77173913043478;
3787463   +        Q_DepVar1  =     0.22826086956521;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.22826086956521;
3787464   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787465   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787466   +        END;
MPRINT(SCORETABLES):   END;
3787467   +      ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3787468   +            0.35416666666666 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.35416666666666 <=
NumDealsPurchases THEN DO;
3787469   +        _NODE_  =                   33;
MPRINT(SCORETABLES):   _NODE_ = 33;
3787470   +        _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3787471   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3787472   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3787473   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3787474   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3787475   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787476   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787477   +        END;
MPRINT(SCORETABLES):   END;
3787478   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787479   +        _NODE_  =                   31;
MPRINT(SCORETABLES):   _NODE_ = 31;
3787480   +        _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3787481   +        P_DepVar0  =              0.96875;
MPRINT(SCORETABLES):   P_DepVar0 = 0.96875;
3787482   +        P_DepVar1  =              0.03125;
MPRINT(SCORETABLES):   P_DepVar1 = 0.03125;
3787483   +        Q_DepVar0  =              0.96875;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.96875;
3787484   +        Q_DepVar1  =              0.03125;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.03125;
3787485   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787486   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787487   +        END;
MPRINT(SCORETABLES):   END;
3787488   +      END;
MPRINT(SCORETABLES):   END;
3787489   +    END;
MPRINT(SCORETABLES):   END;
3787490   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3787491   +        0.13636363636363 <= RANGE_Recency  AND
3787492   +    RANGE_Recency  <     0.36868686868686 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.13636363636363 <=
RANGE_Recency AND RANGE_Recency < 0.36868686868686 THEN DO;
3787493   +    IF  NOT MISSING(NumDealsPurchases ) AND
3787494   +      NumDealsPurchases  <     0.04653679653679 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND NumDealsPurchases <
0.04653679653679 THEN DO;
3787495   +      IF  NOT MISSING(MntCard_Games ) AND
3787496   +            0.63883384460336 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.63883384460336 <= MntCard_Games
THEN DO;
3787497   +        _NODE_  =                   35;
MPRINT(SCORETABLES):   _NODE_ = 35;
3787498   +        _LEAF_  =                    6;
MPRINT(SCORETABLES):   _LEAF_ = 6;
3787499   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3787500   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3787501   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3787502   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3787503   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787504   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787505   +        END;
MPRINT(SCORETABLES):   END;
3787506   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787507   +        _NODE_  =                   34;
MPRINT(SCORETABLES):   _NODE_ = 34;
3787508   +        _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3787509   +        P_DepVar0  =     0.85185185185185;
MPRINT(SCORETABLES):   P_DepVar0 = 0.85185185185185;
3787510   +        P_DepVar1  =     0.14814814814814;
MPRINT(SCORETABLES):   P_DepVar1 = 0.14814814814814;
3787511   +        Q_DepVar0  =     0.85185185185185;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.85185185185185;
3787512   +        Q_DepVar1  =     0.14814814814814;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.14814814814814;
3787513   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787514   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787515   +        END;
MPRINT(SCORETABLES):   END;
3787516   +      END;
MPRINT(SCORETABLES):   END;
3787517   +    ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3787518   +          0.20294117647058 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.20294117647058 <=
NumDealsPurchases THEN DO;
3787519   +      IF  NOT MISSING(MntCard_Games ) AND
3787520   +        MntCard_Games  <     0.35027388922702 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND MntCard_Games < 0.35027388922702
THEN DO;
3787521   +        _NODE_  =                   39;
MPRINT(SCORETABLES):   _NODE_ = 39;
3787522   +        _LEAF_  =                    8;
MPRINT(SCORETABLES):   _LEAF_ = 8;
3787523   +        P_DepVar0  =                  0.9;
MPRINT(SCORETABLES):   P_DepVar0 = 0.9;
3787524   +        P_DepVar1  =                  0.1;
MPRINT(SCORETABLES):   P_DepVar1 = 0.1;
3787525   +        Q_DepVar0  =                  0.9;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.9;
3787526   +        Q_DepVar1  =                  0.1;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.1;
3787527   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787528   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787529   +        END;
MPRINT(SCORETABLES):   END;
3787530   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787531   +        _NODE_  =                   40;
MPRINT(SCORETABLES):   _NODE_ = 40;
3787532   +        _LEAF_  =                    9;
MPRINT(SCORETABLES):   _LEAF_ = 9;
3787533   +        P_DepVar0  =     0.41935483870967;
MPRINT(SCORETABLES):   P_DepVar0 = 0.41935483870967;
3787534   +        P_DepVar1  =     0.58064516129032;
MPRINT(SCORETABLES):   P_DepVar1 = 0.58064516129032;
3787535   +        Q_DepVar0  =     0.41935483870967;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.41935483870967;
3787536   +        Q_DepVar1  =     0.58064516129032;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.58064516129032;
3787537   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787538   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787539   +        END;
MPRINT(SCORETABLES):   END;
3787540   +      END;
MPRINT(SCORETABLES):   END;
3787541   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787542   +      _NODE_  =                   16;
MPRINT(SCORETABLES):   _NODE_ = 16;
3787543   +      _LEAF_  =                    7;
MPRINT(SCORETABLES):   _LEAF_ = 7;
3787544   +      P_DepVar0  =     0.97590361445783;
MPRINT(SCORETABLES):   P_DepVar0 = 0.97590361445783;
3787545   +      P_DepVar1  =     0.02409638554216;
MPRINT(SCORETABLES):   P_DepVar1 = 0.02409638554216;
3787546   +      Q_DepVar0  =     0.97590361445783;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.97590361445783;
3787547   +      Q_DepVar1  =     0.02409638554216;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.02409638554216;
3787548   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787549   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787550   +      END;
MPRINT(SCORETABLES):   END;
3787551   +    END;
MPRINT(SCORETABLES):   END;
3787552   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787553   +    _NODE_  =                    7;
MPRINT(SCORETABLES):   _NODE_ = 7;
3787554   +    _LEAF_  =                   10;
MPRINT(SCORETABLES):   _LEAF_ = 10;
3787555   +    P_DepVar0  =     0.99121951219512;
MPRINT(SCORETABLES):   P_DepVar0 = 0.99121951219512;
3787556   +    P_DepVar1  =     0.00878048780487;
MPRINT(SCORETABLES):   P_DepVar1 = 0.00878048780487;
3787557   +    Q_DepVar0  =     0.99121951219512;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.99121951219512;
3787558   +    Q_DepVar1  =     0.00878048780487;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.00878048780487;
3787559   +    I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787560   +    U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787561   +    END;
MPRINT(SCORETABLES):   END;
3787562   +  END;
MPRINT(SCORETABLES):   END;
3787563   +
3787564   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3787565   +IF  F_DepVar  NE '0'
3787566   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3787567   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3787568   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3787569   + END;
MPRINT(SCORETABLES):   END;
3787570   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787571   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3787572   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3787573   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3787574   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3787575   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3787576   +       END;
MPRINT(SCORETABLES):   END;
3787577   + END;
MPRINT(SCORETABLES):   END;
3787578   +
3787579   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3787580   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3787581   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3787582   +
3787583   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3787584   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3787585   +* EndGrp2: EndGroup;
MPRINT(SCORETABLES):   * EndGrp2: EndGroup;
3787586   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3787587   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3787588   +* Group: ^(cv_var =9);
MPRINT(SCORETABLES):   * Group: ^(cv_var =9);
3787589   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3787590   +end;
MPRINT(SCORETABLES):   end;
3787591   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3787592   +* Grp2: StartGroup;
MPRINT(SCORETABLES):   * Grp2: StartGroup;
3787593   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3787594   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3787595   +* Group: ^(cv_var =10);
MPRINT(SCORETABLES):   * Group: ^(cv_var =10);
3787596   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3787597   +if (cv_var =10)  then do;
MPRINT(SCORETABLES):   if (cv_var =10) then do;
3787598   +_XVAL_=10;
MPRINT(SCORETABLES):   _XVAL_=10;
3787599   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3787600   +* Tree2: DecisionTree;
MPRINT(SCORETABLES):   * Tree2: DecisionTree;
3787601   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3787602   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3787603   +* Group: ^(cv_var =10);
MPRINT(SCORETABLES):   * Group: ^(cv_var =10);
3787604   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3787605   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3787606   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3787607   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3787608   +
3787609   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3787610   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3787611   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3787612   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3787613   +
3787614   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3787615   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3787616   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3787617   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3787618   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3787619   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3787620   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3787621   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3787622   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3787623   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3787624   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3787625   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3787626   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3787627   +
3787628   +
3787629   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3787630   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3787631   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3787632   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_8 $ 8;
MPRINT(SCORETABLES):   DROP _ARBFMT_8;
3787633   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_8 = ' ';
3787634   +
3787635   +
3787636   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3787637   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3787638   +
3787639   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3787640   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3787641   +                 0.125 <= RANGE_campaign_acceptance  AND
3787642   +  RANGE_campaign_acceptance  <                0.375 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <=
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.375 THEN DO;
3787643   +  IF  NOT MISSING(RANGE_Recency ) AND
3787644   +    RANGE_Recency  <     0.31818181818181 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.31818181818181
THEN DO;
3787645   +    IF  NOT MISSING(MntCard_Games ) AND
3787646   +      MntCard_Games  <     0.27480595174713 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND MntCard_Games < 0.27480595174713
THEN DO;
3787647   +      IF  NOT MISSING(NumCatalogPurchases ) AND
3787648   +            0.27429467084639 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.27429467084639 <=
NumCatalogPurchases THEN DO;
3787649   +        _NODE_  =                   44;
MPRINT(SCORETABLES):   _NODE_ = 44;
3787650   +        _LEAF_  =                   12;
MPRINT(SCORETABLES):   _LEAF_ = 12;
3787651   +        P_DepVar0  =      0.3076923076923;
MPRINT(SCORETABLES):   P_DepVar0 = 0.3076923076923;
3787652   +        P_DepVar1  =     0.69230769230769;
MPRINT(SCORETABLES):   P_DepVar1 = 0.69230769230769;
3787653   +        Q_DepVar0  =      0.3076923076923;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.3076923076923;
3787654   +        Q_DepVar1  =     0.69230769230769;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.69230769230769;
3787655   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787656   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787657   +        END;
MPRINT(SCORETABLES):   END;
3787658   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787659   +        _NODE_  =                   43;
MPRINT(SCORETABLES):   _NODE_ = 43;
3787660   +        _LEAF_  =                   11;
MPRINT(SCORETABLES):   _LEAF_ = 11;
3787661   +        P_DepVar0  =     0.93939393939393;
MPRINT(SCORETABLES):   P_DepVar0 = 0.93939393939393;
3787662   +        P_DepVar1  =     0.06060606060606;
MPRINT(SCORETABLES):   P_DepVar1 = 0.06060606060606;
3787663   +        Q_DepVar0  =     0.93939393939393;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.93939393939393;
3787664   +        Q_DepVar1  =     0.06060606060606;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.06060606060606;
3787665   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787666   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787667   +        END;
MPRINT(SCORETABLES):   END;
3787668   +      END;
MPRINT(SCORETABLES):   END;
3787669   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787670   +      IF  NOT MISSING(RANGE_Recency ) AND
3787671   +            0.25757575757575 <= RANGE_Recency  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND 0.25757575757575 <= RANGE_Recency
THEN DO;
3787672   +        IF  NOT MISSING(MntCard_Games ) AND
3787673   +              0.44589860532751 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.44589860532751 <= MntCard_Games
THEN DO;
3787674   +          _NODE_  =                   67;
MPRINT(SCORETABLES):   _NODE_ = 67;
3787675   +          _LEAF_  =                   15;
MPRINT(SCORETABLES):   _LEAF_ = 15;
3787676   +          P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3787677   +          P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3787678   +          Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3787679   +          Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3787680   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787681   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787682   +          END;
MPRINT(SCORETABLES):   END;
3787683   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787684   +          _NODE_  =                   66;
MPRINT(SCORETABLES):   _NODE_ = 66;
3787685   +          _LEAF_  =                   14;
MPRINT(SCORETABLES):   _LEAF_ = 14;
3787686   +          P_DepVar0  =                 0.75;
MPRINT(SCORETABLES):   P_DepVar0 = 0.75;
3787687   +          P_DepVar1  =                 0.25;
MPRINT(SCORETABLES):   P_DepVar1 = 0.25;
3787688   +          Q_DepVar0  =                 0.75;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.75;
3787689   +          Q_DepVar1  =                 0.25;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.25;
3787690   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787691   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787692   +          END;
MPRINT(SCORETABLES):   END;
3787693   +        END;
MPRINT(SCORETABLES):   END;
3787694   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787695   +        _NODE_  =                   45;
MPRINT(SCORETABLES):   _NODE_ = 45;
3787696   +        _LEAF_  =                   13;
MPRINT(SCORETABLES):   _LEAF_ = 13;
3787697   +        P_DepVar0  =      0.0983606557377;
MPRINT(SCORETABLES):   P_DepVar0 = 0.0983606557377;
3787698   +        P_DepVar1  =     0.90163934426229;
MPRINT(SCORETABLES):   P_DepVar1 = 0.90163934426229;
3787699   +        Q_DepVar0  =      0.0983606557377;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.0983606557377;
3787700   +        Q_DepVar1  =     0.90163934426229;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.90163934426229;
3787701   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787702   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787703   +        END;
MPRINT(SCORETABLES):   END;
3787704   +      END;
MPRINT(SCORETABLES):   END;
3787705   +    END;
MPRINT(SCORETABLES):   END;
3787706   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787707   +    IF  NOT MISSING(NumDealsPurchases ) AND
3787708   +          0.34313725490196 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.34313725490196 <=
NumDealsPurchases THEN DO;
3787709   +      _NODE_  =                   24;
MPRINT(SCORETABLES):   _NODE_ = 24;
3787710   +      _LEAF_  =                   19;
MPRINT(SCORETABLES):   _LEAF_ = 19;
3787711   +      P_DepVar0  =     0.38461538461538;
MPRINT(SCORETABLES):   P_DepVar0 = 0.38461538461538;
3787712   +      P_DepVar1  =     0.61538461538461;
MPRINT(SCORETABLES):   P_DepVar1 = 0.61538461538461;
3787713   +      Q_DepVar0  =     0.38461538461538;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.38461538461538;
3787714   +      Q_DepVar1  =     0.61538461538461;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.61538461538461;
3787715   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787716   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787717   +      END;
MPRINT(SCORETABLES):   END;
3787718   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787719   +      IF  NOT MISSING(MntCard_Games ) AND
3787720   +            0.52461453744493 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.52461453744493 <= MntCard_Games
THEN DO;
3787721   +        IF  NOT MISSING(RANGE_Recency ) AND
3787722   +          RANGE_Recency  <     0.51010101010101 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.51010101010101
THEN DO;
3787723   +          _NODE_  =                   71;
MPRINT(SCORETABLES):   _NODE_ = 71;
3787724   +          _LEAF_  =                   17;
MPRINT(SCORETABLES):   _LEAF_ = 17;
3787725   +          P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3787726   +          P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3787727   +          Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3787728   +          Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3787729   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787730   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787731   +          END;
MPRINT(SCORETABLES):   END;
3787732   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787733   +          _NODE_  =                   72;
MPRINT(SCORETABLES):   _NODE_ = 72;
3787734   +          _LEAF_  =                   18;
MPRINT(SCORETABLES):   _LEAF_ = 18;
3787735   +          P_DepVar0  =      0.8695652173913;
MPRINT(SCORETABLES):   P_DepVar0 = 0.8695652173913;
3787736   +          P_DepVar1  =     0.13043478260869;
MPRINT(SCORETABLES):   P_DepVar1 = 0.13043478260869;
3787737   +          Q_DepVar0  =      0.8695652173913;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.8695652173913;
3787738   +          Q_DepVar1  =     0.13043478260869;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.13043478260869;
3787739   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787740   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787741   +          END;
MPRINT(SCORETABLES):   END;
3787742   +        END;
MPRINT(SCORETABLES):   END;
3787743   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787744   +        _NODE_  =                   47;
MPRINT(SCORETABLES):   _NODE_ = 47;
3787745   +        _LEAF_  =                   16;
MPRINT(SCORETABLES):   _LEAF_ = 16;
3787746   +        P_DepVar0  =     0.97311827956989;
MPRINT(SCORETABLES):   P_DepVar0 = 0.97311827956989;
3787747   +        P_DepVar1  =      0.0268817204301;
MPRINT(SCORETABLES):   P_DepVar1 = 0.0268817204301;
3787748   +        Q_DepVar0  =     0.97311827956989;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.97311827956989;
3787749   +        Q_DepVar1  =      0.0268817204301;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.0268817204301;
3787750   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787751   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787752   +        END;
MPRINT(SCORETABLES):   END;
3787753   +      END;
MPRINT(SCORETABLES):   END;
3787754   +    END;
MPRINT(SCORETABLES):   END;
3787755   +  END;
MPRINT(SCORETABLES):   END;
3787756   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3787757   +                 0.375 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.375 <=
RANGE_campaign_acceptance THEN DO;
3787758   +  IF  NOT MISSING(RANGE_Recency ) AND
3787759   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888
THEN DO;
3787760   +    _NODE_  =                   10;
MPRINT(SCORETABLES):   _NODE_ = 10;
3787761   +    _LEAF_  =                   20;
MPRINT(SCORETABLES):   _LEAF_ = 20;
3787762   +    P_DepVar0  =     0.10526315789473;
MPRINT(SCORETABLES):   P_DepVar0 = 0.10526315789473;
3787763   +    P_DepVar1  =     0.89473684210526;
MPRINT(SCORETABLES):   P_DepVar1 = 0.89473684210526;
3787764   +    Q_DepVar0  =     0.10526315789473;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.10526315789473;
3787765   +    Q_DepVar1  =     0.89473684210526;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.89473684210526;
3787766   +    I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787767   +    U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787768   +    END;
MPRINT(SCORETABLES):   END;
3787769   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3787770   +        0.38888888888888 <= RANGE_Recency  AND
3787771   +    RANGE_Recency  <     0.63131313131313 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.38888888888888 <=
RANGE_Recency AND RANGE_Recency < 0.63131313131313 THEN DO;
3787772   +    IF  NOT MISSING(NumCatalogPurchases ) AND
3787773   +          0.32085561497326 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.32085561497326 <=
NumCatalogPurchases THEN DO;
3787774   +      _NODE_  =                   28;
MPRINT(SCORETABLES):   _NODE_ = 28;
3787775   +      _LEAF_  =                   22;
MPRINT(SCORETABLES):   _LEAF_ = 22;
3787776   +      P_DepVar0  =                0.125;
MPRINT(SCORETABLES):   P_DepVar0 = 0.125;
3787777   +      P_DepVar1  =                0.875;
MPRINT(SCORETABLES):   P_DepVar1 = 0.875;
3787778   +      Q_DepVar0  =                0.125;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.125;
3787779   +      Q_DepVar1  =                0.875;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.875;
3787780   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787781   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787782   +      END;
MPRINT(SCORETABLES):   END;
3787783   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787784   +      _NODE_  =                   27;
MPRINT(SCORETABLES):   _NODE_ = 27;
3787785   +      _LEAF_  =                   21;
MPRINT(SCORETABLES):   _LEAF_ = 21;
3787786   +      P_DepVar0  =                  0.7;
MPRINT(SCORETABLES):   P_DepVar0 = 0.7;
3787787   +      P_DepVar1  =                  0.3;
MPRINT(SCORETABLES):   P_DepVar1 = 0.3;
3787788   +      Q_DepVar0  =                  0.7;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.7;
3787789   +      Q_DepVar1  =                  0.3;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.3;
3787790   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787791   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787792   +      END;
MPRINT(SCORETABLES):   END;
3787793   +    END;
MPRINT(SCORETABLES):   END;
3787794   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787795   +    _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(SCORETABLES):   _ARBFMT_8 = PUT( Marital_Status , $8.);
3787796   +     %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(SCORETABLES):  ;
3787797   +    IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
MPRINT(SCORETABLES):   IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
3787798   +      _NODE_  =                   29;
MPRINT(SCORETABLES):   _NODE_ = 29;
3787799   +      _LEAF_  =                   23;
MPRINT(SCORETABLES):   _LEAF_ = 23;
3787800   +      P_DepVar0  =     0.93181818181818;
MPRINT(SCORETABLES):   P_DepVar0 = 0.93181818181818;
3787801   +      P_DepVar1  =     0.06818181818181;
MPRINT(SCORETABLES):   P_DepVar1 = 0.06818181818181;
3787802   +      Q_DepVar0  =     0.93181818181818;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.93181818181818;
3787803   +      Q_DepVar1  =     0.06818181818181;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.06818181818181;
3787804   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787805   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787806   +      END;
MPRINT(SCORETABLES):   END;
3787807   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787808   +      IF  NOT MISSING(MntCard_Games ) AND
3787809   +             0.4699259811227 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.4699259811227 <= MntCard_Games
THEN DO;
3787810   +        _NODE_  =                   50;
MPRINT(SCORETABLES):   _NODE_ = 50;
3787811   +        _LEAF_  =                   25;
MPRINT(SCORETABLES):   _LEAF_ = 25;
3787812   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3787813   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3787814   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3787815   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3787816   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787817   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787818   +        END;
MPRINT(SCORETABLES):   END;
3787819   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787820   +        _NODE_  =                   49;
MPRINT(SCORETABLES):   _NODE_ = 49;
3787821   +        _LEAF_  =                   24;
MPRINT(SCORETABLES):   _LEAF_ = 24;
3787822   +        P_DepVar0  =                 0.75;
MPRINT(SCORETABLES):   P_DepVar0 = 0.75;
3787823   +        P_DepVar1  =                 0.25;
MPRINT(SCORETABLES):   P_DepVar1 = 0.25;
3787824   +        Q_DepVar0  =                 0.75;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.75;
3787825   +        Q_DepVar1  =                 0.25;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.25;
3787826   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787827   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787828   +        END;
MPRINT(SCORETABLES):   END;
3787829   +      END;
MPRINT(SCORETABLES):   END;
3787830   +    END;
MPRINT(SCORETABLES):   END;
3787831   +  END;
MPRINT(SCORETABLES):   END;
3787832   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787833   +  IF  NOT MISSING(RANGE_Recency ) AND
3787834   +    RANGE_Recency  <     0.13636363636363 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.13636363636363
THEN DO;
3787835   +    IF  NOT MISSING(MntCard_Games ) AND
3787836   +          0.49489795918367 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.49489795918367 <= MntCard_Games
THEN DO;
3787837   +      _NODE_  =                   14;
MPRINT(SCORETABLES):   _NODE_ = 14;
3787838   +      _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3787839   +      P_DepVar0  =                 0.32;
MPRINT(SCORETABLES):   P_DepVar0 = 0.32;
3787840   +      P_DepVar1  =                 0.68;
MPRINT(SCORETABLES):   P_DepVar1 = 0.68;
3787841   +      Q_DepVar0  =                 0.32;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.32;
3787842   +      Q_DepVar1  =                 0.68;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.68;
3787843   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787844   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787845   +      END;
MPRINT(SCORETABLES):   END;
3787846   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787847   +      IF  NOT MISSING(NumDealsPurchases ) AND
3787848   +            0.17156862745098 <= NumDealsPurchases  AND
3787849   +        NumDealsPurchases  <     0.35416666666666 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.17156862745098 <=
NumDealsPurchases AND NumDealsPurchases < 0.35416666666666 THEN DO;
3787850   +        _NODE_  =                   32;
MPRINT(SCORETABLES):   _NODE_ = 32;
3787851   +        _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3787852   +        P_DepVar0  =     0.72413793103448;
MPRINT(SCORETABLES):   P_DepVar0 = 0.72413793103448;
3787853   +        P_DepVar1  =     0.27586206896551;
MPRINT(SCORETABLES):   P_DepVar1 = 0.27586206896551;
3787854   +        Q_DepVar0  =     0.72413793103448;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.72413793103448;
3787855   +        Q_DepVar1  =     0.27586206896551;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.27586206896551;
3787856   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787857   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787858   +        END;
MPRINT(SCORETABLES):   END;
3787859   +      ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3787860   +            0.35416666666666 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.35416666666666 <=
NumDealsPurchases THEN DO;
3787861   +        _NODE_  =                   33;
MPRINT(SCORETABLES):   _NODE_ = 33;
3787862   +        _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3787863   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3787864   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3787865   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3787866   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3787867   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787868   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787869   +        END;
MPRINT(SCORETABLES):   END;
3787870   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787871   +        _NODE_  =                   31;
MPRINT(SCORETABLES):   _NODE_ = 31;
3787872   +        _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3787873   +        P_DepVar0  =     0.94666666666666;
MPRINT(SCORETABLES):   P_DepVar0 = 0.94666666666666;
3787874   +        P_DepVar1  =     0.05333333333333;
MPRINT(SCORETABLES):   P_DepVar1 = 0.05333333333333;
3787875   +        Q_DepVar0  =     0.94666666666666;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.94666666666666;
3787876   +        Q_DepVar1  =     0.05333333333333;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.05333333333333;
3787877   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787878   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787879   +        END;
MPRINT(SCORETABLES):   END;
3787880   +      END;
MPRINT(SCORETABLES):   END;
3787881   +    END;
MPRINT(SCORETABLES):   END;
3787882   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3787883   +        0.13636363636363 <= RANGE_Recency  AND
3787884   +    RANGE_Recency  <     0.35858585858585 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.13636363636363 <=
RANGE_Recency AND RANGE_Recency < 0.35858585858585 THEN DO;
3787885   +    IF  NOT MISSING(NumDealsPurchases ) AND
3787886   +      NumDealsPurchases  <     0.04653679653679 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND NumDealsPurchases <
0.04653679653679 THEN DO;
3787887   +      IF  NOT MISSING(MntCard_Games ) AND
3787888   +            0.63883384460336 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.63883384460336 <= MntCard_Games
THEN DO;
3787889   +        _NODE_  =                   35;
MPRINT(SCORETABLES):   _NODE_ = 35;
3787890   +        _LEAF_  =                    6;
MPRINT(SCORETABLES):   _LEAF_ = 6;
3787891   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3787892   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3787893   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3787894   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3787895   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787896   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787897   +        END;
MPRINT(SCORETABLES):   END;
3787898   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787899   +        _NODE_  =                   34;
MPRINT(SCORETABLES):   _NODE_ = 34;
3787900   +        _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3787901   +        P_DepVar0  =     0.85714285714285;
MPRINT(SCORETABLES):   P_DepVar0 = 0.85714285714285;
3787902   +        P_DepVar1  =     0.14285714285714;
MPRINT(SCORETABLES):   P_DepVar1 = 0.14285714285714;
3787903   +        Q_DepVar0  =     0.85714285714285;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.85714285714285;
3787904   +        Q_DepVar1  =     0.14285714285714;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.14285714285714;
3787905   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787906   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787907   +        END;
MPRINT(SCORETABLES):   END;
3787908   +      END;
MPRINT(SCORETABLES):   END;
3787909   +    ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3787910   +          0.20294117647058 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.20294117647058 <=
NumDealsPurchases THEN DO;
3787911   +      IF  NOT MISSING(MntCard_Games ) AND
3787912   +        MntCard_Games  <     0.35027388922702 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND MntCard_Games < 0.35027388922702
THEN DO;
3787913   +        _NODE_  =                   38;
MPRINT(SCORETABLES):   _NODE_ = 38;
3787914   +        _LEAF_  =                    8;
MPRINT(SCORETABLES):   _LEAF_ = 8;
3787915   +        P_DepVar0  =     0.93333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.93333333333333;
3787916   +        P_DepVar1  =     0.06666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.06666666666666;
3787917   +        Q_DepVar0  =     0.93333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.93333333333333;
3787918   +        Q_DepVar1  =     0.06666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.06666666666666;
3787919   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787920   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787921   +        END;
MPRINT(SCORETABLES):   END;
3787922   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787923   +        _NODE_  =                   39;
MPRINT(SCORETABLES):   _NODE_ = 39;
3787924   +        _LEAF_  =                    9;
MPRINT(SCORETABLES):   _LEAF_ = 9;
3787925   +        P_DepVar0  =     0.45454545454545;
MPRINT(SCORETABLES):   P_DepVar0 = 0.45454545454545;
3787926   +        P_DepVar1  =     0.54545454545454;
MPRINT(SCORETABLES):   P_DepVar1 = 0.54545454545454;
3787927   +        Q_DepVar0  =     0.45454545454545;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.45454545454545;
3787928   +        Q_DepVar1  =     0.54545454545454;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.54545454545454;
3787929   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3787930   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3787931   +        END;
MPRINT(SCORETABLES):   END;
3787932   +      END;
MPRINT(SCORETABLES):   END;
3787933   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787934   +      _NODE_  =                   16;
MPRINT(SCORETABLES):   _NODE_ = 16;
3787935   +      _LEAF_  =                    7;
MPRINT(SCORETABLES):   _LEAF_ = 7;
3787936   +      P_DepVar0  =      0.9758064516129;
MPRINT(SCORETABLES):   P_DepVar0 = 0.9758064516129;
3787937   +      P_DepVar1  =     0.02419354838709;
MPRINT(SCORETABLES):   P_DepVar1 = 0.02419354838709;
3787938   +      Q_DepVar0  =      0.9758064516129;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.9758064516129;
3787939   +      Q_DepVar1  =     0.02419354838709;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.02419354838709;
3787940   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787941   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787942   +      END;
MPRINT(SCORETABLES):   END;
3787943   +    END;
MPRINT(SCORETABLES):   END;
3787944   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787945   +    _NODE_  =                    7;
MPRINT(SCORETABLES):   _NODE_ = 7;
3787946   +    _LEAF_  =                   10;
MPRINT(SCORETABLES):   _LEAF_ = 10;
3787947   +    P_DepVar0  =     0.99151743638077;
MPRINT(SCORETABLES):   P_DepVar0 = 0.99151743638077;
3787948   +    P_DepVar1  =     0.00848256361922;
MPRINT(SCORETABLES):   P_DepVar1 = 0.00848256361922;
3787949   +    Q_DepVar0  =     0.99151743638077;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.99151743638077;
3787950   +    Q_DepVar1  =     0.00848256361922;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.00848256361922;
3787951   +    I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3787952   +    U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3787953   +    END;
MPRINT(SCORETABLES):   END;
3787954   +  END;
MPRINT(SCORETABLES):   END;
3787955   +
3787956   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3787957   +IF  F_DepVar  NE '0'
3787958   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3787959   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3787960   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3787961   + END;
MPRINT(SCORETABLES):   END;
3787962   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3787963   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3787964   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3787965   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3787966   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3787967   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3787968   +       END;
MPRINT(SCORETABLES):   END;
3787969   + END;
MPRINT(SCORETABLES):   END;
3787970   +
3787971   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3787972   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3787973   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3787974   +
3787975   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3787976   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3787977   +* EndGrp2: EndGroup;
MPRINT(SCORETABLES):   * EndGrp2: EndGroup;
3787978   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3787979   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3787980   +* Group: ^(cv_var =10);
MPRINT(SCORETABLES):   * Group: ^(cv_var =10);
3787981   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3787982   +end;
MPRINT(SCORETABLES):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORETABLES):   run;
 
NOTE: DATA STEP view saved on file EMWS1.ENDGRP2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TRANS2_TRAIN.VIEW used (Total process time):
      real time           0.16 seconds
      cpu time            0.15 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.17 seconds
 
 
MPRINT(POSTLOOP):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End POSTLOOP: EndGrp2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3787983    *------------------------------------------------------------*;
3787984    * End POSTLOOP: EndGrp2;
3787985    *------------------------------------------------------------*;
3787986
 
NOTE: There were 10 observations read from the data set EMWS1.GRP2_EMLOOPINFO.
NOTE: The data set EMWS1.ENDGRP2_EMLOOPINFO has 10 observations and 3 variables.
3787987    proc print data=EMWS1.EndGrp2_EMLOOPINFO noobs label;
MPRINT(EM_DIAGRAM):    proc print data=EMWS1.EndGrp2_EMLOOPINFO noobs label;
3787988    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_rptgroupsummary_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Group Summary";
MPRINT(EM_DIAGRAM):   run;
3787989    run;
 
NOTE: There were 10 observations read from the data set EMWS1.ENDGRP2_EMLOOPINFO.
NOTE: The PROCEDURE PRINT printed page 2468.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3787990    title9;
MPRINT(EM_DIAGRAM):   title9;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS1.EndGrp2_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if trim(F_DepVar) ^in("", ".") then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data WORK.OUTFITDATA;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
3788014    data EMWS1.EndGrp2_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMOUTFIT;
3788015    set WORK.OUTFITDATA;
MPRINT(EM_DIAGRAM):   set WORK.OUTFITDATA;
3788016    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.OUTFITDATA.
NOTE: The data set EMWS1.ENDGRP2_EMOUTFIT has 1 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3788017    data EMWS1.EndGrp2_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMOUTFIT;
3788018    set EMWS1.EndGrp2_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMOUTFIT;
3788019    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
3788020    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
3788020  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
3788021    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
3788022    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP2_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP2_EMOUTFIT has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3788023    proc sort data=EMWS1.EndGrp2_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp2_EMREPORTFIT nothreads;
3788024    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
3788025    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.ENDGRP2_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP2_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3788026    %let _EMwarndup = 0;
3788027    %let _EMtargetdup =;
3788028    %let _EMASEtargetdup =;
3788029    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3788030    set EMWS1.EndGrp2_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMOUTFIT;
3788031    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
3788032    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
3788033    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
3788034    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
3788035    end;
MPRINT(EM_DIAGRAM):   end;
3788036    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP2_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3788037    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3788038    * EndGrp2: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp2: Computing metadata for TRAIN data;
3788039    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.ENDGRP2_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp2_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp2_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp2_TRAIN out=WORK.M06CHD60 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M06CHD60;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M06CHD60(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M06CHD60;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M06CHD60;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2QRLUK3 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2QRLUK3;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2QRLUK3;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1YXPVI7(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2QRLUK3;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2QRLUK3;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2QRLUK3;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE =
'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then
do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID',
'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2QRLUK3;
MPRINT(EMADVISECOLUMNS):   set WORK.M2QRLUK3;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Tree2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Tree2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp2";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "EndGrp2";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "EndGrp2";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "EndGrp2";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "EndGrp2";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "EndGrp2";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp2";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp2";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp2: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
3788390    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
3788391    set EMWS1.EndGrp2_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMINFO;
3788392    where DATA='EndGrp2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
3788393    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP2_EMINFO.
      WHERE (DATA='EndGrp2') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3788394    data EMWS1.EndGrp2_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMINFO;
3788395    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
3788396    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
3788397    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.ENDGRP2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
3788401    run;
3788402    data EMWS1.EndGrp2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp2_EMINFO;
3788403    set EMWS1.EndGrp2_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMINFO WORK.MODELTEMP_INFO;
3788404    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP2_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP2_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3788405    proc sort data = EMWS1.EndGrp2_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp2_EMINFO NOTHREADS;
3788406    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3788407    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP2_EMINFO.
NOTE: The data set EMWS1.ENDGRP2_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3788408    proc sort data = EMWS1.Tree2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Tree2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
3788409    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3788410    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.TREE2_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
3788411    proc sort data = EMWS1.EndGrp2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
3788412    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3788413    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP2_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3788414    data EMWS1.EndGrp2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp2_EMINFO;
3788415    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
3788416    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3788417    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP2_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3788418    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
3788419    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
3788420    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
3788421    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS1.ENDGRP2_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp2: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE
or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp2: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp2: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1
8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=334;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13705375461633;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=2103;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86294624538366;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree2_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3788884    %let EMEXCEPTIONSTRING=;
3788885    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3788886    * POSTLOOPREPORT: EndGrp2;
MPRINT(EM_DIAGRAM):   * POSTLOOPREPORT: EndGrp2;
3788887    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3788888    %let EM_ACTION = POSTLOOPREPORT;
3788889    %let syscc = 0;
3788890    %macro main;
3788891       %if %upcase(&EM_ACTION) = TRAIN %then %do;
3788892
3788893           filename temp catalog 'sashelp.emutil.endgp_train.source';
3788894           %include temp;
3788895           filename temp;
3788896
3788897           %train;
3788898
3788899       %end;
3788900       %else
3788901          %if %upcase(&EM_ACTION) = SCORE %then %do;
3788902
3788903           filename temp catalog 'sashelp.emutil.endgp_score.source';
3788904           %include temp;
3788905           filename temp;
3788906
3788907           %score;
3788908       %end;
3788909       %else
3788910       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
3788911
3788912           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
3788913           %include temp;
3788914           filename temp;
3788915
3788916           %postloop;
3788917
3788918       %end;
3788919
3788920       %doendm:
3788921    %mend main;
3788922
3788923    %main;
MPRINT(EM_DIAGRAM):
MPRINT(EM_DIAGRAM):  ;
3788924    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3788925    * End POSTLOOPREPORT: EndGrp2;
MPRINT(EM_DIAGRAM):   * End POSTLOOPREPORT: EndGrp2;
3788926    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3788927
 
3788928    proc sort data=EMWS1.Tree2_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Tree2_CMeta_TRAIN out=WORK.SUBSETINMETA;
3788929    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3788930    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 25 observations read from the data set EMWS1.TREE2_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 25 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3788931    proc sort data=EMWS1.EndGrp2_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp2_VariableSet out=WORK.SUBSETVARSET(keep=NAME
REPORT);
3788932    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3788933    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 25 observations read from the data set EMWS1.ENDGRP2_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 25 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3788934    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
3788935    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
3788936    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3788937    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 25 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 25 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 25 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3788938    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
3788939    set EMWS1.EndGrp2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_CMeta_TRAIN;
3788940    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
3788940  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
3788941    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.ENDGRP2_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 10 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3788942    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
3788943    set EMWS1.EndGrp2_TRAIN(keep=
3788944    F_DepVar
3788945    I_DepVar
3788946    P_DepVar0
3788947    P_DepVar1
3788948    Q_DepVar0
3788949    Q_DepVar1
3788950    R_DepVar0
3788951    R_DepVar1
3788952    U_DepVar
3788953    _WARN_
3788954    DepVar
3788955    );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
Q_DepVar0 Q_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
3788956    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2437 observations read from the data set EMWS1.EMCODE3_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.META_TRAIN.
NOTE: View EMWS1.ENDGRP2_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
NOTE: There were 2437 observations read from the data set EMWS1.TRANS2_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.ENDGRP2_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2437 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.EndGrp2_2XVNBV5 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.EndGrp2_2XVNBV5;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 EVENT $32 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.EndGrp2_2XVNBV5(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   retain EVENT '1';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.EndGrp2_2XVNBV5;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.EndGrp2_2XVNBV5;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree2_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
The SAS System
 
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.1370537546 _NEVENTS
334 _NNONEVENTS 2103 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2437));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTLIFT = ((_NEVENTS+_NNONEVENTS) / 20) /AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2437 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
(2437/20)) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2437)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP /((20-GROUP+1)* 2437/20) ) / (
AVGNUMRESP / (2437/20))) - 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2437 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2437 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * 2437/20 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE *
((20-GROUP+1)* 2437/20));
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp2_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp2_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
3793243    %let grouptarget=0;
3793244    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3793245    set EMWS1.Grp2_EMLOOPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp2_EMLOOPINFO;
3793246    if _TARGET_ ne "" then do;
MPRINT(EM_DIAGRAM):   if _TARGET_ ne "" then do;
3793247    call symput('grouptarget', '1');
MPRINT(EM_DIAGRAM):   call symput('grouptarget', '1');
3793248    stop;
MPRINT(EM_DIAGRAM):   stop;
3793249    end;
MPRINT(EM_DIAGRAM):   end;
3793250    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _TARGET_ is uninitialized.
NOTE: There were 10 observations read from the data set EMWS1.GRP2_EMLOOPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3793251    data work.EMOUTFIT;
MPRINT(EM_DIAGRAM):    data work.EMOUTFIT;
3793252    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3793253    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3793254    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3793254  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3793255    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3793256    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3793257    set EMWS1.EndGrp2_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMOUTFIT;
3793258    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP2_EMOUTFIT.
NOTE: The data set WORK.EMOUTFIT has 1 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3793259    data EMWS1.EndGrp2_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMOUTFIT_LOOP;
3793260    set EMWS1.EndGrp2_EMOUTFIT_LOOP work.EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMOUTFIT_LOOP work.EMOUTFIT;
3793261    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.ENDGRP2_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP2_EMOUTFIT_LOOP has 11 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3793262    data work.EMREPORTFIT;
MPRINT(EM_DIAGRAM):    data work.EMREPORTFIT;
3793263    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3793264    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3793265    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3793265  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3793266    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3793267    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3793268    set EMWS1.EndGrp2_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMREPORTFIT;
3793269    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.ENDGRP2_EMREPORTFIT.
NOTE: The data set WORK.EMREPORTFIT has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3793270    data EMWS1.EndGrp2_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMREPORTFIT_LOOP;
3793271    set EMWS1.EndGrp2_EMREPORTFIT_LOOP work.EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMREPORTFIT_LOOP work.EMREPORTFIT;
3793272    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 80 observations read from the data set EMWS1.ENDGRP2_EMREPORTFIT_LOOP.
NOTE: There were 9 observations read from the data set WORK.EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP2_EMREPORTFIT_LOOP has 89 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3793273    data work.EMRANK;
MPRINT(EM_DIAGRAM):    data work.EMRANK;
3793274    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3793275    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3793276    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3793276  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3793277    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3793278    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3793279    set EMWS1.EndGrp2_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMRANK;
3793280    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP2_EMRANK.
NOTE: The data set WORK.EMRANK has 20 observations and 37 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3793281    data EMWS1.EndGrp2_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMRANK_LOOP;
3793282    set EMWS1.EndGrp2_EMRANK_LOOP work.EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMRANK_LOOP work.EMRANK;
3793283    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 200 observations read from the data set EMWS1.ENDGRP2_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.EMRANK.
NOTE: The data set EMWS1.ENDGRP2_EMRANK_LOOP has 220 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3793284    data work.EMSCOREDIST;
MPRINT(EM_DIAGRAM):    data work.EMSCOREDIST;
3793285    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3793286    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3793287    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3793287  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3793288    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3793289    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3793290    set EMWS1.EndGrp2_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMSCOREDIST;
3793291    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS1.ENDGRP2_EMSCOREDIST.
NOTE: The data set WORK.EMSCOREDIST has 19 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3793292    data EMWS1.EndGrp2_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMSCOREDIST_LOOP;
3793293    set EMWS1.EndGrp2_EMSCOREDIST_LOOP work.EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMSCOREDIST_LOOP work.EMSCOREDIST;
3793294    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 127 observations read from the data set EMWS1.ENDGRP2_EMSCOREDIST_LOOP.
NOTE: There were 19 observations read from the data set WORK.EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP2_EMSCOREDIST_LOOP has 146 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3793295    data work.EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):    data work.EMCLASSIFICATION;
3793296    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3793297    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3793298    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3793298  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3793299    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3793300    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3793301    set EMWS1.EndGrp2_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMCLASSIFICATION;
3793302    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP2_EMCLASSIFICATION.
NOTE: The data set WORK.EMCLASSIFICATION has 4 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3793303    data EMWS1.EndGrp2_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMCLASSIFICATION_LOOP;
3793304    set EMWS1.EndGrp2_EMCLASSIFICATION_LOOP work.EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMCLASSIFICATION_LOOP work.EMCLASSIFICATION;
3793305    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set EMWS1.ENDGRP2_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP2_EMCLASSIFICATION_LOOP has 44 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3793306    proc sort data=EMWS1.EndGrp2_EMCLASSIFICATION_LOOP out=_temp;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp2_EMCLASSIFICATION_LOOP out=_temp;
3793307    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3793308    where _type_='PREDICTION' and correct and INTO ne '' and FROM ne '';
MPRINT(EM_DIAGRAM):   where _type_='PREDICTION' and correct and INTO ne '' and FROM ne '';
3793309    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set EMWS1.ENDGRP2_EMCLASSIFICATION_LOOP.
      WHERE (_type_='PREDICTION') and correct and (INTO not = ' ') and (FROM not = ' ');
NOTE: The data set WORK._TEMP has 22 observations and 16 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3793310    data _total(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL totalCount
3793310  ! totalPercent);
MPRINT(EM_DIAGRAM):   data _total(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL
totalCount totalPercent);
3793311    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3793312    retain totalCount totalPercent;
MPRINT(EM_DIAGRAM):   retain totalCount totalPercent;
3793313    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3793314    if first._LOOP_ or first.modelid or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.modelid or first.target or first.datarole then
do;
3793315    totalCount = count;
MPRINT(EM_DIAGRAM):   totalCount = count;
3793316    totalPercent = percent;
MPRINT(EM_DIAGRAM):   totalPercent = percent;
3793317    end;
MPRINT(EM_DIAGRAM):   end;
3793318    else do;
MPRINT(EM_DIAGRAM):   else do;
3793319    totalCount + count;
MPRINT(EM_DIAGRAM):   totalCount + count;
3793320    totalPercent + percent;
MPRINT(EM_DIAGRAM):   totalPercent + percent;
3793321    end;
MPRINT(EM_DIAGRAM):   end;
3793322    if last._LOOP_ or last.modelid or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.modelid or last.target or last.datarole then
output;
3793323    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TOTAL has 11 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3793324    data _event(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL eventCount
3793324  ! eventPercent);
MPRINT(EM_DIAGRAM):   data _event(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL
eventCount eventPercent);
3793325    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3793326    where strip(FROM) eq strip(EVENT);
MPRINT(EM_DIAGRAM):   where strip(FROM) eq strip(EVENT);
3793327    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3793328    if first._LOOP_ or first.modelid or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.modelid or first.target or first.datarole then
do;
3793329    eventCount = count;
MPRINT(EM_DIAGRAM):   eventCount = count;
3793330    eventPercent = percent;
MPRINT(EM_DIAGRAM):   eventPercent = percent;
3793331    end;
MPRINT(EM_DIAGRAM):   end;
3793332    else do;
MPRINT(EM_DIAGRAM):   else do;
3793333    eventCount + count;
MPRINT(EM_DIAGRAM):   eventCount + count;
3793334    eventPercent + percent;
MPRINT(EM_DIAGRAM):   eventPercent + percent;
3793335    end;
MPRINT(EM_DIAGRAM):   end;
3793336    if last._LOOP_ or last.modelid or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.modelid or last.target or last.datarole then
output;
3793337    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable first.modelid is uninitialized.
NOTE: Variable last.modelid is uninitialized.
NOTE: There were 11 observations read from the data set WORK._TEMP.
      WHERE STRIP(FROM)=STRIP(EVENT);
NOTE: The data set WORK._EVENT has 11 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
3793338    data _nevent(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL neventCount
3793338  ! neventPercent);
MPRINT(EM_DIAGRAM):   data _nevent(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL
neventCount neventPercent);
3793339    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3793340    retain neventCount neventPercent 0;
MPRINT(EM_DIAGRAM):   retain neventCount neventPercent 0;
3793341    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3793342    where strip(FROM) ne strip(EVENT);
MPRINT(EM_DIAGRAM):   where strip(FROM) ne strip(EVENT);
3793343    if first._LOOP_ or first.modelid or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.modelid or first.target or first.datarole then
do;
3793344    neventCount = count;
MPRINT(EM_DIAGRAM):   neventCount = count;
3793345    neventPercent = percent;
MPRINT(EM_DIAGRAM):   neventPercent = percent;
3793346    end;
MPRINT(EM_DIAGRAM):   end;
3793347    else do;
MPRINT(EM_DIAGRAM):   else do;
3793348    neventCount + count;
MPRINT(EM_DIAGRAM):   neventCount + count;
3793349    neventPercent + percent;
MPRINT(EM_DIAGRAM):   neventPercent + percent;
3793350    end;
MPRINT(EM_DIAGRAM):   end;
3793351    if last._LOOP_ or last.modelid or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.modelid or last.target or last.datarole then
output;
3793352    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMP.
      WHERE STRIP(FROM) not = STRIP(EVENT);
NOTE: The data set WORK._NEVENT has 11 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3793353    data EMWS1.EndGrp2_EMMISC_LOOP;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp2_EMMISC_LOOP;
3793354    merge _total _event _nevent;
MPRINT(EM_DIAGRAM):   merge _total _event _nevent;
3793355    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3793356    label TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel,   NOQUOTE))"
3793356  ! targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
3793356  ! eventPercent = "%sysfunc(sasmsg(sashelp.dmine, assmt_pctEvent_vlabel,  NOQUOTE))"
3793357       eventCount = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,  NOQUOTE))"
3793357  ! neventPercent = "%sysfunc(sasmsg(sashelp.dmine, assmt_pctNEvent_vlabel, NOQUOTE))"
3793357  ! neventCount = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumNEvent_vlabel, NOQUOTE))"
3793358       totalPercent = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel,    NOQUOTE))"
3793358  !  totalCount = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalcount_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable" targetLabel = "Target Label"
eventPercent = "Percentage of Events" eventCount = "Number of Events" neventPercent =
"Percentage of Nonevents" neventCount = "Number of Nonevents" totalPercent = "Total
Percentage" totalCount = "Total Count";
3793359    if neventCount = . then neventCount = 0;
MPRINT(EM_DIAGRAM):   if neventCount = . then neventCount = 0;
3793360    if eventCount = . then eventCount = 0;
MPRINT(EM_DIAGRAM):   if eventCount = . then eventCount = 0;
3793361    if neventPercent = . then neventPercent = 0;
MPRINT(EM_DIAGRAM):   if neventPercent = . then neventPercent = 0;
3793362    if eventPercent = . then eventPercent = 0;
MPRINT(EM_DIAGRAM):   if eventPercent = . then eventPercent = 0;
3793363    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._TOTAL.
NOTE: There were 11 observations read from the data set WORK._EVENT.
NOTE: There were 11 observations read from the data set WORK._NEVENT.
NOTE: The data set EMWS1.ENDGRP2_EMMISC_LOOP has 11 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
3793364    proc sort data=EMWS1.EndGrp2_EMMISC_LOOP;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp2_EMMISC_LOOP;
3793365    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3793366    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS1.ENDGRP2_EMMISC_LOOP.
NOTE: The data set EMWS1.ENDGRP2_EMMISC_LOOP has 11 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3793367    data work.EMEVENTREPORT;
MPRINT(EM_DIAGRAM):    data work.EMEVENTREPORT;
3793368    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3793369    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3793370    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3793370  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3793371    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3793372    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3793373    set EMWS1.EndGrp2_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMEVENTREPORT;
3793374    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP2_EMEVENTREPORT.
NOTE: The data set WORK.EMEVENTREPORT has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3793375    data EMWS1.EndGrp2_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMEVENTREPORT_LOOP;
3793376    set work.EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set work.EMEVENTREPORT;
3793377    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.EMEVENTREPORT.
NOTE: The data set EMWS1.ENDGRP2_EMEVENTREPORT_LOOP has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3793378    %let _cn = %sysfunc(getoption(CENTER));
3793379    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3793380    proc print data=EMWS1.EndGrp2_EMREPORTFIT_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp2_EMREPORTFIT_LOOP noobs label;
3793381    var STAT LABEL TRAIN
3793382    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
3793383    by _WHERE_ notsorted TARGET notsorted TARGETLABEL notsorted;
MPRINT(EM_DIAGRAM):   by _WHERE_ notsorted TARGET notsorted TARGETLABEL notsorted;
3793384    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3793385    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
3793386    run;
 
NOTE: There were 89 observations read from the data set EMWS1.ENDGRP2_EMREPORTFIT_LOOP.
NOTE: The PROCEDURE PRINT printed page 2469.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3793387    title10;
MPRINT(EM_DIAGRAM):   title10;
3793388    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3793389    proc sort data=EMWS1.EndGrp2_EMCLASSIFICATION_LOOP nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp2_EMCLASSIFICATION_LOOP nothreads;
3793390    by DATAROLE _WHERE_ TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE _WHERE_ TARGET TARGETLABEL;
3793391    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS1.ENDGRP2_EMCLASSIFICATION_LOOP.
NOTE: The data set EMWS1.ENDGRP2_EMCLASSIFICATION_LOOP has 44 observations and 16 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3793392    %let _cn = %sysfunc(getoption(CENTER));
3793393    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
3793394    proc print data=EMWS1.EndGrp2_EMCLASSIFICATION_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp2_EMCLASSIFICATION_LOOP noobs label;
3793395    var from into pct_row pct_col count percent
3793396    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
3793397    by DATAROLE _WHERE_ TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE _WHERE_ TARGET TARGETLABEL;
3793398    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
3793399    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
3793400    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
3793401    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
3793402    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
3793403    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
3793404    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
3793405    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3793406    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
3793407    run;
 
NOTE: There were 44 observations read from the data set EMWS1.ENDGRP2_EMCLASSIFICATION_LOOP.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 2470.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
3793408    title9;
MPRINT(EM_DIAGRAM):   title9;
3793409    title10;
MPRINT(EM_DIAGRAM):   title10;
3793410    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3793411    %let _cn = %sysfunc(getoption(CENTER));
3793412    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3793413    data EMWS1.EndGrp2_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp2_EMEVENTREPORT_LOOP;
3793414    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
3793414  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
3793415    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3793415  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
3793415  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
3793415  ! FALSEEVENT
3793416    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
3793416  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
3793416  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
3793417       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
3793418    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
3793419    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
3793420    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
3793421    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
3793422    set EMWS1.EndGrp2_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMEVENTREPORT_LOOP;
3793423    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP2_EMEVENTREPORT_LOOP.
NOTE: The data set EMWS1.ENDGRP2_EMEVENTREPORT_LOOP has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
3793424    proc print data=EMWS1.EndGrp2_EMEVENTREPORT_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp2_EMEVENTREPORT_LOOP noobs label;
3793425    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3793426    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted
TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
3793427    by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted TARGETLABEL;
3793428    run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP2_EMEVENTREPORT_LOOP.
NOTE: The PROCEDURE PRINT printed page 2471.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3793429    title10;
MPRINT(EM_DIAGRAM):   title10;
3793430    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3793431    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3793432    modify EndGrp2_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):   modify EndGrp2_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3793433    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3793434    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3793434  ! ;
MPRINT(EM_DIAGRAM):   run;
3793435    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP2_EMRANK_LOOP.DATA.
3793436    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
3793437    %let _cn = %sysfunc(getoption(CENTER));
3793438    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3793439    proc print data=EMWS1.EndGrp2_EMRANK_LOOP label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp2_EMRANK_LOOP label noobs;
3793440    var
3793441    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
3793442    by
3793443    notsorted DATAROLE
3793444    notsorted _WHERE_
3793445    notsorted TARGET
3793446    notsorted TARGETLABEL
3793447    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted
TARGETLABEL ;
3793448    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3793449    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
3793450    run;
 
NOTE: There were 220 observations read from the data set EMWS1.ENDGRP2_EMRANK_LOOP.
NOTE: The PROCEDURE PRINT printed page 2472.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3793451    title10;
MPRINT(EM_DIAGRAM):   title10;
3793452    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3793453    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3793454    modify EndGrp2_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):   modify EndGrp2_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3793455    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
3793455  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3793456    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3793456  ! ;
MPRINT(EM_DIAGRAM):   run;
3793457    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP2_EMSCOREDIST_LOOP.DATA.
3793458    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
3793459    %let _cn = %sysfunc(getoption(CENTER));
3793460    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3793461    proc print data=EMWS1.EndGrp2_EMSCOREDIST_LOOP label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp2_EMSCOREDIST_LOOP label noobs;
3793462    var
3793463    p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
3793464    by
3793465    notsorted DATAROLE
3793466    notsorted _WHERE_
3793467    notsorted TARGET
3793468    notsorted TARGETLABEL
3793469    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted
TARGETLABEL ;
3793470    where TARGET in(
3793471    "DepVar"
3793472    );
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
3793473    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3793474    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoredistribution_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
3793475    run;
 
NOTE: There were 146 observations read from the data set EMWS1.ENDGRP2_EMSCOREDIST_LOOP.
      WHERE TARGET='DepVar';
NOTE: The PROCEDURE PRINT printed page 2473.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3793476    title10;
MPRINT(EM_DIAGRAM):   title10;
3793477    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3793478    %let emexceptionstring =;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:10:16 o'clock"
);
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMOUTPUT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:10:16 o'clock"
);
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMREPORT;
MPRINT(EM_DIAGRAM):   length ID 8 KEY $30 VALUE $512;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='PROPERTIES';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="SETTINGS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp2\TRAINPROPERTIES.xml";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="VARIABLES";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp2_EMTRAINVARIABLE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="TOOLLOG";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp2\EMLOG.log";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="TOOLOUTPUT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp2\EMOUTPUT.out";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="NOTES";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp2\EMNOTES.txt";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="FLOWCODE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="SASCODE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Scoring";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp2\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE="BAR";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="MISCLASSIFICATIONMANY";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp2_EMMISC_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY="FREQ";
MPRINT(EM_DIAGRAM):   VALUE="TOTALPERCENT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE="BAR";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="FITSTATPLOT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp2_EMOUTFIT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY="FREQ";
MPRINT(EM_DIAGRAM):   VALUE="_ANYNUMERIC_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='LATTICE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='LATTICETYPE';
MPRINT(EM_DIAGRAM):   VALUE='LINEPLOT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ASSESSRANKOVERLAY";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp2_EMRANK_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="WHERE";
MPRINT(EM_DIAGRAM):   VALUE="TARGET='DepVar'";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="DECILE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="LIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="BASELIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="BESTLIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="LATTICEY";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='LATTICE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='LATTICETYPE';
MPRINT(EM_DIAGRAM):   VALUE='LINEPLOT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ASSESSSCOREDIST";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp2_EMSCOREDIST_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="WHERE";
MPRINT(EM_DIAGRAM):   VALUE="TARGET='DepVar'";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="SCORE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="PERCENTAGEOFEVENTS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="PERCENTAGEOFNONEVENTS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="LATTICEX";
MPRINT(EM_DIAGRAM):   VALUE="DATAROLE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="LATTICEY";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="NROWS";
MPRINT(EM_DIAGRAM):   VALUE="1";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="REPORTFITSTAT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp2_EMREPORTFIT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="eventratestat";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp2_EMEVENTREPORT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="miningresult";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Gp";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp2_EMLOOPINFO";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
