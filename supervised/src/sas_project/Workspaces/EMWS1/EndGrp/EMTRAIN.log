MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:10:18 o'clock" 
);
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Post Grouping Log
Date:                02 June 2018
Time:                17:10:18 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3V12HO4 "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3V12HO4 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:10:18 o'clock" 
);
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:10:18 o'clock" 
);
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMRUNSTATUS.xml' encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMRUNSTATUS.xml' encoding="UTF-8" 
NOBOM;
3799282    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3799283    set EMWS1.Tree_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree_EMINFO;
3799284    where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
MPRINT(EM_DIAGRAM):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
3799285    call symput('EMGROUPMODE', strip(key));
MPRINT(EM_DIAGRAM):   call symput('EMGROUPMODE', strip(key));
3799286    call symput('EMGROUPID', strip(data));
MPRINT(EM_DIAGRAM):   call symput('EMGROUPID', strip(data));
3799287    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.TREE_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3799288    data WORK.M083HA_4;
MPRINT(EM_DIAGRAM):    data WORK.M083HA_4;
3799289    set WORK.M083HA_4;
MPRINT(EM_DIAGRAM):   set WORK.M083HA_4;
3799290    where upcase(NAME) in(
3799291    "DEPVAR"
3799292    );
MPRINT(EM_DIAGRAM):   where upcase(NAME) in( "DEPVAR" );
3799293    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.M083HA_4.
      WHERE UPCASE(NAME)='DEPVAR';
NOTE: The data set WORK.M083HA_4 has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3799294    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):   
EMWS1.Tree_TRAIN EMWS1.Tree_TRAIN 
EMWS1.Tree_TRAIN EMWS1.Tree_TRAIN EMWS1 Tree_TRAIN 
EMWS1.Tree_TRAIN EMWS1.Tree_TRAIN 
EMWS1.Tree_TRAIN EMWS1.Tree_TRAIN EMWS1 Tree_TRAIN 
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Tree_TRAIN 
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY 
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Tree_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
3799323    data WORK.EndGrp_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
3799324    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
3799325    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
3799325  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
3799325  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
3799326       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
3799326  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
3799326  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" 
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
3799327    set EMWS1.TREE_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.TREE_DEPVAR_DM( where=(_TYPE_="TARGET"));
3799328    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
3799329    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
3799330    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
3799331    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
3799332    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
3799333    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
3799334    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
3799335    end;
MPRINT(EM_DIAGRAM):   end;
3799336    output;
MPRINT(EM_DIAGRAM):   output;
3799337    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.TREE_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3799338    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3799339    proc print data=WORK.EndGrp_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp_EVENT noobs label;
3799340    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
3799341    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3799342    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
3799343    run;

NOTE: There were 1 observations read from the data set WORK.ENDGRP_EVENT.
NOTE: The PROCEDURE PRINT printed page 2474.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3799344    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"." 
3799345    proc print data = EMWS1.Tree_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Tree_DepVar_DM noobs label;
3799346    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
3799347    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 
'DECPRIOR');
3799348    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
3799348  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
3799348  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
3799349    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3799350    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
3799351    run;

NOTE: There were 7 observations read from the data set EMWS1.TREE_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 2475.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3799352    title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE 
or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 
8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= 
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=334;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13705375461633;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=2103;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86294624538366;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3799813    %let EMEXCEPTIONSTRING=;
3799814    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3799815    * POSTLOOP: EndGrp;
MPRINT(EM_DIAGRAM):   * POSTLOOP: EndGrp;
3799816    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3799817    %let EM_ACTION = POSTLOOP;
3799818    %let syscc = 0;
3799819    %macro main;
3799820       %if %upcase(&EM_ACTION) = TRAIN %then %do;
3799821    
3799822           filename temp catalog 'sashelp.emutil.endgp_train.source';
3799823           %include temp;
3799824           filename temp;
3799825    
3799826           %train;
3799827    
3799828       %end;
3799829       %else
3799830          %if %upcase(&EM_ACTION) = SCORE %then %do;
3799831    
3799832           filename temp catalog 'sashelp.emutil.endgp_score.source';
3799833           %include temp;
3799834           filename temp;
3799835    
3799836           %score;
3799837       %end;
3799838       %else
3799839       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
3799840    
3799841           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
3799842           %include temp;
3799843           filename temp;
3799844    
3799845           %postloop;
3799846    
3799847       %end;
3799848    
3799849       %doendm:
3799850    %mend main;
3799851    
3799852    %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_postloop.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_POSTLOOP.SOURCE.
3799853   +%macro scoreTables(data=, out=, scoreref=, prescore=);
3799855   +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW)))
3799855  !+%then %do;
3799856   +       data &out / view=&out;
3799857   +          set &data
3799860   +          %if "&prescore" = "Y" %then %do;
3799861   +              (obs=1)
3799862   +          %end;
3799864   +          ;
3799866   +       %let fexist = %sysfunc(fexist(&scoreref));
3799867   +       %if &fexist %then %do;
3799868   +          %inc &scoreref;
3799869   +       %end;
3799871   +       %if "&prescore" eq "Y" %then %do;
3799872   +          drop I_: R_:;
3799873   +       %end;
3799875   +       run;
3799876   +   %end;
3799878   +%mend scoretables;
3799880   +%macro postboostbag(groupid=, type=);
3799881   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
3799882   +   data _null_;
3799883   +      retain index 0;
3799884   +      set &infoDs;
3799885   +      call symput('targetname', strip(_target_));
3799886   +   run;
3799888   +   data _null_;
3799889   +      set &em_import_data_eminfo;
3799890   +      where key in('MODEL', 'DECMETA') and TARGET="&targetname";
3799891   +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
3799892   +      else call symput('MODELID', strip(data));
3799893   +   run;
3799895   +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
3799896   +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
3799898   +   filename loopflow "&em_user_loopflowcode";
3799899   +   filename looppub "&em_user_looppubcode";
3799901   +   filename emflow "&EM_FILE_EMFLOWSCORECODE";
3799902   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
3799904   +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
3799905   +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
3799907   +   filename loopflow;
3799908   +   filename looppub;
3799909   +   filename emflow;
3799910   +   filename empub;
3799912   +   %let EMGROUPASSMT = Y;
3799914   +   %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y, DECSCORECODE=Y,
3799914  !+FITSTATISTICS=N, CLASSIFICATION=Y, RESIDUALS=Y, PREDICTED=Y);
3799916   +   %em_getname(key=emoutfit, type=DATA);
3799917   +   %em_getname(key=emoutfit_loop, type=DATA);
3799919   +   data &em_user_emoutfit;
3799920   +      set &em_user_emoutfit_loop end=eof;
3799921   +      drop _LOOP_ _WHERE_;
3799922   +      if eof then output;
3799923   +   run;
3799925   +%mend postboostbag;
3799927   +%macro postgroup(groupid=, type=);
3799928   +   filename emflow "&EM_FILE_EMFLOWSCORECODE";
3799929   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
3799931   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
3799932   +   %let _XValidation = 0;
3799934   +   data _null_;
3799935   +      retain index 0;
3799936   +      set &infoDs end=eof;
3799937   +      index + 1;
3799938   +      call symput('loopwhere'!!strip(put(index, best.)), tranwrd(strip(_wheredesc_),
3799938  !+ '"', '""'));
3799939   +      call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
3799940   +      if eof and substr(_WHERE_, 1, 2)='^(' then
3799941   +         call symput('_XValidation', '1');
3799942   +   run;
3799944   +   %let grouptarget=;
3799945   +   /* Looping Over Groups Only.  Retrieve targets from EMINFO */
3799946   +   %if "&looptarget1" eq "" %then %do;
3799947   +      data _null_;
3799948   +         set &em_import_data_eminfo;
3799949   +         where key in('MODEL');
3799950   +         call symput('grouptarget', strip(symget('grouptarget'))!!'
3799950  !+'!!strip(target));
3799951   +      run;
3799952   +   %end;
3799954   +   %do j=1 %to &emloopnumber;
3799955   +       %let EnsembleIndex=0;
3799956   +       data _null_;
3799957   +          retain index 0 ensembleIndex 0;
3799958   +          set &em_user_path end=eof;
3799959   +          where LOOPID=&j;
3799960   +          if nodelabel = "&groupid" or index then do;
3799961   +             index + 1;
3799962   +             call symput('loopnode'!!strip(put(index, best.)),  strip(nodelabel));
3799963   +             call symput('loopdesc'!!strip(put(index, best.)),  strip(component));
3799964   +             call symput('loopaccum'!!strip(put(index, best.)),
3799964  !+strip(accumulatedScoreCode));
3799965   +          end;
3799966   +          if component='Ensemble' then ensembleIndex = index;
3799967   +          if eof then do;
3799968   +             call symput('loopcodenum', strip(put(index, best.)));
3799969   +             call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
3799970   +          end;
3799971   +       run;
3799973   +       %do i = 1 %to &loopcodenum;
3799974   +           %let fsourceEntry =
3799974  !+&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
3799975   +           %let psourceEntry =
3799975  !+&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
3799977   +           %if (&&loopnode&i eq &em_nodeid ) or
3799978   +               ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or
3799978  !+&i>&ensembleIndex or &i=&ensembleIndex) ) %then %do;
3799980   +               data _null_;
3799981   +                  file emflow mod;
3799982   +                  put "&em_codebar;";
3799983   +                  put "* &&loopnode&i: &&loopdesc&i;" ;
3799984   +                  put "* User: &sysuserid;";
3799985   +                  put "* Date: &sysdate: &systime;";
3799986   +                  %if "&&loopwhere&j" ne "" %then %do;
3799987   +                      put "* Group: &&loopwhere&j;";
3799988   +                  %end;
3799989   +                  %if "&&looptarget&j" ne "" %then %do;
3799990   +                       put "* Target: &&looptarget&j;";
3799991   +                  %end;
3799992   +                  put "&em_codebar ;";
3799993   +               run;
3799994   +               data _null_;
3799995   +                   file empub mod;
3799996   +                   put "&em_codebar ;";
3799997   +                   put "* &&loopnode&i: &&loopdesc&i;" ;
3799998   +                   put "* User: &sysuserid;";
3799999   +                   put "* Date: &sysdate: &systime;";
3800000   +                   %if "&&loopwhere&j" ne "" %then %do;
3800001   +                       put "* Group: &&loopwhere&j;";
3800002   +                   %end;
3800003   +                   %if "&&looptarget&j" ne "" %then %do;
3800004   +                       put "* Target: &&looptarget&j;";
3800005   +                   %end;
3800006   +                   put "&em_codebar;";
3800007   +               run;
3800008   +           %end;
3800010   +           %if ("&&loopnode&i" ne "&em_nodeid" ) %then %do;
3800011   +               %if (&ensembleIndex = 0) or (&i=1 or &i>&ensembleIndex or
3800011  !+&i=&ensembleIndex) %then %do;
3800012   +                   %if "&&loopnode&i" eq "&groupid" and "&_XValidation" eq "1" %then
3800012  !+ %do;
3800013   +                       filename y catalog "&psourceEntry";
3800014   +                       %em_copyfile(infref=y, outfref=emflow, append=Y);
3800015   +                       filename y;
3800016   +                   %end;
3800017   +                   %else %do;
3800018   +                       filename x catalog "&fsourceEntry";
3800019   +                       %em_copyfile(infref=x, outfref=emflow, append=Y);
3800020   +                       filename x;
3800021   +                   %end;
3800023   +                   filename y catalog "&psourceEntry";
3800024   +                   %em_copyfile(infref=y, outfref=empub, append=Y);
3800025   +                   filename y;
3800026   +               %end;
3800027   +           %end;
3800028   +           %else %do;
3800029   +              %if "&&loopwhere&j" ne "" %then %do;
3800030   +                  data _null_;
3800031   +                     file emflow mod;
3800032   +                     put 'end;';
3800033   +                  run;
3800034   +                  data _null_;
3800035   +                     file empub mod;
3800036   +                     put 'end;';
3800037   +                  run;
3800038   +               %end;
3800039   +           %end;
3800040   +       %end;
3800041   +   %end;
3800042   +   filename emflow;
3800043   +   filename empub;
3800045   +   /* Stratify Model Need to Recompute All Assessment Reports */
3800046   +   %if "&grouptarget" eq "" %then %do;
3800047   +       %let assessTarget=;
3800048   +       %do j=1 %to &emloopnumber;
3800049   +           %let targetname = &&looptarget&j;
3800050   +           %if ^%index(&assesstarget, &targetname) and ("&targetname" ne "") %then
3800050  !+%do;
3800051   +               %let assesstarget = &assesstarget &targetname;
3800052   +               %let index = 1;
3800053   +               %do %while( %scan(%sysfunc(strip(&targetname)), &index) ne
3800053  !+%sysfunc(strip(&targetname)));
3800054   +                   %let index = %eval(&index + 1);
3800055   +               %end;
3800056   +               %let targetlevel = %scan(%sysfunc(strip(%em_target_level)), &index
3800056  !+,%str( ));
3800058   +               %if "&targetlevel" ne "INTERVAL" %then
3800059   +                   %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y,
3800059  !+DECSCORECODE=Y, FITSTATISTICS=Y, CLASSIFICATION=Y, PREDICTED=Y);
3800060   +               %else
3800061   +                   %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y,
3800061  !+DECSCORECODE=Y, FITSTATISTICS=Y, RESIDUALS=Y, PREDICTED=Y);
3800062   +           %end;
3800063   +       %end;
3800064   +   %end;
3800065   +   %else %do;
3800066   +       %do i=1 %to &em_num_target;
3800067   +           %let targetname = %scan(%em_target, &i, %str( )) ;
3800068   +           %let targetlevel = %scan(%sysfunc(strip(%em_target_level)), &i ,%str( ));
3800070   +           %if %sysfunc(indexw(&grouptarget, &targetname)) %then %do;
3800071   +              %if "&targetlevel" ne "INTERVAL" %then
3800072   +                  %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y,
3800072  !+DECSCORECODE=Y, FITSTATISTICS=Y, CLASSIFICATION=Y, PREDICTED=Y);
3800073   +              %else
3800074   +                 %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y,
3800074  !+DECSCORECODE=Y, FITSTATISTICS=Y, RESIDUALS=Y, PREDICTED=Y);
3800075   +           %end;
3800076   +           %else %do;
3800077   +               %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=N,
3800077  !+DECSCORECODE=N, FITSTATISTICS=N, RESIDUALS=N, PREDICTED=N);
3800078   +           %end;
3800079   +       %end;
3800080   +   %end;
3800081   +   %let EMGROUPASSMT = N;
3800082   +%mend postgroup;
3800084   +%macro posttarget(groupid=, type=);
3800085   +   filename emflow "&EM_FILE_EMFLOWSCORECODE";
3800086   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
3800088   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
3800089   +   data _null_;
3800090   +      retain index 0;
3800091   +      set &infoDs end=eof;
3800092   +      index + 1;
3800093   +      call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
3800094   +   run;
3800096   +   %do j=1 %to &emloopnumber;
3800097   +       %let EnsembleIndex=0;
3800098   +       data _null_;
3800099   +          retain index 0 ensembleIndex 0;
3800100   +          set &em_user_path end=eof;
3800101   +          where LOOPID=&j;
3800102   +          if nodelabel = "&groupid" or index then do;
3800103   +             index + 1;
3800104   +             call symput('loopnode'!!strip(put(index, best.)),  strip(nodelabel));
3800105   +             call symput('loopdesc'!!strip(put(index, best.)),  strip(component));
3800106   +             call symput('loopaccum'!!strip(put(index, best.)),
3800106  !+strip(accumulatedScoreCode));
3800107   +          end;
3800108   +          if component='Ensemble' then ensembleIndex = index;
3800109   +          if eof then do;
3800110   +             call symput('loopcodenum', strip(put(index, best.)));
3800111   +             call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
3800112   +          end;
3800113   +       run;
3800115   +       %do i = 1 %to &loopcodenum;
3800116   +           %let fsourceEntry =
3800116  !+&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
3800117   +           %let psourceEntry =
3800117  !+&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
3800119   +           %if (&&loopnode&i ne &em_nodeid ) and
3800120   +               ( (&ensembleIndex = 0) or (&i>=&ensembleIndex) ) %then %do;
3800121   +               data _null_;
3800122   +                  file emflow mod;
3800123   +                  put "&em_codebar;";
3800124   +                  put "* &&loopnode&i: &&loopdesc&i;" ;
3800125   +                  put "* User: &sysuserid;";
3800126   +                  put "* Date: &sysdate: &systime;";
3800127   +                  put "* Target: &&looptarget&j;";
3800128   +                  put "&em_codebar ;";
3800129   +               run;
3800130   +               data _null_;
3800131   +                  file empub mod;
3800132   +                  put "&em_codebar ;";
3800133   +                  put "* &&loopnode&i: &&loopdesc&i;" ;
3800134   +                  put "* User: &sysuserid;";
3800135   +                  put "* Date: &sysdate: &systime;";
3800136   +                  put "* Target: &&looptarget&j;";
3800137   +                  put "&em_codebar;";
3800138   +               run;
3800140   +               filename x catalog "&fsourceEntry";
3800141   +               %em_copyfile(infref=x, outfref=emflow, append=Y);
3800142   +               filename x;
3800144   +               filename y catalog "&psourceEntry";
3800145   +               %em_copyfile(infref=y, outfref=empub, append=Y);
3800146   +               filename y;
3800147   +           %end;
3800148   +       %end;
3800149   +   %end;
3800150   +   filename emflow;
3800151   +   filename empub;
3800153   +   %do j=1 %to &emloopnumber;
3800154   +       %let targetname = &&looptarget&j;
3800155   +       %let k = 1;
3800156   +       %do %while( %scan(%sysfunc(strip(&targetname)), &k) ne
3800156  !+%sysfunc(strip(&targetname)));
3800157   +           %let k = %eval(&k + 1);
3800158   +       %end;
3800159   +       %let targetlevel = %scan(%sysfunc(strip(%em_target_level)), &k ,%str( ));
3800160   +       %if "&targetlevel" ne "INTERVAL" %then
3800161   +           %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=N, DECSCORECODE=N,
3800161  !+FITSTATISTICS=N, CLASSIFICATION=N, PREDICTED=Y);
3800162   +       %else
3800163   +           %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=N, DECSCORECODE=N,
3800163  !+FITSTATISTICS=N, RESIDUALS=N, PREDICTED=Y);
3800164   +       %let EMGROUPASSMT = N;
3800165   +   %end;
3800167   +%mend posttarget;
3800169   +%macro postloop;
3800171   +   %if ^%symexist(em_import_data_eminfo) %then %goto doendpl;
3800173   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo))
3800173  !+%then %do;
3800174   +       %let emexceptionstring = nomodeltarget;
3800175   +       %goto doendpl;
3800176   +   %end;
3800178   +   %let targetName=;
3800179   +   %let endgrp_decmeta=;
3800181   +   data _null_;
3800182   +      set &em_import_data_eminfo;
3800183   +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
3800184   +      call symput('GROUPID',   strip(data));
3800185   +      call symput('LOOPTYPE', strip(key));
3800186   +   run;
3800188   +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
3800189   +   %include temp;
3800190   +   filename temp;
3800192   +   %em_getname(key=PATH, type=DATA);
3800194   +   %if ^%sysfunc(exist(&em_user_path)) %then %goto doendpl;
3800196   +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
3800198   +   %let gptrain=;
3800199   +   %let gpvalidate=;
3800200   +   %let gptest=;
3800202   +   data _null_;
3800203   +      set &groupImportDs;
3800204   +      select(upcase(port));
3800205   +          when('DATA')     call symput('gpTrain',    strip(dataset));
3800206   +          when('VALIDATE') call symput('gpValidate', strip(dataset));
3800207   +          when('TEST')     call symput('gpTest',     strip(dataset));
3800208   +       otherwise;
3800209   +      end;
3800210   +   run;
3800211   +   %let gpTrain =&em_lib..%sysfunc(strip(&gpTrain));
3800213   +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
3800213  !+%postboostbag(groupid=&groupid, type=&looptype);
3800214   +   %else
3800215   +   %if ("&looptype" eq "GROUPINFO") %then %postgroup(groupid=&groupid,
3800215  !+type=&looptype);
3800216   +   %else
3800217   +   %if ("&looptype" eq "TARGETINFO") %then %posttarget(groupid=&groupid,
3800217  !+type=&looptype);
3800219   +   %let deleteString = &em_nodeid._path;
3800221   +   proc sort data=&em_user_path nodupkey;
3800222   +      by nodelabel;
3800223   +   run;
3800224   +   %let loopnodenum=0;
3800225   +   data _null_;
3800226   +      retain index 0;
3800227   +      set &em_user_path end=eof;
3800228   +      if nodelabel = "&groupid" or index then do;
3800229   +         index + 1;
3800230   +         call symput('loopnode'!!strip(put(index, best.)),  strip(nodelabel));
3800231   +      end;
3800232   +      if eof then do;
3800233   +         call symput('loopnodenum', strip(put(index, best.)));
3800234   +      end;
3800235   +   run;
3800236   +   proc datasets lib=&em_lib nolist;
3800237   +      delete &deleteString;
3800238   +      delete
3800239   +      %do i = 1 %to &loopnodenum;
3800240   +          %let loopcatalog = %sysfunc(strip(&&loopnode&i))_LOOP;
3800241   +          %if %sysfunc(cexist(&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP)) %then
3800241  !+%do;
3800243   +              &loopcatalog
3800244   +          %end;
3800245   +          %if &i = &loopnodenum %then %do;
3800246   +              / mt=catalog;
3800247   +          %end;
3800248   +      %end;
3800249   +   run;
3800250   +   quit;
3800252   +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
3800254   +   %if "&gpTrain" ne "" and (("&looptype" eq "BOOSTINFO") or ("&looptype" eq
3800254  !+"BAGINFO")) %then %do;
3800256   +       %let targetType = ;
3800257   +       data _null_;
3800258   +          set &endgrp_decmeta;
3800259   +          where _TYPE_='TARGET';
3800260   +          call symput('TARGETTYPE', strip(level));
3800261   +       run;
3800263   +       filename empub "&EM_FILE_EMPUBLISHSCORECODE" MOD;
3800265   +       %scoreTables(data=&gpTrain,     out=&em_export_train,    scoreref=emflow,
3800265  !+prescore=Y);
3800267   +       %if &targetType ne 'INTERVAL' %then %do;
3800268   +           %makeClassificationVars(target=&target, data=&em_export_train,
3800268  !+decmeta=&endgrp_decmeta, publish=Y, fref=empub);
3800269   +       %end;
3800271   +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
3800273   +       %em_model(TARGET=&targetname, ASSESS=Y, DECSCORECODE=Y, FITSTATISTICS=Y,
3800273  !+CLASSIFICATION=Y, RESIDUALS=Y, PREDICTED=Y);
3800275   +       filename empub;
3800277   +   %end;
3800279   +   %if "&gpTrain" ne "" %then
3800280   +        %scoreTables(data=&gpTrain,     out=&em_export_train,    scoreref=emflow);
3800281   +   %if "&gpValidate" ne "" %then
3800282   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),
3800282  !+out=&em_export_validate, scoreref=emflow);
3800283   +   %if "&gpTest" ne "" %then
3800284   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),
3800284  !+out=&em_export_test,     scoreref=emflow);
3800286   +   filename emflow;
3800288   +   %doendpl:
3800290   +%mend postloop;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(POSTLOOP):   data _null_;
MPRINT(POSTLOOP):   set EMWS1.Tree_EMINFO;
MPRINT(POSTLOOP):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 
'INDEXINFO');
MPRINT(POSTLOOP):   call symput('GROUPID', strip(data));
MPRINT(POSTLOOP):   call symput('LOOPTYPE', strip(key));
MPRINT(POSTLOOP):   run;

NOTE: There were 1 observations read from the data set EMWS1.TREE_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTLOOP):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
3800291   +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
3800292   +   proc display c=sashelp.emcore.pathscorecode.scl;
3800293   +   run;
3800294   +%mend EM_GETTRAINPATH;
3800295   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(POSTLOOP):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(POSTLOOP):  ;
MPRINT(POSTLOOP):   data _null_;
MPRINT(POSTLOOP):   set EMWS1.Grp_importset;
MPRINT(POSTLOOP):   select(upcase(port));
MPRINT(POSTLOOP):   when('DATA') call symput('gpTrain', strip(dataset));
MPRINT(POSTLOOP):   when('VALIDATE') call symput('gpValidate', strip(dataset));
MPRINT(POSTLOOP):   when('TEST') call symput('gpTest', strip(dataset));
MPRINT(POSTLOOP):   otherwise;
MPRINT(POSTLOOP):   end;
MPRINT(POSTLOOP):   run;

NOTE: There were 15 observations read from the data set EMWS1.GRP_IMPORTSET.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename emflow "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas";
MPRINT(POSTGROUP):   filename empub "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas";
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0;
MPRINT(POSTGROUP):   set EMWS1.Grp_GROUPINFO end=eof;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopwhere'!!strip(put(index, best.)), 
tranwrd(strip(_wheredesc_), '"', '""'));
MPRINT(POSTGROUP):   call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
MPRINT(POSTGROUP):   if eof and substr(_WHERE_, 1, 2)='^(' then call symput('_XValidation', 
'1');
MPRINT(POSTGROUP):   run;

NOTE: There were 10 observations read from the data set EMWS1.GRP_GROUPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   set EMWS1.Tree_EMINFO;
MPRINT(POSTGROUP):   where key in('MODEL');
MPRINT(POSTGROUP):   call symput('grouptarget', strip(symget('grouptarget'))!!' 
'!!strip(target));
MPRINT(POSTGROUP):   run;

NOTE: There were 1 observations read from the data set EMWS1.TREE_EMINFO.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=1;
MPRINT(POSTGROUP):   if nodelabel = "Grp" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP_PATH.
      WHERE LOOPID=1;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=216,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=216,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=253,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=253,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree_LOOP.EMFLOWCODE_1.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=472,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 140 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=472,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 118 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=5229,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=4624,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=5446,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=4841,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=2;
MPRINT(POSTGROUP):   if nodelabel = "Grp" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP_PATH.
      WHERE LOOPID=2;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=5452,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=4847,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=5668,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=5063,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=5705,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=5100,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree_LOOP.EMFLOWCODE_2.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=5924,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 114 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=5319,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 92 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=9783,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=8573,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=10000,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=8790,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=3;
MPRINT(POSTGROUP):   if nodelabel = "Grp" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP_PATH.
      WHERE LOOPID=3;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=10006,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=8796,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=10222,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=9012,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=10259,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=9049,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree_LOOP.EMFLOWCODE_3.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=10478,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 153 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=9268,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 131 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=15696,
      Last Modified=02 June 2018 17:10:21 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=13881,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=15913,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=14098,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=4;
MPRINT(POSTGROUP):   if nodelabel = "Grp" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP_PATH.
      WHERE LOOPID=4;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=15919,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=14104,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=16135,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=14320,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=16172,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=14357,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree_LOOP.EMFLOWCODE_4.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=16391,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 140 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=14576,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 118 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=21159,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=18739,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=21376,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=18956,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=5;
MPRINT(POSTGROUP):   if nodelabel = "Grp" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP_PATH.
      WHERE LOOPID=5;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=21382,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=18962,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=21598,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=19178,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=21635,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=19215,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree_LOOP.EMFLOWCODE_5.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=21854,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 140 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=19434,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 118 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=26611,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=23586,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=26828,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=23803,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=6;
MPRINT(POSTGROUP):   if nodelabel = "Grp" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP_PATH.
      WHERE LOOPID=6;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=26834,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=23809,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=27050,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=24025,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=27087,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=24062,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree_LOOP.EMFLOWCODE_6.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=27306,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 127 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=24281,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 105 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=31600,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=27970,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=31817,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=28187,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=7;
MPRINT(POSTGROUP):   if nodelabel = "Grp" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP_PATH.
      WHERE LOOPID=7;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=31823,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=28193,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=32039,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=28409,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=32076,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=28446,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree_LOOP.EMFLOWCODE_7.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=32295,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 114 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=28665,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 92 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=36154,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=31919,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=36371,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=32136,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=8;
MPRINT(POSTGROUP):   if nodelabel = "Grp" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP_PATH.
      WHERE LOOPID=8;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=36377,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=32142,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=36593,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=32358,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=36630,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=32395,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree_LOOP.EMFLOWCODE_8.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=36849,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 114 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=32614,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 92 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=40708,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=35868,
      Last Modified=02 June 2018 17:10:22 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=40925,
      Last Modified=02 June 2018 17:10:23 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=36085,
      Last Modified=02 June 2018 17:10:23 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=9;
MPRINT(POSTGROUP):   if nodelabel = "Grp" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP_PATH.
      WHERE LOOPID=9;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=40931,
      Last Modified=02 June 2018 17:10:23 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=36091,
      Last Modified=02 June 2018 17:10:23 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=41147,
      Last Modified=02 June 2018 17:10:23 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=36307,
      Last Modified=02 June 2018 17:10:23 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=41184,
      Last Modified=02 June 2018 17:10:23 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=36344,
      Last Modified=02 June 2018 17:10:23 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree_LOOP.EMFLOWCODE_9.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=41403,
      Last Modified=02 June 2018 17:10:23 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 140 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=36563,
      Last Modified=02 June 2018 17:10:23 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 118 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=46159,
      Last Modified=02 June 2018 17:10:23 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=40714,
      Last Modified=02 June 2018 17:10:23 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=46376,
      Last Modified=02 June 2018 17:10:23 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=40931,
      Last Modified=02 June 2018 17:10:23 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=10;
MPRINT(POSTGROUP):   if nodelabel = "Grp" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP_PATH.
      WHERE LOOPID=10;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=46382,
      Last Modified=02 June 2018 17:10:23 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=40937,
      Last Modified=02 June 2018 17:10:23 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=46599,
      Last Modified=02 June 2018 17:10:23 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 10.
      The maximum record length was 25.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=41154,
      Last Modified=02 June 2018 17:10:23 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 10.
      The maximum record length was 25.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=46638,
      Last Modified=02 June 2018 17:10:23 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=41193,
      Last Modified=02 June 2018 17:10:23 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree_LOOP.EMFLOWCODE_10.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=46858,
      Last Modified=02 June 2018 17:10:23 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 140 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=41413,
      Last Modified=02 June 2018 17:10:23 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 118 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=51626,
      Last Modified=02 June 2018 17:10:23 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=45576,
      Last Modified=02 June 2018 17:10:23 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=51844,
      Last Modified=02 June 2018 17:10:23 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=45794,
      Last Modified=02 June 2018 17:10:23 o'clock,
      Create Time=02 June 2018 17:10:21 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(POSTGROUP):   filename empub;
NOTE: Fileref EMPUB has been deassigned.
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   set WORK.EM_USER_MODEL end=eof;
MPRINT(EM_MODEL):   output;
MPRINT(EM_MODEL):   if eof then do;
MPRINT(EM_MODEL):   data = "EMWS1.TRANS2_TRAIN";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "Y";
MPRINT(EM_MODEL):   decscorecode = "Y";
MPRINT(EM_MODEL):   fitstatistics = "Y";
MPRINT(EM_MODEL):   classification = "Y";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   output;
MPRINT(EM_MODEL):   end;
MPRINT(EM_MODEL):   run;

NOTE: There were 10 observations read from the data set WORK.EM_USER_MODEL.
NOTE: The data set WORK.EM_USER_MODEL has 11 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTLOOP):   proc sort data=EMWS1.EndGrp_PATH nodupkey;
MPRINT(POSTLOOP):   by nodelabel;
MPRINT(POSTLOOP):   run;

NOTE: There were 120 observations read from the data set EMWS1.ENDGRP_PATH.
NOTE: 108 observations with duplicate key values were deleted.
NOTE: The data set EMWS1.ENDGRP_PATH has 12 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTLOOP):   data _null_;
MPRINT(POSTLOOP):   retain index 0;
MPRINT(POSTLOOP):   set EMWS1.EndGrp_PATH end=eof;
MPRINT(POSTLOOP):   if nodelabel = "Grp" or index then do;
MPRINT(POSTLOOP):   index + 1;
MPRINT(POSTLOOP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTLOOP):   end;
MPRINT(POSTLOOP):   if eof then do;
MPRINT(POSTLOOP):   call symput('loopnodenum', strip(put(index, best.)));
MPRINT(POSTLOOP):   end;
MPRINT(POSTLOOP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTLOOP):   proc datasets lib=EMWS1 nolist;
MPRINT(POSTLOOP):   delete EndGrp_path;
MPRINT(POSTLOOP):   delete Grp_LOOP Tree_LOOP / mt=catalog;
MPRINT(POSTLOOP):   run;

NOTE: Deleting EMWS1.ENDGRP_PATH (memtype=DATA).
NOTE: Deleting EMWS1.GRP_LOOP (memtype=CATALOG).
NOTE: Deleting EMWS1.TREE_LOOP (memtype=CATALOG).
MPRINT(POSTLOOP):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(POSTLOOP):   filename emflow "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas" MOD;
MPRINT(SCORETABLES):   data EMWS1.EndGrp_TRAIN / view=EMWS1.EndGrp_TRAIN;
MPRINT(SCORETABLES):   set EMWS1.Trans2_TRAIN ;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMFLOWSCORE.sas.
3800296   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3800297   +* Grp: StartGroup;
MPRINT(SCORETABLES):   * Grp: StartGroup;
3800298   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3800299   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3800300   +* Group: ^(cv_var =1);
MPRINT(SCORETABLES):   * Group: ^(cv_var =1);
3800301   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3800302   +if (cv_var =1)  then do;
MPRINT(SCORETABLES):   if (cv_var =1) then do;
3800303   +_XVAL_=1;
MPRINT(SCORETABLES):   _XVAL_=1;
3800304   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3800305   +* Tree: DecisionTree;
MPRINT(SCORETABLES):   * Tree: DecisionTree;
3800306   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3800307   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3800308   +* Group: ^(cv_var =1);
MPRINT(SCORETABLES):   * Group: ^(cv_var =1);
3800309   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3800310   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3800311   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3800312   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3800313   +
3800314   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3800315   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3800316   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3800317   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3800318   +
3800319   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3800320   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3800321   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3800322   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3800323   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3800324   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3800325   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3800326   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3800327   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3800328   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3800329   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3800330   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3800331   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3800332   +
3800333   +
3800334   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3800335   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3800336   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3800337   +
3800338   +
3800339   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3800340   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3800341   +
3800342   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3800343   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3800344   +                 0.125 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <= 
RANGE_campaign_acceptance THEN DO;
3800345   +  IF  NOT MISSING(RANGE_Recency ) AND
3800346   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888 
THEN DO;
3800347   +    IF  NOT MISSING(MntCard_Games ) AND
3800348   +          0.37064216304314 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.37064216304314 <= MntCard_Games 
THEN DO;
3800349   +      _NODE_  =                   13;
MPRINT(SCORETABLES):   _NODE_ = 13;
3800350   +      _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3800351   +      P_DepVar0  =      0.0813953488372;
MPRINT(SCORETABLES):   P_DepVar0 = 0.0813953488372;
3800352   +      P_DepVar1  =     0.91860465116279;
MPRINT(SCORETABLES):   P_DepVar1 = 0.91860465116279;
3800353   +      Q_DepVar0  =      0.0813953488372;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.0813953488372;
3800354   +      Q_DepVar1  =     0.91860465116279;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.91860465116279;
3800355   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3800356   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3800357   +      END;
MPRINT(SCORETABLES):   END;
3800358   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3800359   +      _NODE_  =                   12;
MPRINT(SCORETABLES):   _NODE_ = 12;
3800360   +      _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3800361   +      P_DepVar0  =     0.55140186915887;
MPRINT(SCORETABLES):   P_DepVar0 = 0.55140186915887;
3800362   +      P_DepVar1  =     0.44859813084112;
MPRINT(SCORETABLES):   P_DepVar1 = 0.44859813084112;
3800363   +      Q_DepVar0  =     0.55140186915887;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.55140186915887;
3800364   +      Q_DepVar1  =     0.44859813084112;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.44859813084112;
3800365   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3800366   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3800367   +      END;
MPRINT(SCORETABLES):   END;
3800368   +    END;
MPRINT(SCORETABLES):   END;
3800369   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3800370   +    IF  NOT MISSING(MntCard_Games ) AND
3800371   +          0.53369735892484 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.53369735892484 <= MntCard_Games 
THEN DO;
3800372   +      _NODE_  =                   15;
MPRINT(SCORETABLES):   _NODE_ = 15;
3800373   +      _LEAF_  =                    7;
MPRINT(SCORETABLES):   _LEAF_ = 7;
3800374   +      P_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   P_DepVar0 = 0.4;
3800375   +      P_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   P_DepVar1 = 0.6;
3800376   +      Q_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.4;
3800377   +      Q_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.6;
3800378   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3800379   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3800380   +      END;
MPRINT(SCORETABLES):   END;
3800381   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3800382   +      _NODE_  =                   14;
MPRINT(SCORETABLES):   _NODE_ = 14;
3800383   +      _LEAF_  =                    6;
MPRINT(SCORETABLES):   _LEAF_ = 6;
3800384   +      P_DepVar0  =     0.90036900369003;
MPRINT(SCORETABLES):   P_DepVar0 = 0.90036900369003;
3800385   +      P_DepVar1  =     0.09963099630996;
MPRINT(SCORETABLES):   P_DepVar1 = 0.09963099630996;
3800386   +      Q_DepVar0  =     0.90036900369003;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.90036900369003;
3800387   +      Q_DepVar1  =     0.09963099630996;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.09963099630996;
3800388   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3800389   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3800390   +      END;
MPRINT(SCORETABLES):   END;
3800391   +    END;
MPRINT(SCORETABLES):   END;
3800392   +  END;
MPRINT(SCORETABLES):   END;
3800393   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3800394   +  IF  NOT MISSING(RANGE_Recency ) AND
3800395   +    RANGE_Recency  <     0.21717171717171 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.21717171717171 
THEN DO;
3800396   +    IF  NOT MISSING(MntCard_Games ) AND
3800397   +          0.53227015323117 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.53227015323117 <= MntCard_Games 
THEN DO;
3800398   +      _NODE_  =                    9;
MPRINT(SCORETABLES):   _NODE_ = 9;
3800399   +      _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3800400   +      P_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.33333333333333;
3800401   +      P_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.66666666666666;
3800402   +      Q_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.33333333333333;
3800403   +      Q_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.66666666666666;
3800404   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3800405   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3800406   +      END;
MPRINT(SCORETABLES):   END;
3800407   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3800408   +      _NODE_  =                    8;
MPRINT(SCORETABLES):   _NODE_ = 8;
3800409   +      _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3800410   +      P_DepVar0  =     0.85260115606936;
MPRINT(SCORETABLES):   P_DepVar0 = 0.85260115606936;
3800411   +      P_DepVar1  =     0.14739884393063;
MPRINT(SCORETABLES):   P_DepVar1 = 0.14739884393063;
3800412   +      Q_DepVar0  =     0.85260115606936;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.85260115606936;
3800413   +      Q_DepVar1  =     0.14739884393063;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.14739884393063;
3800414   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3800415   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3800416   +      END;
MPRINT(SCORETABLES):   END;
3800417   +    END;
MPRINT(SCORETABLES):   END;
3800418   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3800419   +    _NODE_  =                    5;
MPRINT(SCORETABLES):   _NODE_ = 5;
3800420   +    _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3800421   +    P_DepVar0  =      0.9751166407465;
MPRINT(SCORETABLES):   P_DepVar0 = 0.9751166407465;
3800422   +    P_DepVar1  =     0.02488335925349;
MPRINT(SCORETABLES):   P_DepVar1 = 0.02488335925349;
3800423   +    Q_DepVar0  =      0.9751166407465;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.9751166407465;
3800424   +    Q_DepVar1  =     0.02488335925349;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.02488335925349;
3800425   +    I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3800426   +    U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3800427   +    END;
MPRINT(SCORETABLES):   END;
3800428   +  END;
MPRINT(SCORETABLES):   END;
3800429   +
3800430   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3800431   +IF  F_DepVar  NE '0'
3800432   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3800433   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3800434   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3800435   + END;
MPRINT(SCORETABLES):   END;
3800436   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3800437   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3800438   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3800439   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3800440   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3800441   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3800442   +       END;
MPRINT(SCORETABLES):   END;
3800443   + END;
MPRINT(SCORETABLES):   END;
3800444   +
3800445   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3800446   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3800447   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3800448   +
3800449   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3800450   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3800451   +* EndGrp: EndGroup;
MPRINT(SCORETABLES):   * EndGrp: EndGroup;
3800452   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3800453   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3800454   +* Group: ^(cv_var =1);
MPRINT(SCORETABLES):   * Group: ^(cv_var =1);
3800455   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3800456   +end;
MPRINT(SCORETABLES):   end;
3800457   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3800458   +* Grp: StartGroup;
MPRINT(SCORETABLES):   * Grp: StartGroup;
3800459   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3800460   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3800461   +* Group: ^(cv_var =2);
MPRINT(SCORETABLES):   * Group: ^(cv_var =2);
3800462   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3800463   +if (cv_var =2)  then do;
MPRINT(SCORETABLES):   if (cv_var =2) then do;
3800464   +_XVAL_=2;
MPRINT(SCORETABLES):   _XVAL_=2;
3800465   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3800466   +* Tree: DecisionTree;
MPRINT(SCORETABLES):   * Tree: DecisionTree;
3800467   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3800468   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3800469   +* Group: ^(cv_var =2);
MPRINT(SCORETABLES):   * Group: ^(cv_var =2);
3800470   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3800471   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3800472   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3800473   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3800474   +
3800475   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3800476   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3800477   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3800478   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3800479   +
3800480   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3800481   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3800482   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3800483   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3800484   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3800485   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3800486   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3800487   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3800488   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3800489   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3800490   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3800491   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3800492   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3800493   +
3800494   +
3800495   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3800496   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3800497   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3800498   +
3800499   +
3800500   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3800501   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3800502   +
3800503   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3800504   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3800505   +                 0.125 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <= 
RANGE_campaign_acceptance THEN DO;
3800506   +  IF  NOT MISSING(RANGE_Recency ) AND
3800507   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888 
THEN DO;
3800508   +    IF  NOT MISSING(MntCard_Games ) AND
3800509   +      MntCard_Games  <     0.27480595174713 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND MntCard_Games < 0.27480595174713 
THEN DO;
3800510   +      _NODE_  =                   12;
MPRINT(SCORETABLES):   _NODE_ = 12;
3800511   +      _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3800512   +      P_DepVar0  =     0.64179104477611;
MPRINT(SCORETABLES):   P_DepVar0 = 0.64179104477611;
3800513   +      P_DepVar1  =     0.35820895522388;
MPRINT(SCORETABLES):   P_DepVar1 = 0.35820895522388;
3800514   +      Q_DepVar0  =     0.64179104477611;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.64179104477611;
3800515   +      Q_DepVar1  =     0.35820895522388;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.35820895522388;
3800516   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3800517   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3800518   +      END;
MPRINT(SCORETABLES):   END;
3800519   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3800520   +      _NODE_  =                   13;
MPRINT(SCORETABLES):   _NODE_ = 13;
3800521   +      _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3800522   +      P_DepVar0  =                 0.16;
MPRINT(SCORETABLES):   P_DepVar0 = 0.16;
3800523   +      P_DepVar1  =                 0.84;
MPRINT(SCORETABLES):   P_DepVar1 = 0.84;
3800524   +      Q_DepVar0  =                 0.16;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.16;
3800525   +      Q_DepVar1  =                 0.84;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.84;
3800526   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3800527   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3800528   +      END;
MPRINT(SCORETABLES):   END;
3800529   +    END;
MPRINT(SCORETABLES):   END;
3800530   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3800531   +    IF  NOT MISSING(MntCard_Games ) AND
3800532   +          0.52461453744493 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.52461453744493 <= MntCard_Games 
THEN DO;
3800533   +      _NODE_  =                   15;
MPRINT(SCORETABLES):   _NODE_ = 15;
3800534   +      _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3800535   +      P_DepVar0  =     0.48936170212765;
MPRINT(SCORETABLES):   P_DepVar0 = 0.48936170212765;
3800536   +      P_DepVar1  =     0.51063829787234;
MPRINT(SCORETABLES):   P_DepVar1 = 0.51063829787234;
3800537   +      Q_DepVar0  =     0.48936170212765;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.48936170212765;
3800538   +      Q_DepVar1  =     0.51063829787234;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.51063829787234;
3800539   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3800540   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3800541   +      END;
MPRINT(SCORETABLES):   END;
3800542   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3800543   +      _NODE_  =                   14;
MPRINT(SCORETABLES):   _NODE_ = 14;
3800544   +      _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3800545   +      P_DepVar0  =      0.8943396226415;
MPRINT(SCORETABLES):   P_DepVar0 = 0.8943396226415;
3800546   +      P_DepVar1  =     0.10566037735849;
MPRINT(SCORETABLES):   P_DepVar1 = 0.10566037735849;
3800547   +      Q_DepVar0  =      0.8943396226415;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.8943396226415;
3800548   +      Q_DepVar1  =     0.10566037735849;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.10566037735849;
3800549   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3800550   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3800551   +      END;
MPRINT(SCORETABLES):   END;
3800552   +    END;
MPRINT(SCORETABLES):   END;
3800553   +  END;
MPRINT(SCORETABLES):   END;
3800554   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3800555   +  _NODE_  =                    2;
MPRINT(SCORETABLES):   _NODE_ = 2;
3800556   +  _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3800557   +  P_DepVar0  =     0.93753682969946;
MPRINT(SCORETABLES):   P_DepVar0 = 0.93753682969946;
3800558   +  P_DepVar1  =     0.06246317030053;
MPRINT(SCORETABLES):   P_DepVar1 = 0.06246317030053;
3800559   +  Q_DepVar0  =     0.93753682969946;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.93753682969946;
3800560   +  Q_DepVar1  =     0.06246317030053;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.06246317030053;
3800561   +  I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3800562   +  U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3800563   +  END;
MPRINT(SCORETABLES):   END;
3800564   +
3800565   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3800566   +IF  F_DepVar  NE '0'
3800567   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3800568   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3800569   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3800570   + END;
MPRINT(SCORETABLES):   END;
3800571   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3800572   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3800573   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3800574   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3800575   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3800576   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3800577   +       END;
MPRINT(SCORETABLES):   END;
3800578   + END;
MPRINT(SCORETABLES):   END;
3800579   +
3800580   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3800581   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3800582   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3800583   +
3800584   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3800585   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3800586   +* EndGrp: EndGroup;
MPRINT(SCORETABLES):   * EndGrp: EndGroup;
3800587   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3800588   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3800589   +* Group: ^(cv_var =2);
MPRINT(SCORETABLES):   * Group: ^(cv_var =2);
3800590   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3800591   +end;
MPRINT(SCORETABLES):   end;
3800592   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3800593   +* Grp: StartGroup;
MPRINT(SCORETABLES):   * Grp: StartGroup;
3800594   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3800595   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3800596   +* Group: ^(cv_var =3);
MPRINT(SCORETABLES):   * Group: ^(cv_var =3);
3800597   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3800598   +if (cv_var =3)  then do;
MPRINT(SCORETABLES):   if (cv_var =3) then do;
3800599   +_XVAL_=3;
MPRINT(SCORETABLES):   _XVAL_=3;
3800600   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3800601   +* Tree: DecisionTree;
MPRINT(SCORETABLES):   * Tree: DecisionTree;
3800602   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3800603   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3800604   +* Group: ^(cv_var =3);
MPRINT(SCORETABLES):   * Group: ^(cv_var =3);
3800605   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3800606   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3800607   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3800608   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3800609   +
3800610   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3800611   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3800612   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3800613   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3800614   +
3800615   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3800616   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3800617   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3800618   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3800619   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3800620   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3800621   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3800622   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3800623   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3800624   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3800625   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3800626   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3800627   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3800628   +
3800629   +
3800630   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3800631   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3800632   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3800633   +
3800634   +
3800635   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3800636   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3800637   +
3800638   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3800639   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3800640   +                 0.125 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <= 
RANGE_campaign_acceptance THEN DO;
3800641   +  IF  NOT MISSING(RANGE_Recency ) AND
3800642   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888 
THEN DO;
3800643   +    IF  NOT MISSING(MntCard_Games ) AND
3800644   +      MntCard_Games  <     0.27480595174713 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND MntCard_Games < 0.27480595174713 
THEN DO;
3800645   +      _NODE_  =                   12;
MPRINT(SCORETABLES):   _NODE_ = 12;
3800646   +      _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3800647   +      P_DepVar0  =     0.63888888888888;
MPRINT(SCORETABLES):   P_DepVar0 = 0.63888888888888;
3800648   +      P_DepVar1  =     0.36111111111111;
MPRINT(SCORETABLES):   P_DepVar1 = 0.36111111111111;
3800649   +      Q_DepVar0  =     0.63888888888888;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.63888888888888;
3800650   +      Q_DepVar1  =     0.36111111111111;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.36111111111111;
3800651   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3800652   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3800653   +      END;
MPRINT(SCORETABLES):   END;
3800654   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3800655   +      _NODE_  =                   13;
MPRINT(SCORETABLES):   _NODE_ = 13;
3800656   +      _LEAF_  =                    6;
MPRINT(SCORETABLES):   _LEAF_ = 6;
3800657   +      P_DepVar0  =             0.140625;
MPRINT(SCORETABLES):   P_DepVar0 = 0.140625;
3800658   +      P_DepVar1  =             0.859375;
MPRINT(SCORETABLES):   P_DepVar1 = 0.859375;
3800659   +      Q_DepVar0  =             0.140625;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.140625;
3800660   +      Q_DepVar1  =             0.859375;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.859375;
3800661   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3800662   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3800663   +      END;
MPRINT(SCORETABLES):   END;
3800664   +    END;
MPRINT(SCORETABLES):   END;
3800665   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3800666   +    IF  NOT MISSING(MntCard_Games ) AND
3800667   +          0.52461453744493 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.52461453744493 <= MntCard_Games 
THEN DO;
3800668   +      _NODE_  =                   15;
MPRINT(SCORETABLES):   _NODE_ = 15;
3800669   +      _LEAF_  =                    8;
MPRINT(SCORETABLES):   _LEAF_ = 8;
3800670   +      P_DepVar0  =     0.45833333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.45833333333333;
3800671   +      P_DepVar1  =     0.54166666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.54166666666666;
3800672   +      Q_DepVar0  =     0.45833333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.45833333333333;
3800673   +      Q_DepVar1  =     0.54166666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.54166666666666;
3800674   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3800675   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3800676   +      END;
MPRINT(SCORETABLES):   END;
3800677   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3800678   +      _NODE_  =                   14;
MPRINT(SCORETABLES):   _NODE_ = 14;
3800679   +      _LEAF_  =                    7;
MPRINT(SCORETABLES):   _LEAF_ = 7;
3800680   +      P_DepVar0  =     0.91164658634538;
MPRINT(SCORETABLES):   P_DepVar0 = 0.91164658634538;
3800681   +      P_DepVar1  =     0.08835341365461;
MPRINT(SCORETABLES):   P_DepVar1 = 0.08835341365461;
3800682   +      Q_DepVar0  =     0.91164658634538;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.91164658634538;
3800683   +      Q_DepVar1  =     0.08835341365461;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.08835341365461;
3800684   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3800685   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3800686   +      END;
MPRINT(SCORETABLES):   END;
3800687   +    END;
MPRINT(SCORETABLES):   END;
3800688   +  END;
MPRINT(SCORETABLES):   END;
3800689   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3800690   +  IF  NOT MISSING(RANGE_Recency ) AND
3800691   +    RANGE_Recency  <     0.21717171717171 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.21717171717171 
THEN DO;
3800692   +    IF  NOT MISSING(MntCard_Games ) AND
3800693   +          0.49267885220125 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.49267885220125 <= MntCard_Games 
THEN DO;
3800694   +      _NODE_  =                    9;
MPRINT(SCORETABLES):   _NODE_ = 9;
3800695   +      _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3800696   +      P_DepVar0  =     0.42465753424657;
MPRINT(SCORETABLES):   P_DepVar0 = 0.42465753424657;
3800697   +      P_DepVar1  =     0.57534246575342;
MPRINT(SCORETABLES):   P_DepVar1 = 0.57534246575342;
3800698   +      Q_DepVar0  =     0.42465753424657;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.42465753424657;
3800699   +      Q_DepVar1  =     0.57534246575342;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.57534246575342;
3800700   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3800701   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3800702   +      END;
MPRINT(SCORETABLES):   END;
3800703   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3800704   +      _NODE_  =                    8;
MPRINT(SCORETABLES):   _NODE_ = 8;
3800705   +      _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3800706   +      P_DepVar0  =     0.86996904024767;
MPRINT(SCORETABLES):   P_DepVar0 = 0.86996904024767;
3800707   +      P_DepVar1  =     0.13003095975232;
MPRINT(SCORETABLES):   P_DepVar1 = 0.13003095975232;
3800708   +      Q_DepVar0  =     0.86996904024767;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.86996904024767;
3800709   +      Q_DepVar1  =     0.13003095975232;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.13003095975232;
3800710   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3800711   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3800712   +      END;
MPRINT(SCORETABLES):   END;
3800713   +    END;
MPRINT(SCORETABLES):   END;
3800714   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3800715   +    IF  NOT MISSING(MntCard_Games ) AND
3800716   +          0.76111831862999 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.76111831862999 <= MntCard_Games 
THEN DO;
3800717   +      _NODE_  =                   11;
MPRINT(SCORETABLES):   _NODE_ = 11;
3800718   +      _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3800719   +      P_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   P_DepVar0 = 0.4;
3800720   +      P_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   P_DepVar1 = 0.6;
3800721   +      Q_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.4;
3800722   +      Q_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.6;
3800723   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3800724   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3800725   +      END;
MPRINT(SCORETABLES):   END;
3800726   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3800727   +      _NODE_  =                   10;
MPRINT(SCORETABLES):   _NODE_ = 10;
3800728   +      _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3800729   +      P_DepVar0  =     0.97750193948797;
MPRINT(SCORETABLES):   P_DepVar0 = 0.97750193948797;
3800730   +      P_DepVar1  =     0.02249806051202;
MPRINT(SCORETABLES):   P_DepVar1 = 0.02249806051202;
3800731   +      Q_DepVar0  =     0.97750193948797;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.97750193948797;
3800732   +      Q_DepVar1  =     0.02249806051202;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.02249806051202;
3800733   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3800734   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3800735   +      END;
MPRINT(SCORETABLES):   END;
3800736   +    END;
MPRINT(SCORETABLES):   END;
3800737   +  END;
MPRINT(SCORETABLES):   END;
3800738   +
3800739   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3800740   +IF  F_DepVar  NE '0'
3800741   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3800742   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3800743   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3800744   + END;
MPRINT(SCORETABLES):   END;
3800745   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3800746   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3800747   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3800748   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3800749   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3800750   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3800751   +       END;
MPRINT(SCORETABLES):   END;
3800752   + END;
MPRINT(SCORETABLES):   END;
3800753   +
3800754   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3800755   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3800756   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3800757   +
3800758   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3800759   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3800760   +* EndGrp: EndGroup;
MPRINT(SCORETABLES):   * EndGrp: EndGroup;
3800761   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3800762   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3800763   +* Group: ^(cv_var =3);
MPRINT(SCORETABLES):   * Group: ^(cv_var =3);
3800764   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3800765   +end;
MPRINT(SCORETABLES):   end;
3800766   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3800767   +* Grp: StartGroup;
MPRINT(SCORETABLES):   * Grp: StartGroup;
3800768   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3800769   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3800770   +* Group: ^(cv_var =4);
MPRINT(SCORETABLES):   * Group: ^(cv_var =4);
3800771   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3800772   +if (cv_var =4)  then do;
MPRINT(SCORETABLES):   if (cv_var =4) then do;
3800773   +_XVAL_=4;
MPRINT(SCORETABLES):   _XVAL_=4;
3800774   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3800775   +* Tree: DecisionTree;
MPRINT(SCORETABLES):   * Tree: DecisionTree;
3800776   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3800777   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3800778   +* Group: ^(cv_var =4);
MPRINT(SCORETABLES):   * Group: ^(cv_var =4);
3800779   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3800780   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3800781   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3800782   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3800783   +
3800784   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3800785   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3800786   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3800787   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3800788   +
3800789   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3800790   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3800791   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3800792   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3800793   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3800794   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3800795   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3800796   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3800797   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3800798   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3800799   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3800800   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3800801   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3800802   +
3800803   +
3800804   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3800805   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3800806   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3800807   +
3800808   +
3800809   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3800810   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3800811   +
3800812   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3800813   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3800814   +                 0.125 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <= 
RANGE_campaign_acceptance THEN DO;
3800815   +  IF  NOT MISSING(RANGE_Recency ) AND
3800816   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888 
THEN DO;
3800817   +    IF  NOT MISSING(NumCatalogPurchases ) AND
3800818   +      NumCatalogPurchases  <     0.25320512820512 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND NumCatalogPurchases < 
0.25320512820512 THEN DO;
3800819   +      _NODE_  =                   12;
MPRINT(SCORETABLES):   _NODE_ = 12;
3800820   +      _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3800821   +      P_DepVar0  =     0.55445544554455;
MPRINT(SCORETABLES):   P_DepVar0 = 0.55445544554455;
3800822   +      P_DepVar1  =     0.44554455445544;
MPRINT(SCORETABLES):   P_DepVar1 = 0.44554455445544;
3800823   +      Q_DepVar0  =     0.55445544554455;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.55445544554455;
3800824   +      Q_DepVar1  =     0.44554455445544;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.44554455445544;
3800825   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3800826   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3800827   +      END;
MPRINT(SCORETABLES):   END;
3800828   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3800829   +      _NODE_  =                   13;
MPRINT(SCORETABLES):   _NODE_ = 13;
3800830   +      _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3800831   +      P_DepVar0  =     0.10576923076923;
MPRINT(SCORETABLES):   P_DepVar0 = 0.10576923076923;
3800832   +      P_DepVar1  =     0.89423076923076;
MPRINT(SCORETABLES):   P_DepVar1 = 0.89423076923076;
3800833   +      Q_DepVar0  =     0.10576923076923;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.10576923076923;
3800834   +      Q_DepVar1  =     0.89423076923076;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.89423076923076;
3800835   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3800836   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3800837   +      END;
MPRINT(SCORETABLES):   END;
3800838   +    END;
MPRINT(SCORETABLES):   END;
3800839   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3800840   +    IF  NOT MISSING(MntCard_Games ) AND
3800841   +          0.53369735892484 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.53369735892484 <= MntCard_Games 
THEN DO;
3800842   +      _NODE_  =                   15;
MPRINT(SCORETABLES):   _NODE_ = 15;
3800843   +      _LEAF_  =                    7;
MPRINT(SCORETABLES):   _LEAF_ = 7;
3800844   +      P_DepVar0  =     0.44186046511627;
MPRINT(SCORETABLES):   P_DepVar0 = 0.44186046511627;
3800845   +      P_DepVar1  =     0.55813953488372;
MPRINT(SCORETABLES):   P_DepVar1 = 0.55813953488372;
3800846   +      Q_DepVar0  =     0.44186046511627;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.44186046511627;
3800847   +      Q_DepVar1  =     0.55813953488372;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.55813953488372;
3800848   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3800849   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3800850   +      END;
MPRINT(SCORETABLES):   END;
3800851   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3800852   +      _NODE_  =                   14;
MPRINT(SCORETABLES):   _NODE_ = 14;
3800853   +      _LEAF_  =                    6;
MPRINT(SCORETABLES):   _LEAF_ = 6;
3800854   +      P_DepVar0  =      0.8932384341637;
MPRINT(SCORETABLES):   P_DepVar0 = 0.8932384341637;
3800855   +      P_DepVar1  =     0.10676156583629;
MPRINT(SCORETABLES):   P_DepVar1 = 0.10676156583629;
3800856   +      Q_DepVar0  =      0.8932384341637;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.8932384341637;
3800857   +      Q_DepVar1  =     0.10676156583629;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.10676156583629;
3800858   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3800859   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3800860   +      END;
MPRINT(SCORETABLES):   END;
3800861   +    END;
MPRINT(SCORETABLES):   END;
3800862   +  END;
MPRINT(SCORETABLES):   END;
3800863   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3800864   +  IF  NOT MISSING(RANGE_Recency ) AND
3800865   +    RANGE_Recency  <     0.21717171717171 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.21717171717171 
THEN DO;
3800866   +    IF  NOT MISSING(MntCard_Games ) AND
3800867   +          0.49267885220125 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.49267885220125 <= MntCard_Games 
THEN DO;
3800868   +      _NODE_  =                    9;
MPRINT(SCORETABLES):   _NODE_ = 9;
3800869   +      _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3800870   +      P_DepVar0  =     0.41025641025641;
MPRINT(SCORETABLES):   P_DepVar0 = 0.41025641025641;
3800871   +      P_DepVar1  =     0.58974358974358;
MPRINT(SCORETABLES):   P_DepVar1 = 0.58974358974358;
3800872   +      Q_DepVar0  =     0.41025641025641;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.41025641025641;
3800873   +      Q_DepVar1  =     0.58974358974358;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.58974358974358;
3800874   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3800875   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3800876   +      END;
MPRINT(SCORETABLES):   END;
3800877   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3800878   +      _NODE_  =                    8;
MPRINT(SCORETABLES):   _NODE_ = 8;
3800879   +      _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3800880   +      P_DepVar0  =     0.87951807228915;
MPRINT(SCORETABLES):   P_DepVar0 = 0.87951807228915;
3800881   +      P_DepVar1  =     0.12048192771084;
MPRINT(SCORETABLES):   P_DepVar1 = 0.12048192771084;
3800882   +      Q_DepVar0  =     0.87951807228915;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.87951807228915;
3800883   +      Q_DepVar1  =     0.12048192771084;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.12048192771084;
3800884   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3800885   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3800886   +      END;
MPRINT(SCORETABLES):   END;
3800887   +    END;
MPRINT(SCORETABLES):   END;
3800888   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3800889   +    _NODE_  =                    5;
MPRINT(SCORETABLES):   _NODE_ = 5;
3800890   +    _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3800891   +    P_DepVar0  =     0.97587548638132;
MPRINT(SCORETABLES):   P_DepVar0 = 0.97587548638132;
3800892   +    P_DepVar1  =     0.02412451361867;
MPRINT(SCORETABLES):   P_DepVar1 = 0.02412451361867;
3800893   +    Q_DepVar0  =     0.97587548638132;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.97587548638132;
3800894   +    Q_DepVar1  =     0.02412451361867;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.02412451361867;
3800895   +    I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3800896   +    U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3800897   +    END;
MPRINT(SCORETABLES):   END;
3800898   +  END;
MPRINT(SCORETABLES):   END;
3800899   +
3800900   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3800901   +IF  F_DepVar  NE '0'
3800902   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3800903   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3800904   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3800905   + END;
MPRINT(SCORETABLES):   END;
3800906   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3800907   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3800908   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3800909   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3800910   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3800911   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3800912   +       END;
MPRINT(SCORETABLES):   END;
3800913   + END;
MPRINT(SCORETABLES):   END;
3800914   +
3800915   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3800916   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3800917   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3800918   +
3800919   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3800920   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3800921   +* EndGrp: EndGroup;
MPRINT(SCORETABLES):   * EndGrp: EndGroup;
3800922   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3800923   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3800924   +* Group: ^(cv_var =4);
MPRINT(SCORETABLES):   * Group: ^(cv_var =4);
3800925   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3800926   +end;
MPRINT(SCORETABLES):   end;
3800927   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3800928   +* Grp: StartGroup;
MPRINT(SCORETABLES):   * Grp: StartGroup;
3800929   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3800930   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3800931   +* Group: ^(cv_var =5);
MPRINT(SCORETABLES):   * Group: ^(cv_var =5);
3800932   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3800933   +if (cv_var =5)  then do;
MPRINT(SCORETABLES):   if (cv_var =5) then do;
3800934   +_XVAL_=5;
MPRINT(SCORETABLES):   _XVAL_=5;
3800935   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3800936   +* Tree: DecisionTree;
MPRINT(SCORETABLES):   * Tree: DecisionTree;
3800937   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3800938   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3800939   +* Group: ^(cv_var =5);
MPRINT(SCORETABLES):   * Group: ^(cv_var =5);
3800940   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3800941   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3800942   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3800943   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3800944   +
3800945   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3800946   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3800947   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3800948   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3800949   +
3800950   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3800951   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3800952   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3800953   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3800954   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3800955   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3800956   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3800957   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3800958   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3800959   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3800960   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3800961   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3800962   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3800963   +
3800964   +
3800965   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3800966   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3800967   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3800968   +
3800969   +
3800970   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3800971   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3800972   +
3800973   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3800974   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3800975   +                 0.125 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <= 
RANGE_campaign_acceptance THEN DO;
3800976   +  IF  NOT MISSING(RANGE_Recency ) AND
3800977   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888 
THEN DO;
3800978   +    IF  NOT MISSING(MntCard_Games ) AND
3800979   +          0.34264637882203 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.34264637882203 <= MntCard_Games 
THEN DO;
3800980   +      _NODE_  =                   13;
MPRINT(SCORETABLES):   _NODE_ = 13;
3800981   +      _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3800982   +      P_DepVar0  =     0.10204081632653;
MPRINT(SCORETABLES):   P_DepVar0 = 0.10204081632653;
3800983   +      P_DepVar1  =     0.89795918367346;
MPRINT(SCORETABLES):   P_DepVar1 = 0.89795918367346;
3800984   +      Q_DepVar0  =     0.10204081632653;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.10204081632653;
3800985   +      Q_DepVar1  =     0.89795918367346;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.89795918367346;
3800986   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3800987   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3800988   +      END;
MPRINT(SCORETABLES):   END;
3800989   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3800990   +      _NODE_  =                   12;
MPRINT(SCORETABLES):   _NODE_ = 12;
3800991   +      _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3800992   +      P_DepVar0  =     0.54901960784313;
MPRINT(SCORETABLES):   P_DepVar0 = 0.54901960784313;
3800993   +      P_DepVar1  =     0.45098039215686;
MPRINT(SCORETABLES):   P_DepVar1 = 0.45098039215686;
3800994   +      Q_DepVar0  =     0.54901960784313;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.54901960784313;
3800995   +      Q_DepVar1  =     0.45098039215686;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.45098039215686;
3800996   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3800997   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3800998   +      END;
MPRINT(SCORETABLES):   END;
3800999   +    END;
MPRINT(SCORETABLES):   END;
3801000   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801001   +    IF  NOT MISSING(MntCard_Games ) AND
3801002   +          0.53849847374167 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.53849847374167 <= MntCard_Games 
THEN DO;
3801003   +      _NODE_  =                   15;
MPRINT(SCORETABLES):   _NODE_ = 15;
3801004   +      _LEAF_  =                    7;
MPRINT(SCORETABLES):   _LEAF_ = 7;
3801005   +      P_DepVar0  =                 0.45;
MPRINT(SCORETABLES):   P_DepVar0 = 0.45;
3801006   +      P_DepVar1  =                 0.55;
MPRINT(SCORETABLES):   P_DepVar1 = 0.55;
3801007   +      Q_DepVar0  =                 0.45;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.45;
3801008   +      Q_DepVar1  =                 0.55;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.55;
3801009   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3801010   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3801011   +      END;
MPRINT(SCORETABLES):   END;
3801012   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801013   +      _NODE_  =                   14;
MPRINT(SCORETABLES):   _NODE_ = 14;
3801014   +      _LEAF_  =                    6;
MPRINT(SCORETABLES):   _LEAF_ = 6;
3801015   +      P_DepVar0  =     0.89298892988929;
MPRINT(SCORETABLES):   P_DepVar0 = 0.89298892988929;
3801016   +      P_DepVar1  =      0.1070110701107;
MPRINT(SCORETABLES):   P_DepVar1 = 0.1070110701107;
3801017   +      Q_DepVar0  =     0.89298892988929;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.89298892988929;
3801018   +      Q_DepVar1  =      0.1070110701107;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.1070110701107;
3801019   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3801020   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3801021   +      END;
MPRINT(SCORETABLES):   END;
3801022   +    END;
MPRINT(SCORETABLES):   END;
3801023   +  END;
MPRINT(SCORETABLES):   END;
3801024   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801025   +  IF  NOT MISSING(RANGE_Recency ) AND
3801026   +    RANGE_Recency  <     0.21717171717171 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.21717171717171 
THEN DO;
3801027   +    IF  NOT MISSING(MntCard_Games ) AND
3801028   +          0.49267885220125 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.49267885220125 <= MntCard_Games 
THEN DO;
3801029   +      _NODE_  =                    9;
MPRINT(SCORETABLES):   _NODE_ = 9;
3801030   +      _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3801031   +      P_DepVar0  =     0.41333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.41333333333333;
3801032   +      P_DepVar1  =     0.58666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.58666666666666;
3801033   +      Q_DepVar0  =     0.41333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.41333333333333;
3801034   +      Q_DepVar1  =     0.58666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.58666666666666;
3801035   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3801036   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3801037   +      END;
MPRINT(SCORETABLES):   END;
3801038   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801039   +      _NODE_  =                    8;
MPRINT(SCORETABLES):   _NODE_ = 8;
3801040   +      _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3801041   +      P_DepVar0  =     0.88821752265861;
MPRINT(SCORETABLES):   P_DepVar0 = 0.88821752265861;
3801042   +      P_DepVar1  =     0.11178247734138;
MPRINT(SCORETABLES):   P_DepVar1 = 0.11178247734138;
3801043   +      Q_DepVar0  =     0.88821752265861;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.88821752265861;
3801044   +      Q_DepVar1  =     0.11178247734138;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.11178247734138;
3801045   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3801046   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3801047   +      END;
MPRINT(SCORETABLES):   END;
3801048   +    END;
MPRINT(SCORETABLES):   END;
3801049   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801050   +    _NODE_  =                    5;
MPRINT(SCORETABLES):   _NODE_ = 5;
3801051   +    _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3801052   +    P_DepVar0  =     0.97602474864655;
MPRINT(SCORETABLES):   P_DepVar0 = 0.97602474864655;
3801053   +    P_DepVar1  =     0.02397525135344;
MPRINT(SCORETABLES):   P_DepVar1 = 0.02397525135344;
3801054   +    Q_DepVar0  =     0.97602474864655;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.97602474864655;
3801055   +    Q_DepVar1  =     0.02397525135344;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.02397525135344;
3801056   +    I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3801057   +    U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3801058   +    END;
MPRINT(SCORETABLES):   END;
3801059   +  END;
MPRINT(SCORETABLES):   END;
3801060   +
3801061   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3801062   +IF  F_DepVar  NE '0'
3801063   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3801064   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3801065   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3801066   + END;
MPRINT(SCORETABLES):   END;
3801067   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801068   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3801069   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3801070   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3801071   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3801072   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3801073   +       END;
MPRINT(SCORETABLES):   END;
3801074   + END;
MPRINT(SCORETABLES):   END;
3801075   +
3801076   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3801077   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3801078   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3801079   +
3801080   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3801081   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3801082   +* EndGrp: EndGroup;
MPRINT(SCORETABLES):   * EndGrp: EndGroup;
3801083   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3801084   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3801085   +* Group: ^(cv_var =5);
MPRINT(SCORETABLES):   * Group: ^(cv_var =5);
3801086   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3801087   +end;
MPRINT(SCORETABLES):   end;
3801088   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3801089   +* Grp: StartGroup;
MPRINT(SCORETABLES):   * Grp: StartGroup;
3801090   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3801091   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3801092   +* Group: ^(cv_var =6);
MPRINT(SCORETABLES):   * Group: ^(cv_var =6);
3801093   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3801094   +if (cv_var =6)  then do;
MPRINT(SCORETABLES):   if (cv_var =6) then do;
3801095   +_XVAL_=6;
MPRINT(SCORETABLES):   _XVAL_=6;
3801096   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3801097   +* Tree: DecisionTree;
MPRINT(SCORETABLES):   * Tree: DecisionTree;
3801098   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3801099   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3801100   +* Group: ^(cv_var =6);
MPRINT(SCORETABLES):   * Group: ^(cv_var =6);
3801101   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3801102   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3801103   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3801104   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3801105   +
3801106   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3801107   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3801108   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3801109   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3801110   +
3801111   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3801112   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3801113   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3801114   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3801115   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3801116   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3801117   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3801118   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3801119   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3801120   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3801121   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3801122   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3801123   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3801124   +
3801125   +
3801126   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3801127   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3801128   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3801129   +
3801130   +
3801131   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3801132   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3801133   +
3801134   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3801135   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3801136   +                 0.125 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <= 
RANGE_campaign_acceptance THEN DO;
3801137   +  IF  NOT MISSING(RANGE_Recency ) AND
3801138   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888 
THEN DO;
3801139   +    IF  NOT MISSING(MntCard_Games ) AND
3801140   +      MntCard_Games  <     0.27480595174713 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND MntCard_Games < 0.27480595174713 
THEN DO;
3801141   +      _NODE_  =                   12;
MPRINT(SCORETABLES):   _NODE_ = 12;
3801142   +      _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3801143   +      P_DepVar0  =     0.61333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.61333333333333;
3801144   +      P_DepVar1  =     0.38666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.38666666666666;
3801145   +      Q_DepVar0  =     0.61333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.61333333333333;
3801146   +      Q_DepVar1  =     0.38666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.38666666666666;
3801147   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3801148   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3801149   +      END;
MPRINT(SCORETABLES):   END;
3801150   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801151   +      _NODE_  =                   13;
MPRINT(SCORETABLES):   _NODE_ = 13;
3801152   +      _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3801153   +      P_DepVar0  =     0.15267175572519;
MPRINT(SCORETABLES):   P_DepVar0 = 0.15267175572519;
3801154   +      P_DepVar1  =      0.8473282442748;
MPRINT(SCORETABLES):   P_DepVar1 = 0.8473282442748;
3801155   +      Q_DepVar0  =     0.15267175572519;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.15267175572519;
3801156   +      Q_DepVar1  =      0.8473282442748;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.8473282442748;
3801157   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3801158   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3801159   +      END;
MPRINT(SCORETABLES):   END;
3801160   +    END;
MPRINT(SCORETABLES):   END;
3801161   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801162   +    _NODE_  =                    7;
MPRINT(SCORETABLES):   _NODE_ = 7;
3801163   +    _LEAF_  =                    6;
MPRINT(SCORETABLES):   _LEAF_ = 6;
3801164   +    P_DepVar0  =     0.84053156146179;
MPRINT(SCORETABLES):   P_DepVar0 = 0.84053156146179;
3801165   +    P_DepVar1  =      0.1594684385382;
MPRINT(SCORETABLES):   P_DepVar1 = 0.1594684385382;
3801166   +    Q_DepVar0  =     0.84053156146179;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.84053156146179;
3801167   +    Q_DepVar1  =      0.1594684385382;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.1594684385382;
3801168   +    I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3801169   +    U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3801170   +    END;
MPRINT(SCORETABLES):   END;
3801171   +  END;
MPRINT(SCORETABLES):   END;
3801172   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801173   +  IF  NOT MISSING(RANGE_Recency ) AND
3801174   +    RANGE_Recency  <     0.31818181818181 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.31818181818181 
THEN DO;
3801175   +    IF  NOT MISSING(MntCard_Games ) AND
3801176   +          0.49289501500272 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.49289501500272 <= MntCard_Games 
THEN DO;
3801177   +      _NODE_  =                    9;
MPRINT(SCORETABLES):   _NODE_ = 9;
3801178   +      _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3801179   +      P_DepVar0  =     0.48387096774193;
MPRINT(SCORETABLES):   P_DepVar0 = 0.48387096774193;
3801180   +      P_DepVar1  =     0.51612903225806;
MPRINT(SCORETABLES):   P_DepVar1 = 0.51612903225806;
3801181   +      Q_DepVar0  =     0.48387096774193;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.48387096774193;
3801182   +      Q_DepVar1  =     0.51612903225806;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.51612903225806;
3801183   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3801184   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3801185   +      END;
MPRINT(SCORETABLES):   END;
3801186   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801187   +      _NODE_  =                    8;
MPRINT(SCORETABLES):   _NODE_ = 8;
3801188   +      _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3801189   +      P_DepVar0  =     0.90557939914163;
MPRINT(SCORETABLES):   P_DepVar0 = 0.90557939914163;
3801190   +      P_DepVar1  =     0.09442060085836;
MPRINT(SCORETABLES):   P_DepVar1 = 0.09442060085836;
3801191   +      Q_DepVar0  =     0.90557939914163;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.90557939914163;
3801192   +      Q_DepVar1  =     0.09442060085836;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.09442060085836;
3801193   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3801194   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3801195   +      END;
MPRINT(SCORETABLES):   END;
3801196   +    END;
MPRINT(SCORETABLES):   END;
3801197   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801198   +    _NODE_  =                    5;
MPRINT(SCORETABLES):   _NODE_ = 5;
3801199   +    _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3801200   +    P_DepVar0  =     0.98922800718132;
MPRINT(SCORETABLES):   P_DepVar0 = 0.98922800718132;
3801201   +    P_DepVar1  =     0.01077199281867;
MPRINT(SCORETABLES):   P_DepVar1 = 0.01077199281867;
3801202   +    Q_DepVar0  =     0.98922800718132;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.98922800718132;
3801203   +    Q_DepVar1  =     0.01077199281867;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.01077199281867;
3801204   +    I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3801205   +    U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3801206   +    END;
MPRINT(SCORETABLES):   END;
3801207   +  END;
MPRINT(SCORETABLES):   END;
3801208   +
3801209   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3801210   +IF  F_DepVar  NE '0'
3801211   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3801212   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3801213   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3801214   + END;
MPRINT(SCORETABLES):   END;
3801215   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801216   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3801217   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3801218   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3801219   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3801220   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3801221   +       END;
MPRINT(SCORETABLES):   END;
3801222   + END;
MPRINT(SCORETABLES):   END;
3801223   +
3801224   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3801225   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3801226   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3801227   +
3801228   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3801229   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3801230   +* EndGrp: EndGroup;
MPRINT(SCORETABLES):   * EndGrp: EndGroup;
3801231   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3801232   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3801233   +* Group: ^(cv_var =6);
MPRINT(SCORETABLES):   * Group: ^(cv_var =6);
3801234   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3801235   +end;
MPRINT(SCORETABLES):   end;
3801236   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3801237   +* Grp: StartGroup;
MPRINT(SCORETABLES):   * Grp: StartGroup;
3801238   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3801239   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3801240   +* Group: ^(cv_var =7);
MPRINT(SCORETABLES):   * Group: ^(cv_var =7);
3801241   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3801242   +if (cv_var =7)  then do;
MPRINT(SCORETABLES):   if (cv_var =7) then do;
3801243   +_XVAL_=7;
MPRINT(SCORETABLES):   _XVAL_=7;
3801244   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3801245   +* Tree: DecisionTree;
MPRINT(SCORETABLES):   * Tree: DecisionTree;
3801246   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3801247   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3801248   +* Group: ^(cv_var =7);
MPRINT(SCORETABLES):   * Group: ^(cv_var =7);
3801249   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3801250   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3801251   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3801252   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3801253   +
3801254   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3801255   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3801256   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3801257   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3801258   +
3801259   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3801260   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3801261   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3801262   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3801263   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3801264   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3801265   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3801266   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3801267   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3801268   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3801269   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3801270   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3801271   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3801272   +
3801273   +
3801274   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3801275   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3801276   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3801277   +
3801278   +
3801279   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3801280   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3801281   +
3801282   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3801283   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3801284   +                 0.125 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <= 
RANGE_campaign_acceptance THEN DO;
3801285   +  IF  NOT MISSING(RANGE_Recency ) AND
3801286   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888 
THEN DO;
3801287   +    IF  NOT MISSING(MntCard_Games ) AND
3801288   +      MntCard_Games  <     0.27480595174713 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND MntCard_Games < 0.27480595174713 
THEN DO;
3801289   +      _NODE_  =                   12;
MPRINT(SCORETABLES):   _NODE_ = 12;
3801290   +      _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3801291   +      P_DepVar0  =     0.63513513513513;
MPRINT(SCORETABLES):   P_DepVar0 = 0.63513513513513;
3801292   +      P_DepVar1  =     0.36486486486486;
MPRINT(SCORETABLES):   P_DepVar1 = 0.36486486486486;
3801293   +      Q_DepVar0  =     0.63513513513513;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.63513513513513;
3801294   +      Q_DepVar1  =     0.36486486486486;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.36486486486486;
3801295   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3801296   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3801297   +      END;
MPRINT(SCORETABLES):   END;
3801298   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801299   +      _NODE_  =                   13;
MPRINT(SCORETABLES):   _NODE_ = 13;
3801300   +      _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3801301   +      P_DepVar0  =            0.1484375;
MPRINT(SCORETABLES):   P_DepVar0 = 0.1484375;
3801302   +      P_DepVar1  =            0.8515625;
MPRINT(SCORETABLES):   P_DepVar1 = 0.8515625;
3801303   +      Q_DepVar0  =            0.1484375;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.1484375;
3801304   +      Q_DepVar1  =            0.8515625;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.8515625;
3801305   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3801306   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3801307   +      END;
MPRINT(SCORETABLES):   END;
3801308   +    END;
MPRINT(SCORETABLES):   END;
3801309   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801310   +    IF  NOT MISSING(MntCard_Games ) AND
3801311   +          0.53369735892484 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.53369735892484 <= MntCard_Games 
THEN DO;
3801312   +      _NODE_  =                   15;
MPRINT(SCORETABLES):   _NODE_ = 15;
3801313   +      _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3801314   +      P_DepVar0  =     0.45238095238095;
MPRINT(SCORETABLES):   P_DepVar0 = 0.45238095238095;
3801315   +      P_DepVar1  =     0.54761904761904;
MPRINT(SCORETABLES):   P_DepVar1 = 0.54761904761904;
3801316   +      Q_DepVar0  =     0.45238095238095;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.45238095238095;
3801317   +      Q_DepVar1  =     0.54761904761904;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.54761904761904;
3801318   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3801319   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3801320   +      END;
MPRINT(SCORETABLES):   END;
3801321   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801322   +      _NODE_  =                   14;
MPRINT(SCORETABLES):   _NODE_ = 14;
3801323   +      _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3801324   +      P_DepVar0  =     0.89694656488549;
MPRINT(SCORETABLES):   P_DepVar0 = 0.89694656488549;
3801325   +      P_DepVar1  =      0.1030534351145;
MPRINT(SCORETABLES):   P_DepVar1 = 0.1030534351145;
3801326   +      Q_DepVar0  =     0.89694656488549;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.89694656488549;
3801327   +      Q_DepVar1  =      0.1030534351145;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.1030534351145;
3801328   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3801329   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3801330   +      END;
MPRINT(SCORETABLES):   END;
3801331   +    END;
MPRINT(SCORETABLES):   END;
3801332   +  END;
MPRINT(SCORETABLES):   END;
3801333   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801334   +  _NODE_  =                    2;
MPRINT(SCORETABLES):   _NODE_ = 2;
3801335   +  _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3801336   +  P_DepVar0  =     0.93206197854588;
MPRINT(SCORETABLES):   P_DepVar0 = 0.93206197854588;
3801337   +  P_DepVar1  =     0.06793802145411;
MPRINT(SCORETABLES):   P_DepVar1 = 0.06793802145411;
3801338   +  Q_DepVar0  =     0.93206197854588;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.93206197854588;
3801339   +  Q_DepVar1  =     0.06793802145411;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.06793802145411;
3801340   +  I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3801341   +  U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3801342   +  END;
MPRINT(SCORETABLES):   END;
3801343   +
3801344   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3801345   +IF  F_DepVar  NE '0'
3801346   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3801347   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3801348   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3801349   + END;
MPRINT(SCORETABLES):   END;
3801350   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801351   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3801352   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3801353   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3801354   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3801355   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3801356   +       END;
MPRINT(SCORETABLES):   END;
3801357   + END;
MPRINT(SCORETABLES):   END;
3801358   +
3801359   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3801360   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3801361   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3801362   +
3801363   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3801364   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3801365   +* EndGrp: EndGroup;
MPRINT(SCORETABLES):   * EndGrp: EndGroup;
3801366   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3801367   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3801368   +* Group: ^(cv_var =7);
MPRINT(SCORETABLES):   * Group: ^(cv_var =7);
3801369   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3801370   +end;
MPRINT(SCORETABLES):   end;
3801371   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3801372   +* Grp: StartGroup;
MPRINT(SCORETABLES):   * Grp: StartGroup;
3801373   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3801374   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3801375   +* Group: ^(cv_var =8);
MPRINT(SCORETABLES):   * Group: ^(cv_var =8);
3801376   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3801377   +if (cv_var =8)  then do;
MPRINT(SCORETABLES):   if (cv_var =8) then do;
3801378   +_XVAL_=8;
MPRINT(SCORETABLES):   _XVAL_=8;
3801379   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3801380   +* Tree: DecisionTree;
MPRINT(SCORETABLES):   * Tree: DecisionTree;
3801381   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3801382   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3801383   +* Group: ^(cv_var =8);
MPRINT(SCORETABLES):   * Group: ^(cv_var =8);
3801384   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3801385   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3801386   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3801387   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3801388   +
3801389   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3801390   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3801391   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3801392   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3801393   +
3801394   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3801395   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3801396   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3801397   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3801398   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3801399   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3801400   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3801401   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3801402   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3801403   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3801404   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3801405   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3801406   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3801407   +
3801408   +
3801409   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3801410   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3801411   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3801412   +
3801413   +
3801414   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3801415   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3801416   +
3801417   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3801418   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3801419   +                 0.125 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <= 
RANGE_campaign_acceptance THEN DO;
3801420   +  IF  NOT MISSING(RANGE_Recency ) AND
3801421   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888 
THEN DO;
3801422   +    IF  NOT MISSING(MntCard_Games ) AND
3801423   +      MntCard_Games  <     0.27480595174713 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND MntCard_Games < 0.27480595174713 
THEN DO;
3801424   +      _NODE_  =                   12;
MPRINT(SCORETABLES):   _NODE_ = 12;
3801425   +      _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3801426   +      P_DepVar0  =                0.625;
MPRINT(SCORETABLES):   P_DepVar0 = 0.625;
3801427   +      P_DepVar1  =                0.375;
MPRINT(SCORETABLES):   P_DepVar1 = 0.375;
3801428   +      Q_DepVar0  =                0.625;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.625;
3801429   +      Q_DepVar1  =                0.375;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.375;
3801430   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3801431   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3801432   +      END;
MPRINT(SCORETABLES):   END;
3801433   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801434   +      _NODE_  =                   13;
MPRINT(SCORETABLES):   _NODE_ = 13;
3801435   +      _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3801436   +      P_DepVar0  =                 0.15;
MPRINT(SCORETABLES):   P_DepVar0 = 0.15;
3801437   +      P_DepVar1  =                 0.85;
MPRINT(SCORETABLES):   P_DepVar1 = 0.85;
3801438   +      Q_DepVar0  =                 0.15;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.15;
3801439   +      Q_DepVar1  =                 0.85;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.85;
3801440   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3801441   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3801442   +      END;
MPRINT(SCORETABLES):   END;
3801443   +    END;
MPRINT(SCORETABLES):   END;
3801444   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801445   +    IF  NOT MISSING(MntCard_Games ) AND
3801446   +          0.53369735892484 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.53369735892484 <= MntCard_Games 
THEN DO;
3801447   +      _NODE_  =                   15;
MPRINT(SCORETABLES):   _NODE_ = 15;
3801448   +      _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3801449   +      P_DepVar0  =     0.42222222222222;
MPRINT(SCORETABLES):   P_DepVar0 = 0.42222222222222;
3801450   +      P_DepVar1  =     0.57777777777777;
MPRINT(SCORETABLES):   P_DepVar1 = 0.57777777777777;
3801451   +      Q_DepVar0  =     0.42222222222222;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.42222222222222;
3801452   +      Q_DepVar1  =     0.57777777777777;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.57777777777777;
3801453   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3801454   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3801455   +      END;
MPRINT(SCORETABLES):   END;
3801456   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801457   +      _NODE_  =                   14;
MPRINT(SCORETABLES):   _NODE_ = 14;
3801458   +      _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3801459   +      P_DepVar0  =     0.89179104477611;
MPRINT(SCORETABLES):   P_DepVar0 = 0.89179104477611;
3801460   +      P_DepVar1  =     0.10820895522388;
MPRINT(SCORETABLES):   P_DepVar1 = 0.10820895522388;
3801461   +      Q_DepVar0  =     0.89179104477611;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.89179104477611;
3801462   +      Q_DepVar1  =     0.10820895522388;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.10820895522388;
3801463   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3801464   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3801465   +      END;
MPRINT(SCORETABLES):   END;
3801466   +    END;
MPRINT(SCORETABLES):   END;
3801467   +  END;
MPRINT(SCORETABLES):   END;
3801468   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801469   +  _NODE_  =                    2;
MPRINT(SCORETABLES):   _NODE_ = 2;
3801470   +  _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3801471   +  P_DepVar0  =     0.93177737881508;
MPRINT(SCORETABLES):   P_DepVar0 = 0.93177737881508;
3801472   +  P_DepVar1  =     0.06822262118491;
MPRINT(SCORETABLES):   P_DepVar1 = 0.06822262118491;
3801473   +  Q_DepVar0  =     0.93177737881508;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.93177737881508;
3801474   +  Q_DepVar1  =     0.06822262118491;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.06822262118491;
3801475   +  I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3801476   +  U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3801477   +  END;
MPRINT(SCORETABLES):   END;
3801478   +
3801479   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3801480   +IF  F_DepVar  NE '0'
3801481   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3801482   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3801483   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3801484   + END;
MPRINT(SCORETABLES):   END;
3801485   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801486   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3801487   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3801488   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3801489   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3801490   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3801491   +       END;
MPRINT(SCORETABLES):   END;
3801492   + END;
MPRINT(SCORETABLES):   END;
3801493   +
3801494   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3801495   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3801496   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3801497   +
3801498   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3801499   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3801500   +* EndGrp: EndGroup;
MPRINT(SCORETABLES):   * EndGrp: EndGroup;
3801501   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3801502   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3801503   +* Group: ^(cv_var =8);
MPRINT(SCORETABLES):   * Group: ^(cv_var =8);
3801504   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3801505   +end;
MPRINT(SCORETABLES):   end;
3801506   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3801507   +* Grp: StartGroup;
MPRINT(SCORETABLES):   * Grp: StartGroup;
3801508   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3801509   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3801510   +* Group: ^(cv_var =9);
MPRINT(SCORETABLES):   * Group: ^(cv_var =9);
3801511   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3801512   +if (cv_var =9)  then do;
MPRINT(SCORETABLES):   if (cv_var =9) then do;
3801513   +_XVAL_=9;
MPRINT(SCORETABLES):   _XVAL_=9;
3801514   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3801515   +* Tree: DecisionTree;
MPRINT(SCORETABLES):   * Tree: DecisionTree;
3801516   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3801517   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3801518   +* Group: ^(cv_var =9);
MPRINT(SCORETABLES):   * Group: ^(cv_var =9);
3801519   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3801520   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3801521   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3801522   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3801523   +
3801524   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3801525   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3801526   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3801527   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3801528   +
3801529   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3801530   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3801531   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3801532   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3801533   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3801534   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3801535   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3801536   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3801537   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3801538   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3801539   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3801540   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3801541   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3801542   +
3801543   +
3801544   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3801545   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3801546   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3801547   +
3801548   +
3801549   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3801550   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3801551   +
3801552   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3801553   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3801554   +                 0.125 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <= 
RANGE_campaign_acceptance THEN DO;
3801555   +  IF  NOT MISSING(RANGE_Recency ) AND
3801556   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888 
THEN DO;
3801557   +    IF  NOT MISSING(MntCard_Games ) AND
3801558   +      MntCard_Games  <     0.27193410616229 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND MntCard_Games < 0.27193410616229 
THEN DO;
3801559   +      _NODE_  =                   12;
MPRINT(SCORETABLES):   _NODE_ = 12;
3801560   +      _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3801561   +      P_DepVar0  =     0.68571428571428;
MPRINT(SCORETABLES):   P_DepVar0 = 0.68571428571428;
3801562   +      P_DepVar1  =     0.31428571428571;
MPRINT(SCORETABLES):   P_DepVar1 = 0.31428571428571;
3801563   +      Q_DepVar0  =     0.68571428571428;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.68571428571428;
3801564   +      Q_DepVar1  =     0.31428571428571;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.31428571428571;
3801565   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3801566   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3801567   +      END;
MPRINT(SCORETABLES):   END;
3801568   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801569   +      _NODE_  =                   13;
MPRINT(SCORETABLES):   _NODE_ = 13;
3801570   +      _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3801571   +      P_DepVar0  =     0.15447154471544;
MPRINT(SCORETABLES):   P_DepVar0 = 0.15447154471544;
3801572   +      P_DepVar1  =     0.84552845528455;
MPRINT(SCORETABLES):   P_DepVar1 = 0.84552845528455;
3801573   +      Q_DepVar0  =     0.15447154471544;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.15447154471544;
3801574   +      Q_DepVar1  =     0.84552845528455;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.84552845528455;
3801575   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3801576   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3801577   +      END;
MPRINT(SCORETABLES):   END;
3801578   +    END;
MPRINT(SCORETABLES):   END;
3801579   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801580   +    IF  NOT MISSING(MntCard_Games ) AND
3801581   +          0.53369735892484 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.53369735892484 <= MntCard_Games 
THEN DO;
3801582   +      _NODE_  =                   15;
MPRINT(SCORETABLES):   _NODE_ = 15;
3801583   +      _LEAF_  =                    7;
MPRINT(SCORETABLES):   _LEAF_ = 7;
3801584   +      P_DepVar0  =     0.44444444444444;
MPRINT(SCORETABLES):   P_DepVar0 = 0.44444444444444;
3801585   +      P_DepVar1  =     0.55555555555555;
MPRINT(SCORETABLES):   P_DepVar1 = 0.55555555555555;
3801586   +      Q_DepVar0  =     0.44444444444444;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.44444444444444;
3801587   +      Q_DepVar1  =     0.55555555555555;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.55555555555555;
3801588   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3801589   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3801590   +      END;
MPRINT(SCORETABLES):   END;
3801591   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801592   +      _NODE_  =                   14;
MPRINT(SCORETABLES):   _NODE_ = 14;
3801593   +      _LEAF_  =                    6;
MPRINT(SCORETABLES):   _LEAF_ = 6;
3801594   +      P_DepVar0  =      0.8941605839416;
MPRINT(SCORETABLES):   P_DepVar0 = 0.8941605839416;
3801595   +      P_DepVar1  =     0.10583941605839;
MPRINT(SCORETABLES):   P_DepVar1 = 0.10583941605839;
3801596   +      Q_DepVar0  =      0.8941605839416;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.8941605839416;
3801597   +      Q_DepVar1  =     0.10583941605839;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.10583941605839;
3801598   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3801599   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3801600   +      END;
MPRINT(SCORETABLES):   END;
3801601   +    END;
MPRINT(SCORETABLES):   END;
3801602   +  END;
MPRINT(SCORETABLES):   END;
3801603   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801604   +  IF  NOT MISSING(RANGE_Recency ) AND
3801605   +    RANGE_Recency  <      0.3080808080808 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.3080808080808 THEN 
DO;
3801606   +    IF  NOT MISSING(MntCard_Games ) AND
3801607   +          0.49289501500272 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.49289501500272 <= MntCard_Games 
THEN DO;
3801608   +      _NODE_  =                    9;
MPRINT(SCORETABLES):   _NODE_ = 9;
3801609   +      _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3801610   +      P_DepVar0  =     0.45833333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.45833333333333;
3801611   +      P_DepVar1  =     0.54166666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.54166666666666;
3801612   +      Q_DepVar0  =     0.45833333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.45833333333333;
3801613   +      Q_DepVar1  =     0.54166666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.54166666666666;
3801614   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3801615   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3801616   +      END;
MPRINT(SCORETABLES):   END;
3801617   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801618   +      _NODE_  =                    8;
MPRINT(SCORETABLES):   _NODE_ = 8;
3801619   +      _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3801620   +      P_DepVar0  =      0.8980044345898;
MPRINT(SCORETABLES):   P_DepVar0 = 0.8980044345898;
3801621   +      P_DepVar1  =     0.10199556541019;
MPRINT(SCORETABLES):   P_DepVar1 = 0.10199556541019;
3801622   +      Q_DepVar0  =      0.8980044345898;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.8980044345898;
3801623   +      Q_DepVar1  =     0.10199556541019;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.10199556541019;
3801624   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3801625   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3801626   +      END;
MPRINT(SCORETABLES):   END;
The SAS System

3801627   +    END;
MPRINT(SCORETABLES):   END;
3801628   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801629   +    _NODE_  =                    5;
MPRINT(SCORETABLES):   _NODE_ = 5;
3801630   +    _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3801631   +    P_DepVar0  =     0.98756660746003;
MPRINT(SCORETABLES):   P_DepVar0 = 0.98756660746003;
3801632   +    P_DepVar1  =     0.01243339253996;
MPRINT(SCORETABLES):   P_DepVar1 = 0.01243339253996;
3801633   +    Q_DepVar0  =     0.98756660746003;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.98756660746003;
3801634   +    Q_DepVar1  =     0.01243339253996;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.01243339253996;
3801635   +    I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3801636   +    U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3801637   +    END;
MPRINT(SCORETABLES):   END;
3801638   +  END;
MPRINT(SCORETABLES):   END;
3801639   +
3801640   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3801641   +IF  F_DepVar  NE '0'
3801642   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3801643   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3801644   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3801645   + END;
MPRINT(SCORETABLES):   END;
3801646   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801647   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3801648   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3801649   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3801650   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3801651   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3801652   +       END;
MPRINT(SCORETABLES):   END;
3801653   + END;
MPRINT(SCORETABLES):   END;
3801654   +
3801655   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3801656   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3801657   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3801658   +
3801659   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3801660   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3801661   +* EndGrp: EndGroup;
MPRINT(SCORETABLES):   * EndGrp: EndGroup;
3801662   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3801663   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3801664   +* Group: ^(cv_var =9);
MPRINT(SCORETABLES):   * Group: ^(cv_var =9);
3801665   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3801666   +end;
MPRINT(SCORETABLES):   end;
3801667   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3801668   +* Grp: StartGroup;
MPRINT(SCORETABLES):   * Grp: StartGroup;
3801669   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3801670   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3801671   +* Group: ^(cv_var =10);
MPRINT(SCORETABLES):   * Group: ^(cv_var =10);
3801672   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3801673   +if (cv_var =10)  then do;
MPRINT(SCORETABLES):   if (cv_var =10) then do;
3801674   +_XVAL_=10;
MPRINT(SCORETABLES):   _XVAL_=10;
3801675   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3801676   +* Tree: DecisionTree;
MPRINT(SCORETABLES):   * Tree: DecisionTree;
3801677   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3801678   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3801679   +* Group: ^(cv_var =10);
MPRINT(SCORETABLES):   * Group: ^(cv_var =10);
3801680   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3801681   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3801682   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3801683   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3801684   +
3801685   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3801686   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3801687   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3801688   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3801689   +
3801690   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3801691   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3801692   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3801693   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3801694   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3801695   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3801696   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3801697   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3801698   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3801699   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3801700   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3801701   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3801702   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3801703   +
3801704   +
3801705   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3801706   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3801707   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3801708   +
3801709   +
3801710   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3801711   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3801712   +
3801713   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3801714   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3801715   +                 0.125 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <= 
RANGE_campaign_acceptance THEN DO;
3801716   +  IF  NOT MISSING(RANGE_Recency ) AND
3801717   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888 
THEN DO;
3801718   +    IF  NOT MISSING(NumCatalogPurchases ) AND
3801719   +      NumCatalogPurchases  <     0.25320512820512 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND NumCatalogPurchases < 
0.25320512820512 THEN DO;
3801720   +      _NODE_  =                   12;
MPRINT(SCORETABLES):   _NODE_ = 12;
3801721   +      _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3801722   +      P_DepVar0  =     0.56701030927835;
MPRINT(SCORETABLES):   P_DepVar0 = 0.56701030927835;
3801723   +      P_DepVar1  =     0.43298969072164;
MPRINT(SCORETABLES):   P_DepVar1 = 0.43298969072164;
3801724   +      Q_DepVar0  =     0.56701030927835;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.56701030927835;
3801725   +      Q_DepVar1  =     0.43298969072164;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.43298969072164;
3801726   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3801727   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3801728   +      END;
MPRINT(SCORETABLES):   END;
3801729   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801730   +      _NODE_  =                   13;
MPRINT(SCORETABLES):   _NODE_ = 13;
3801731   +      _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3801732   +      P_DepVar0  =     0.11538461538461;
MPRINT(SCORETABLES):   P_DepVar0 = 0.11538461538461;
3801733   +      P_DepVar1  =     0.88461538461538;
MPRINT(SCORETABLES):   P_DepVar1 = 0.88461538461538;
3801734   +      Q_DepVar0  =     0.11538461538461;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.11538461538461;
3801735   +      Q_DepVar1  =     0.88461538461538;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.88461538461538;
3801736   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3801737   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3801738   +      END;
MPRINT(SCORETABLES):   END;
3801739   +    END;
MPRINT(SCORETABLES):   END;
3801740   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801741   +    IF  NOT MISSING(MntCard_Games ) AND
3801742   +          0.52461453744493 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.52461453744493 <= MntCard_Games 
THEN DO;
3801743   +      _NODE_  =                   15;
MPRINT(SCORETABLES):   _NODE_ = 15;
3801744   +      _LEAF_  =                    7;
MPRINT(SCORETABLES):   _LEAF_ = 7;
3801745   +      P_DepVar0  =     0.48979591836734;
MPRINT(SCORETABLES):   P_DepVar0 = 0.48979591836734;
3801746   +      P_DepVar1  =     0.51020408163265;
MPRINT(SCORETABLES):   P_DepVar1 = 0.51020408163265;
3801747   +      Q_DepVar0  =     0.48979591836734;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.48979591836734;
3801748   +      Q_DepVar1  =     0.51020408163265;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.51020408163265;
3801749   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3801750   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3801751   +      END;
MPRINT(SCORETABLES):   END;
3801752   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801753   +      _NODE_  =                   14;
MPRINT(SCORETABLES):   _NODE_ = 14;
3801754   +      _LEAF_  =                    6;
MPRINT(SCORETABLES):   _LEAF_ = 6;
3801755   +      P_DepVar0  =     0.89961389961389;
MPRINT(SCORETABLES):   P_DepVar0 = 0.89961389961389;
3801756   +      P_DepVar1  =      0.1003861003861;
MPRINT(SCORETABLES):   P_DepVar1 = 0.1003861003861;
3801757   +      Q_DepVar0  =     0.89961389961389;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.89961389961389;
3801758   +      Q_DepVar1  =      0.1003861003861;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.1003861003861;
3801759   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3801760   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3801761   +      END;
MPRINT(SCORETABLES):   END;
3801762   +    END;
MPRINT(SCORETABLES):   END;
3801763   +  END;
MPRINT(SCORETABLES):   END;
3801764   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801765   +  IF  NOT MISSING(RANGE_Recency ) AND
3801766   +    RANGE_Recency  <     0.27777777777777 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.27777777777777 
THEN DO;
3801767   +    IF  NOT MISSING(MntCard_Games ) AND
3801768   +          0.49289501500272 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.49289501500272 <= MntCard_Games 
THEN DO;
3801769   +      _NODE_  =                    9;
MPRINT(SCORETABLES):   _NODE_ = 9;
3801770   +      _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3801771   +      P_DepVar0  =     0.47126436781609;
MPRINT(SCORETABLES):   P_DepVar0 = 0.47126436781609;
3801772   +      P_DepVar1  =      0.5287356321839;
MPRINT(SCORETABLES):   P_DepVar1 = 0.5287356321839;
3801773   +      Q_DepVar0  =     0.47126436781609;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.47126436781609;
3801774   +      Q_DepVar1  =      0.5287356321839;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.5287356321839;
3801775   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3801776   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3801777   +      END;
MPRINT(SCORETABLES):   END;
3801778   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801779   +      _NODE_  =                    8;
MPRINT(SCORETABLES):   _NODE_ = 8;
3801780   +      _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3801781   +      P_DepVar0  =     0.88221153846153;
MPRINT(SCORETABLES):   P_DepVar0 = 0.88221153846153;
3801782   +      P_DepVar1  =     0.11778846153846;
MPRINT(SCORETABLES):   P_DepVar1 = 0.11778846153846;
3801783   +      Q_DepVar0  =     0.88221153846153;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.88221153846153;
3801784   +      Q_DepVar1  =     0.11778846153846;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.11778846153846;
3801785   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3801786   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3801787   +      END;
MPRINT(SCORETABLES):   END;
3801788   +    END;
MPRINT(SCORETABLES):   END;
3801789   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801790   +    _NODE_  =                    5;
MPRINT(SCORETABLES):   _NODE_ = 5;
3801791   +    _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3801792   +    P_DepVar0  =     0.98232323232323;
MPRINT(SCORETABLES):   P_DepVar0 = 0.98232323232323;
3801793   +    P_DepVar1  =     0.01767676767676;
MPRINT(SCORETABLES):   P_DepVar1 = 0.01767676767676;
3801794   +    Q_DepVar0  =     0.98232323232323;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.98232323232323;
3801795   +    Q_DepVar1  =     0.01767676767676;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.01767676767676;
3801796   +    I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3801797   +    U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3801798   +    END;
MPRINT(SCORETABLES):   END;
3801799   +  END;
MPRINT(SCORETABLES):   END;
3801800   +
3801801   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3801802   +IF  F_DepVar  NE '0'
3801803   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3801804   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3801805   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3801806   + END;
MPRINT(SCORETABLES):   END;
3801807   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3801808   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3801809   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3801810   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3801811   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3801812   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3801813   +       END;
MPRINT(SCORETABLES):   END;
3801814   + END;
MPRINT(SCORETABLES):   END;
3801815   +
3801816   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3801817   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3801818   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3801819   +
3801820   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3801821   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3801822   +* EndGrp: EndGroup;
MPRINT(SCORETABLES):   * EndGrp: EndGroup;
3801823   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3801824   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3801825   +* Group: ^(cv_var =10);
MPRINT(SCORETABLES):   * Group: ^(cv_var =10);
3801826   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3801827   +end;
MPRINT(SCORETABLES):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORETABLES):   run;

NOTE: DATA STEP view saved on file EMWS1.ENDGRP_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TRANS2_TRAIN.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.15 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.17 seconds
      

MPRINT(POSTLOOP):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End POSTLOOP: EndGrp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3801828    *------------------------------------------------------------*;
3801829    * End POSTLOOP: EndGrp;
3801830    *------------------------------------------------------------*;
3801831    

NOTE: There were 10 observations read from the data set EMWS1.GRP_EMLOOPINFO.
NOTE: The data set EMWS1.ENDGRP_EMLOOPINFO has 10 observations and 3 variables.
3801832    proc print data=EMWS1.EndGrp_EMLOOPINFO noobs label;
MPRINT(EM_DIAGRAM):    proc print data=EMWS1.EndGrp_EMLOOPINFO noobs label;
3801833    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_rptgroupsummary_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Group Summary";
MPRINT(EM_DIAGRAM):   run;
3801834    run;

NOTE: There were 10 observations read from the data set EMWS1.ENDGRP_EMLOOPINFO.
NOTE: The PROCEDURE PRINT printed page 2476.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3801835    title9;
MPRINT(EM_DIAGRAM):   title9;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS1.EndGrp_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if trim(F_DepVar) ^in("", ".") then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data WORK.OUTFITDATA;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
3801859    data EMWS1.EndGrp_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp_EMOUTFIT;
3801860    set WORK.OUTFITDATA;
MPRINT(EM_DIAGRAM):   set WORK.OUTFITDATA;
3801861    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.OUTFITDATA.
NOTE: The data set EMWS1.ENDGRP_EMOUTFIT has 1 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3801862    data EMWS1.EndGrp_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp_EMOUTFIT;
3801863    set EMWS1.EndGrp_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMOUTFIT;
3801864    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
3801865    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
3801865  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
3801866    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
3801867    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.ENDGRP_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP_EMOUTFIT has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3801868    proc sort data=EMWS1.EndGrp_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp_EMREPORTFIT nothreads;
3801869    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
3801870    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9 observations read from the data set EMWS1.ENDGRP_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3801871    %let _EMwarndup = 0;
3801872    %let _EMtargetdup =;
3801873    %let _EMASEtargetdup =;
3801874    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3801875    set EMWS1.EndGrp_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMOUTFIT;
3801876    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
3801877    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
3801878    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
3801879    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
3801880    end;
MPRINT(EM_DIAGRAM):   end;
3801881    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.ENDGRP_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3801882    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3801883    * EndGrp: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp: Computing metadata for TRAIN data;
3801884    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.ENDGRP_TRAIN.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp_TRAIN out=WORK.M2ZI2TMD noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2ZI2TMD;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2ZI2TMD(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2ZI2TMD;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2ZI2TMD;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1CVX0YJ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1CVX0YJ;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1CVX0YJ;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0CPG36O(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1CVX0YJ;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1CVX0YJ;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1CVX0YJ;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 
'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then 
do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 
'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1CVX0YJ;
MPRINT(EMADVISECOLUMNS):   set WORK.M1CVX0YJ;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Tree_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Tree_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "EndGrp";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "EndGrp";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "EndGrp";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "EndGrp";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "EndGrp";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
3802235    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
3802236    set EMWS1.EndGrp_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMINFO;
3802237    where DATA='EndGrp' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
3802238    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.ENDGRP_EMINFO.
      WHERE (DATA='EndGrp') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3802239    data EMWS1.EndGrp_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp_EMINFO;
3802240    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
3802241    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
3802242    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS1.ENDGRP_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
3802246    run;
3802247    data EMWS1.EndGrp_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp_EMINFO;
3802248    set EMWS1.EndGrp_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMINFO WORK.MODELTEMP_INFO;
3802249    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.ENDGRP_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3802250    proc sort data = EMWS1.EndGrp_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp_EMINFO NOTHREADS;
3802251    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3802252    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS1.ENDGRP_EMINFO.
NOTE: The data set EMWS1.ENDGRP_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3802253    proc sort data = EMWS1.Tree_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Tree_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
3802254    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3802255    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS1.TREE_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

3802256    proc sort data = EMWS1.EndGrp_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
3802257    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3802258    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3802259    data EMWS1.EndGrp_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp_EMINFO;
3802260    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
3802261    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3802262    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3802263    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
3802264    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
3802265    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
3802266    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS1.ENDGRP_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
      
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE 
or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 
8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= 
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=334;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13705375461633;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=2103;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86294624538366;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3802727    %let EMEXCEPTIONSTRING=;
3802728    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3802729    * POSTLOOPREPORT: EndGrp;
MPRINT(EM_DIAGRAM):   * POSTLOOPREPORT: EndGrp;
3802730    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3802731    %let EM_ACTION = POSTLOOPREPORT;
3802732    %let syscc = 0;
3802733    %macro main;
3802734       %if %upcase(&EM_ACTION) = TRAIN %then %do;
3802735    
3802736           filename temp catalog 'sashelp.emutil.endgp_train.source';
3802737           %include temp;
3802738           filename temp;
3802739    
3802740           %train;
3802741    
3802742       %end;
3802743       %else
3802744          %if %upcase(&EM_ACTION) = SCORE %then %do;
3802745    
3802746           filename temp catalog 'sashelp.emutil.endgp_score.source';
3802747           %include temp;
3802748           filename temp;
3802749    
3802750           %score;
3802751       %end;
3802752       %else
3802753       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
3802754    
3802755           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
3802756           %include temp;
3802757           filename temp;
3802758    
3802759           %postloop;
3802760    
3802761       %end;
3802762    
3802763       %doendm:
3802764    %mend main;
3802765    
3802766    %main;
MPRINT(EM_DIAGRAM):    
MPRINT(EM_DIAGRAM):  ;
3802767    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3802768    * End POSTLOOPREPORT: EndGrp;
MPRINT(EM_DIAGRAM):   * End POSTLOOPREPORT: EndGrp;
3802769    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3802770    

3802771    proc sort data=EMWS1.Tree_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Tree_CMeta_TRAIN out=WORK.SUBSETINMETA;
3802772    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3802773    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 25 observations read from the data set EMWS1.TREE_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 25 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3802774    proc sort data=EMWS1.EndGrp_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp_VariableSet out=WORK.SUBSETVARSET(keep=NAME 
REPORT);
3802775    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3802776    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 25 observations read from the data set EMWS1.ENDGRP_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 25 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3802777    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
3802778    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
3802779    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3802780    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 25 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 25 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 25 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3802781    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
3802782    set EMWS1.EndGrp_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_CMeta_TRAIN;
3802783    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
3802783  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 
'ASSESS', 'COST');
3802784    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 10 observations read from the data set EMWS1.ENDGRP_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 10 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3802785    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
3802786    set EMWS1.EndGrp_TRAIN(keep=
3802787    F_DepVar
3802788    I_DepVar
3802789    P_DepVar0
3802790    P_DepVar1
3802791    Q_DepVar0
3802792    Q_DepVar1
3802793    R_DepVar0
3802794    R_DepVar1
3802795    U_DepVar
3802796    _WARN_
3802797    DepVar
3802798    );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 
Q_DepVar0 Q_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
3802799    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2437 observations read from the data set EMWS1.EMCODE3_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.META_TRAIN.
NOTE: View EMWS1.ENDGRP_TRAIN.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
      
NOTE: There were 2437 observations read from the data set EMWS1.TRANS2_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.ENDGRP_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2437 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.15 seconds
      

MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.EndGrp_30UQ_SI nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.EndGrp_30UQ_SI;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32 
CORRECTTEXT $40 EVENT $32 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.EndGrp_30UQ_SI(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   retain EVENT '1';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.EndGrp_30UQ_SI;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.EndGrp_30UQ_SI;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_ 
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN 
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT = 
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;

MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;

MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;

MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;

MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing 
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE = 
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS 
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC 
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB 
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST 
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE 
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS 
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;

MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;

MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;

MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0 
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0 
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 - 
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.1370537546 _NEVENTS 
334 _NNONEVENTS 2103 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1 
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100 
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;

MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2437));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0107719928 OVLMAX 0.9186046512 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;

MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTLIFT = ((_NEVENTS+_NNONEVENTS) / 20) /AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2437 * 
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP / 
(2437/20)) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2437)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP /((20-GROUP+1)* 2437/20) ) / ( 
AVGNUMRESP / (2437/20))) - 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2437 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2437 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * 2437/20 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * 
((20-GROUP+1)* 2437/20));
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 - 
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 - 
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 - 
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 - 
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 - 
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 - 
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 - 
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 - 
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 - 
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 - 
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 - 
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 - 
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 - 
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 - 
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 - 
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 - 
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 - 
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 - 
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 - 
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5) 
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number 
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;

MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS = 
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE = 
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB = 
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP = 
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS 
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior 
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability" 
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative 
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS = 
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents" 
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound 
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage" 
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min 
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP = 
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS = 
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC 
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior 
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response" 
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of 
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative 
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC 
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative 
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best 
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift" 
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative % 
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift" 
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC = 
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
3807086    %let grouptarget=0;
3807087    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3807088    set EMWS1.Grp_EMLOOPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp_EMLOOPINFO;
3807089    if _TARGET_ ne "" then do;
MPRINT(EM_DIAGRAM):   if _TARGET_ ne "" then do;
3807090    call symput('grouptarget', '1');
MPRINT(EM_DIAGRAM):   call symput('grouptarget', '1');
3807091    stop;
MPRINT(EM_DIAGRAM):   stop;
3807092    end;
MPRINT(EM_DIAGRAM):   end;
3807093    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable _TARGET_ is uninitialized.
NOTE: There were 10 observations read from the data set EMWS1.GRP_EMLOOPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3807094    data work.EMOUTFIT;
MPRINT(EM_DIAGRAM):    data work.EMOUTFIT;
3807095    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3807096    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3807097    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3807097  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3807098    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3807099    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3807100    set EMWS1.EndGrp_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMOUTFIT;
3807101    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.ENDGRP_EMOUTFIT.
NOTE: The data set WORK.EMOUTFIT has 1 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3807102    data EMWS1.EndGrp_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp_EMOUTFIT_LOOP;
3807103    set EMWS1.EndGrp_EMOUTFIT_LOOP work.EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMOUTFIT_LOOP work.EMOUTFIT;
3807104    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 10 observations read from the data set EMWS1.ENDGRP_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP_EMOUTFIT_LOOP has 11 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3807105    data work.EMREPORTFIT;
MPRINT(EM_DIAGRAM):    data work.EMREPORTFIT;
3807106    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3807107    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3807108    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3807108  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3807109    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3807110    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3807111    set EMWS1.EndGrp_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMREPORTFIT;
3807112    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9 observations read from the data set EMWS1.ENDGRP_EMREPORTFIT.
NOTE: The data set WORK.EMREPORTFIT has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3807113    data EMWS1.EndGrp_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp_EMREPORTFIT_LOOP;
3807114    set EMWS1.EndGrp_EMREPORTFIT_LOOP work.EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMREPORTFIT_LOOP work.EMREPORTFIT;
3807115    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 80 observations read from the data set EMWS1.ENDGRP_EMREPORTFIT_LOOP.
NOTE: There were 9 observations read from the data set WORK.EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP_EMREPORTFIT_LOOP has 89 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3807116    data work.EMRANK;
MPRINT(EM_DIAGRAM):    data work.EMRANK;
3807117    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3807118    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3807119    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3807119  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3807120    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3807121    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3807122    set EMWS1.EndGrp_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMRANK;
3807123    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set EMWS1.ENDGRP_EMRANK.
NOTE: The data set WORK.EMRANK has 20 observations and 37 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3807124    data EMWS1.EndGrp_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp_EMRANK_LOOP;
3807125    set EMWS1.EndGrp_EMRANK_LOOP work.EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMRANK_LOOP work.EMRANK;
3807126    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 200 observations read from the data set EMWS1.ENDGRP_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.EMRANK.
NOTE: The data set EMWS1.ENDGRP_EMRANK_LOOP has 220 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3807127    data work.EMSCOREDIST;
MPRINT(EM_DIAGRAM):    data work.EMSCOREDIST;
3807128    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3807129    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3807130    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3807130  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3807131    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3807132    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3807133    set EMWS1.EndGrp_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMSCOREDIST;
3807134    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 14 observations read from the data set EMWS1.ENDGRP_EMSCOREDIST.
NOTE: The data set WORK.EMSCOREDIST has 14 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3807135    data EMWS1.EndGrp_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp_EMSCOREDIST_LOOP;
3807136    set EMWS1.EndGrp_EMSCOREDIST_LOOP work.EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMSCOREDIST_LOOP work.EMSCOREDIST;
3807137    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 57 observations read from the data set EMWS1.ENDGRP_EMSCOREDIST_LOOP.
NOTE: There were 14 observations read from the data set WORK.EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP_EMSCOREDIST_LOOP has 71 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3807138    data work.EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):    data work.EMCLASSIFICATION;
3807139    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3807140    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3807141    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3807141  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3807142    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3807143    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3807144    set EMWS1.EndGrp_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMCLASSIFICATION;
3807145    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS1.ENDGRP_EMCLASSIFICATION.
NOTE: The data set WORK.EMCLASSIFICATION has 4 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3807146    data EMWS1.EndGrp_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp_EMCLASSIFICATION_LOOP;
3807147    set EMWS1.EndGrp_EMCLASSIFICATION_LOOP work.EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMCLASSIFICATION_LOOP work.EMCLASSIFICATION;
3807148    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 40 observations read from the data set EMWS1.ENDGRP_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP_EMCLASSIFICATION_LOOP has 44 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3807149    proc sort data=EMWS1.EndGrp_EMCLASSIFICATION_LOOP out=_temp;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp_EMCLASSIFICATION_LOOP out=_temp;
3807150    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3807151    where _type_='PREDICTION' and correct and INTO ne '' and FROM ne '';
MPRINT(EM_DIAGRAM):   where _type_='PREDICTION' and correct and INTO ne '' and FROM ne '';
3807152    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set EMWS1.ENDGRP_EMCLASSIFICATION_LOOP.
      WHERE (_type_='PREDICTION') and correct and (INTO not = ' ') and (FROM not = ' ');
NOTE: The data set WORK._TEMP has 22 observations and 16 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

3807153    data _total(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL totalCount
3807153  ! totalPercent);
MPRINT(EM_DIAGRAM):   data _total(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL 
totalCount totalPercent);
3807154    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3807155    retain totalCount totalPercent;
MPRINT(EM_DIAGRAM):   retain totalCount totalPercent;
3807156    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3807157    if first._LOOP_ or first.modelid or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.modelid or first.target or first.datarole then 
do;
3807158    totalCount = count;
MPRINT(EM_DIAGRAM):   totalCount = count;
3807159    totalPercent = percent;
MPRINT(EM_DIAGRAM):   totalPercent = percent;
3807160    end;
MPRINT(EM_DIAGRAM):   end;
3807161    else do;
MPRINT(EM_DIAGRAM):   else do;
3807162    totalCount + count;
MPRINT(EM_DIAGRAM):   totalCount + count;
3807163    totalPercent + percent;
MPRINT(EM_DIAGRAM):   totalPercent + percent;
3807164    end;
MPRINT(EM_DIAGRAM):   end;
3807165    if last._LOOP_ or last.modelid or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.modelid or last.target or last.datarole then 
output;
3807166    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TOTAL has 11 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3807167    data _event(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL eventCount
3807167  ! eventPercent);
MPRINT(EM_DIAGRAM):   data _event(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL 
eventCount eventPercent);
3807168    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3807169    where strip(FROM) eq strip(EVENT);
MPRINT(EM_DIAGRAM):   where strip(FROM) eq strip(EVENT);
3807170    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3807171    if first._LOOP_ or first.modelid or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.modelid or first.target or first.datarole then 
do;
3807172    eventCount = count;
MPRINT(EM_DIAGRAM):   eventCount = count;
3807173    eventPercent = percent;
MPRINT(EM_DIAGRAM):   eventPercent = percent;
3807174    end;
MPRINT(EM_DIAGRAM):   end;
3807175    else do;
MPRINT(EM_DIAGRAM):   else do;
3807176    eventCount + count;
MPRINT(EM_DIAGRAM):   eventCount + count;
3807177    eventPercent + percent;
MPRINT(EM_DIAGRAM):   eventPercent + percent;
3807178    end;
MPRINT(EM_DIAGRAM):   end;
3807179    if last._LOOP_ or last.modelid or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.modelid or last.target or last.datarole then 
output;
3807180    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable first.modelid is uninitialized.
NOTE: Variable last.modelid is uninitialized.
NOTE: There were 11 observations read from the data set WORK._TEMP.
      WHERE STRIP(FROM)=STRIP(EVENT);
NOTE: The data set WORK._EVENT has 11 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3807181    data _nevent(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL neventCount
3807181  ! neventPercent);
MPRINT(EM_DIAGRAM):   data _nevent(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL 
neventCount neventPercent);
3807182    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3807183    retain neventCount neventPercent 0;
MPRINT(EM_DIAGRAM):   retain neventCount neventPercent 0;
3807184    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3807185    where strip(FROM) ne strip(EVENT);
MPRINT(EM_DIAGRAM):   where strip(FROM) ne strip(EVENT);
3807186    if first._LOOP_ or first.modelid or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.modelid or first.target or first.datarole then 
do;
3807187    neventCount = count;
MPRINT(EM_DIAGRAM):   neventCount = count;
3807188    neventPercent = percent;
MPRINT(EM_DIAGRAM):   neventPercent = percent;
3807189    end;
MPRINT(EM_DIAGRAM):   end;
3807190    else do;
MPRINT(EM_DIAGRAM):   else do;
3807191    neventCount + count;
MPRINT(EM_DIAGRAM):   neventCount + count;
3807192    neventPercent + percent;
MPRINT(EM_DIAGRAM):   neventPercent + percent;
3807193    end;
MPRINT(EM_DIAGRAM):   end;
3807194    if last._LOOP_ or last.modelid or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.modelid or last.target or last.datarole then 
output;
3807195    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP.
      WHERE STRIP(FROM) not = STRIP(EVENT);
NOTE: The data set WORK._NEVENT has 11 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3807196    data EMWS1.EndGrp_EMMISC_LOOP;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp_EMMISC_LOOP;
3807197    merge _total _event _nevent;
MPRINT(EM_DIAGRAM):   merge _total _event _nevent;
3807198    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3807199    label TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel,   NOQUOTE))"
3807199  ! targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
3807199  ! eventPercent = "%sysfunc(sasmsg(sashelp.dmine, assmt_pctEvent_vlabel,  NOQUOTE))"
3807200       eventCount = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,  NOQUOTE))"
3807200  ! neventPercent = "%sysfunc(sasmsg(sashelp.dmine, assmt_pctNEvent_vlabel, NOQUOTE))"
3807200  ! neventCount = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumNEvent_vlabel, NOQUOTE))"
3807201       totalPercent = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel,    NOQUOTE))"
3807201  !  totalCount = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalcount_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable" targetLabel = "Target Label" 
eventPercent = "Percentage of Events" eventCount = "Number of Events" neventPercent = 
"Percentage of Nonevents" neventCount = "Number of Nonevents" totalPercent = "Total 
Percentage" totalCount = "Total Count";
3807202    if neventCount = . then neventCount = 0;
MPRINT(EM_DIAGRAM):   if neventCount = . then neventCount = 0;
3807203    if eventCount = . then eventCount = 0;
MPRINT(EM_DIAGRAM):   if eventCount = . then eventCount = 0;
3807204    if neventPercent = . then neventPercent = 0;
MPRINT(EM_DIAGRAM):   if neventPercent = . then neventPercent = 0;
3807205    if eventPercent = . then eventPercent = 0;
MPRINT(EM_DIAGRAM):   if eventPercent = . then eventPercent = 0;
3807206    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK._TOTAL.
NOTE: There were 11 observations read from the data set WORK._EVENT.
NOTE: There were 11 observations read from the data set WORK._NEVENT.
NOTE: The data set EMWS1.ENDGRP_EMMISC_LOOP has 11 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

3807207    proc sort data=EMWS1.EndGrp_EMMISC_LOOP;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp_EMMISC_LOOP;
3807208    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3807209    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set EMWS1.ENDGRP_EMMISC_LOOP.
NOTE: The data set EMWS1.ENDGRP_EMMISC_LOOP has 11 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3807210    data work.EMEVENTREPORT;
MPRINT(EM_DIAGRAM):    data work.EMEVENTREPORT;
3807211    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3807212    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3807213    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3807213  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3807214    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3807215    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3807216    set EMWS1.EndGrp_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMEVENTREPORT;
3807217    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.ENDGRP_EMEVENTREPORT.
NOTE: The data set WORK.EMEVENTREPORT has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3807218    data EMWS1.EndGrp_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp_EMEVENTREPORT_LOOP;
3807219    set work.EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set work.EMEVENTREPORT;
3807220    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.EMEVENTREPORT.
NOTE: The data set EMWS1.ENDGRP_EMEVENTREPORT_LOOP has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3807221    %let _cn = %sysfunc(getoption(CENTER));
3807222    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3807223    proc print data=EMWS1.EndGrp_EMREPORTFIT_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp_EMREPORTFIT_LOOP noobs label;
3807224    var STAT LABEL TRAIN
3807225    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
3807226    by _WHERE_ notsorted TARGET notsorted TARGETLABEL notsorted;
MPRINT(EM_DIAGRAM):   by _WHERE_ notsorted TARGET notsorted TARGETLABEL notsorted;
3807227    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3807228    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
3807229    run;

NOTE: There were 89 observations read from the data set EMWS1.ENDGRP_EMREPORTFIT_LOOP.
NOTE: The PROCEDURE PRINT printed page 2477.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3807230    title10;
MPRINT(EM_DIAGRAM):   title10;
3807231    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3807232    proc sort data=EMWS1.EndGrp_EMCLASSIFICATION_LOOP nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp_EMCLASSIFICATION_LOOP nothreads;
3807233    by DATAROLE _WHERE_ TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE _WHERE_ TARGET TARGETLABEL;
3807234    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set EMWS1.ENDGRP_EMCLASSIFICATION_LOOP.
NOTE: The data set EMWS1.ENDGRP_EMCLASSIFICATION_LOOP has 44 observations and 16 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3807235    %let _cn = %sysfunc(getoption(CENTER));
3807236    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
3807237    proc print data=EMWS1.EndGrp_EMCLASSIFICATION_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp_EMCLASSIFICATION_LOOP noobs label;
3807238    var from into pct_row pct_col count percent
3807239    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
3807240    by DATAROLE _WHERE_ TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE _WHERE_ TARGET TARGETLABEL;
3807241    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
3807242    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
3807243    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
3807244    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
3807245    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
3807246    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
3807247    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
3807248    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3807249    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
3807250    run;

NOTE: There were 44 observations read from the data set EMWS1.ENDGRP_EMCLASSIFICATION_LOOP.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 2478.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

3807251    title9;
MPRINT(EM_DIAGRAM):   title9;
3807252    title10;
MPRINT(EM_DIAGRAM):   title10;
3807253    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3807254    %let _cn = %sysfunc(getoption(CENTER));
3807255    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3807256    data EMWS1.EndGrp_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp_EMEVENTREPORT_LOOP;
3807257    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
3807257  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT 
FALSEEVENT TRUEEVENT 8;
3807258    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3807258  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
3807258  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
3807258  ! FALSEEVENT
3807259    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
3807259  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
3807259  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
3807260       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target 
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True 
Positive" TRUENEVENT = "True Negative";
3807261    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
3807262    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
3807263    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
3807264    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
3807265    set EMWS1.EndGrp_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMEVENTREPORT_LOOP;
3807266    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.ENDGRP_EMEVENTREPORT_LOOP.
NOTE: The data set EMWS1.ENDGRP_EMEVENTREPORT_LOOP has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

3807267    proc print data=EMWS1.EndGrp_EMEVENTREPORT_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp_EMEVENTREPORT_LOOP noobs label;
3807268    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3807269    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted 
TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
3807270    by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted TARGETLABEL;
3807271    run;

NOTE: There were 1 observations read from the data set EMWS1.ENDGRP_EMEVENTREPORT_LOOP.
NOTE: The PROCEDURE PRINT printed page 2479.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3807272    title10;
MPRINT(EM_DIAGRAM):   title10;
3807273    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3807274    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3807275    modify EndGrp_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):   modify EndGrp_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3807276    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3807277    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3807277  ! ;
MPRINT(EM_DIAGRAM):   run;
3807278    run;

NOTE: MODIFY was successful for EMWS1.ENDGRP_EMRANK_LOOP.DATA.
3807279    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.06 seconds
      

3807280    %let _cn = %sysfunc(getoption(CENTER));
3807281    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3807282    proc print data=EMWS1.EndGrp_EMRANK_LOOP label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp_EMRANK_LOOP label noobs;
3807283    var
3807284    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
3807285    by
3807286    notsorted DATAROLE
3807287    notsorted _WHERE_
3807288    notsorted TARGET
3807289    notsorted TARGETLABEL
3807290    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted 
TARGETLABEL ;
3807291    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3807292    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
3807293    run;

NOTE: There were 220 observations read from the data set EMWS1.ENDGRP_EMRANK_LOOP.
NOTE: The PROCEDURE PRINT printed page 2480.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3807294    title10;
MPRINT(EM_DIAGRAM):   title10;
3807295    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3807296    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3807297    modify EndGrp_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):   modify EndGrp_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3807298    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
3807298  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3807299    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3807299  ! ;
MPRINT(EM_DIAGRAM):   run;
3807300    run;

NOTE: MODIFY was successful for EMWS1.ENDGRP_EMSCOREDIST_LOOP.DATA.
3807301    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      

3807302    %let _cn = %sysfunc(getoption(CENTER));
3807303    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3807304    proc print data=EMWS1.EndGrp_EMSCOREDIST_LOOP label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp_EMSCOREDIST_LOOP label noobs;
3807305    var
3807306    p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
3807307    by
3807308    notsorted DATAROLE
3807309    notsorted _WHERE_
3807310    notsorted TARGET
3807311    notsorted TARGETLABEL
3807312    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted 
TARGETLABEL ;
3807313    where TARGET in(
3807314    "DepVar"
3807315    );
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
3807316    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3807317    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoredistribution_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
3807318    run;

NOTE: There were 71 observations read from the data set EMWS1.ENDGRP_EMSCOREDIST_LOOP.
      WHERE TARGET='DepVar';
NOTE: The PROCEDURE PRINT printed page 2481.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3807319    title10;
MPRINT(EM_DIAGRAM):   title10;
3807320    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3807321    %let emexceptionstring =;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:10:31 o'clock" 
);
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:10:31 o'clock" 
);
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMRUNSTATUS.xml' encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp_EMREPORT;
MPRINT(EM_DIAGRAM):   length ID 8 KEY $30 VALUE $512;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='PROPERTIES';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="SETTINGS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp\TRAINPROPERTIES.xml";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="VARIABLES";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp_EMTRAINVARIABLE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="TOOLLOG";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp\EMLOG.log";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="TOOLOUTPUT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp\EMOUTPUT.out";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="NOTES";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp\EMNOTES.txt";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="FLOWCODE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="SASCODE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Scoring";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE="BAR";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="MISCLASSIFICATIONMANY";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp_EMMISC_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY="FREQ";
MPRINT(EM_DIAGRAM):   VALUE="TOTALPERCENT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE="BAR";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="FITSTATPLOT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp_EMOUTFIT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY="FREQ";
MPRINT(EM_DIAGRAM):   VALUE="_ANYNUMERIC_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='LATTICE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='LATTICETYPE';
MPRINT(EM_DIAGRAM):   VALUE='LINEPLOT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ASSESSRANKOVERLAY";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp_EMRANK_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="WHERE";
MPRINT(EM_DIAGRAM):   VALUE="TARGET='DepVar'";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="DECILE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="LIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="BASELIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="BESTLIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="LATTICEY";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='LATTICE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='LATTICETYPE';
MPRINT(EM_DIAGRAM):   VALUE='LINEPLOT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ASSESSSCOREDIST";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp_EMSCOREDIST_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="WHERE";
MPRINT(EM_DIAGRAM):   VALUE="TARGET='DepVar'";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="SCORE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="PERCENTAGEOFEVENTS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="PERCENTAGEOFNONEVENTS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="LATTICEX";
MPRINT(EM_DIAGRAM):   VALUE="DATAROLE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="LATTICEY";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="NROWS";
MPRINT(EM_DIAGRAM):   VALUE="1";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="REPORTFITSTAT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp_EMREPORTFIT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="eventratestat";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp_EMEVENTREPORT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="miningresult";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Gp";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp_EMLOOPINFO";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
