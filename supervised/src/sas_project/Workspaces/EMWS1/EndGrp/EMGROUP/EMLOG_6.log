*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                16:48:13 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:48:08 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                16:48:08 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2FHFYH2 "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2FHFYH2 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMGROUP\EMLOG_6.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:48:08 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMGROUP\EMOUTPUT_6.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:48:08 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
2052403    proc freq data=EMWS1.EndGrp_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.EndGrp_VariableSet noprint;
2052404    table ROLE*LEVEL/out=WORK.EndGrpMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.EndGrpMETA;
2052405    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set EMWS1.ENDGRP_VARIABLESET.
NOTE: The data set WORK.ENDGRPMETA has 11 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
 
 
2052406    proc print data=WORK.EndGrpMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrpMETA label noobs;
2052407    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
2052408    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
2052409    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2052410    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
2052411    run;
 
NOTE: There were 11 observations read from the data set WORK.ENDGRPMETA.
NOTE: The PROCEDURE PRINT printed page 1364.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2052412    title10;
MPRINT(EM_DIAGRAM):   title10;
2052413    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Tree_TRAIN EMWS1.Tree_TRAIN
EMWS1.Tree_TRAIN EMWS1.Tree_TRAIN EMWS1 Tree_TRAIN
EMWS1.Tree_TRAIN EMWS1.Tree_TRAIN
EMWS1.Tree_TRAIN EMWS1.Tree_TRAIN EMWS1 Tree_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Tree_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Tree_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
2052442    data WORK.EndGrp_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
2052443    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
2052444    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
2052445       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
2052446    set EMWS1.TREE_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.TREE_DEPVAR_DM( where=(_TYPE_="TARGET"));
2052447    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
2052448    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
2052449    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
2052450    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
2052451    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
2052452    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
2052453    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
2052454    end;
MPRINT(EM_DIAGRAM):   end;
2052455    output;
MPRINT(EM_DIAGRAM):   output;
2052456    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2052457    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2052458    proc print data=WORK.EndGrp_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp_EVENT noobs label;
2052459    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
2052460    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2052461    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
2052462    run;
 
NOTE: There were 1 observations read from the data set WORK.ENDGRP_EVENT.
NOTE: The PROCEDURE PRINT printed page 1365.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2052463    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
2052464    proc print data = EMWS1.Tree_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Tree_DepVar_DM noobs label;
2052465    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
2052466    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
2052467    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
2052468    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2052469    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
2052470    run;
 
NOTE: There were 7 observations read from the data set EMWS1.TREE_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 1366.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2052471    title10;
MPRINT(EM_DIAGRAM):   title10;
2052472    %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=292;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13394495412844;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=1888;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86605504587155;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Tree_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Tree_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Tree_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Tree_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
2052945    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2052946    * EndGrp: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * EndGrp: Generation of macros and macro variables;
2052947    * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
2052948    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
2052949    %let EMEXCEPTIONSTRING=;
2052950    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2052951    * TRAIN: EndGrp;
MPRINT(EM_DIAGRAM):   * TRAIN: EndGrp;
2052952    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2052953    %let EM_ACTION = TRAIN;
2052954    %let syscc = 0;
2052955    %macro main;
2052956       %if %upcase(&EM_ACTION) = TRAIN %then %do;
2052957
2052958           filename temp catalog 'sashelp.emutil.endgp_train.source';
2052959           %include temp;
2052960           filename temp;
2052961
2052962           %train;
2052963
2052964       %end;
2052965       %else
2052966          %if %upcase(&EM_ACTION) = SCORE %then %do;
2052967
2052968           filename temp catalog 'sashelp.emutil.endgp_score.source';
2052969           %include temp;
2052970           filename temp;
2052971
2052972           %score;
2052973       %end;
2052974       %else
2052975       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
2052976
2052977           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
2052978           %include temp;
2052979           filename temp;
2052980
2052981           %postloop;
2052982
2052983       %end;
2052984
2052985       %doendm:
2052986    %mend main;
2052987
2052988    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_TRAIN.SOURCE.
2052989   +%macro copyModelDs(model=, key=);
2052990   +   %let modelDs  = &em_lib..&model._&key;
2052991   +   %let reportDs = &em_lib..&em_nodeid._&key;
2052992   +   %if %sysfunc(exist(&modelDs)) %then %do;
2052993   +       data &reportDs;
2052994   +          length ModelId $16;
2052995   +          retain ModelId "&model";
2052996   +          set &modelDs;
2052997   +       run;
2052998   +   %end;
2052999   +%mend copyModelDs;
2053000   +
2053001   +%macro traintarget(groupid=);
2053002   +   %em_getname(key=emoutfit, type=DATA);
2053003   +   %let targetname=;
2053004   +   data _null_;
2053005   +     set &em_lib..&groupid._&looptype;
2053006   +     where _LOOP_ = &EMLOOPNUMBER;
2053007   +     call symput('targetname', strip(_TARGET_));
2053008   +   run;
2053009   +   %let modelId =;
2053010   +   data _null_;
2053011   +      set &em_import_data_eminfo;
2053012   +      where key = 'MODEL' and TARGET = "&targetname";
2053013   +      call symput('modelId',   strip(data));
2053014   +   run;
2053015   +   %if "&modelId" ne "" %then %do;
2053016   +       %copyModelDs(model=&modelid, key=EMRANK);
2053017   +       %copyModelDs(model=&modelid, key=EMSCOREDIST);
2053018   +       %copyModelDs(model=&modelid, key=EMOUTFIT);
2053019   +       %copyModelDs(model=&modelid, key=EMCLASSIFICATION);
2053020   +       %copyModelDs(model=&modelid, key=EMEVENREPORT);
2053021   +       %copyModelDs(model=&modelid, key=EMRESIDUALS);
2053022   +       %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2053023   +   %end;
2053024   +
2053025   +   %doendtgp:
2053026   +%mend;
2053027   +
2053028   +%macro trainboost(groupid=);
2053029   +
2053030   +   %let boostinfoDs  = &em_lib..%sysfunc(strip(&groupid))_boostinfo;
2053031   +   %let boostscoreDs = &em_lib..%sysfunc(strip(&groupid))_boostscore;
2053032   +
2053033   +   data _null_;
2053034   +      retain index 0;
2053035   +      set &boostinfoDs;
2053036   +      call symput('targetname', strip(_target_));
2053037   +   run;
2053038   +
2053039   +   %if "&em_import_data_eminfo" ne "" and %sysfunc(exist(&em_import_data_eminfo)) %then %do;
2053040   +       %let decmeta = ;
2053041   +       data _null_;
2053042   +          set &em_import_data_eminfo;
2053043   +          where (key='DECMETA' and TARGET="&targetname");
2053044   +          call symput('DECMETA', strip(data));
2053045   +       run;
2053046   +       %if "&decmeta" eq "" %then %do;
2053047   +           %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2053048   +           %goto doendtb;
2053049   +       %end;
2053050   +
2053051   +       %let predictedVars=;
2053052   +       data _null_;
2053053   +          set &decmeta;
2053054   +          if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
2053055   +          else
2053056   +          if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
2053057   +          else
2053058   +          if _TYPE_ = 'PREDICTED' then call symput('predictedvars', strip(symget('predictedVars'))!!' '!!strip(variable));
2053059   +       run;
2053060   +       %if %index(&EM_DEBUG, _ALL_) %then %do;
2053061   +           %put GROUPID: &GROUPID DECMETA: &DECMETA FROMVAR: &FROMVAR INTO: &INTOVAR PREDICTED: &PREDICTEDVARS;
2053062   +       %end;
2053063   +   %end;
2053064   +
2053065   +   * ;
2053066   +   * ENDGROUP &NODEID : Boosting scoring ;
2053067   +   * ;
2053068   +   data &em_lib..&groupid._boostscore;
2053069   +      set &em_import_data;
2053070   +      keep _WARN_ &targetname &fromvar &intovar &predictedvars;
2053071   +      %if "%em_freq" ne "" %then %do ;
2053072   +          keep %em_freq ;
2053073   +      %end ;
2053074   +   run;
2053075   +   %em_model(TARGET=&targetname , ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2053076   +
2053077   +   %doendtb:
2053078   +
2053079   +%mend trainboost;
2053080   +
2053081   +%macro trainbag(groupid=);
2053082   +   %let baginfoDs  = &em_lib..%sysfunc(strip(&groupid))_baginfo;
2053083   +   data _null_;
2053084   +      retain index 0;
2053085   +      set &baginfoDs;
2053086   +      call symput('targetname', strip(_target_));
2053087   +   run;
2053088   +
2053089   +   %let decmeta = ;
2053090   +   data _null_;
2053091   +       set &em_import_data_eminfo;
2053092   +       where (key='DECMETA' and TARGET="&targetname");
2053093   +       call symput('DECMETA', strip(data));
2053094   +   run;
2053095   +   %if "&decmeta" eq "" %then %do;
2053096   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2053097   +       %goto doendtg;
2053098   +   %end;
2053099   +
2053100   +   %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2053101   +
2053102   +   %doendtg:
2053103   +%mend trainbag;
2053104   +
2053105   +%macro traingroup(groupid=);
2053106   +   %let targetNum = 0;
2053107   +
2053108   +   data _temp1;
2053109   +      set &em_lib..&groupid._eminfo;
2053110   +      where key='MODEL';
2053111   +   run;
2053112   +   data _temp2;
2053113   +      set &em_import_data_eminfo;
2053114   +      where key='MODEL';
2053115   +   run;
2053116   +   proc sort data=_temp1; by TARGET DATA;
2053117   +   proc sort data=_temp2; by TARGET DATA;
2053118   +   data _temp2;
2053119   +      merge _temp1(in=_a) _temp2(in=_b);
2053120   +      by TARGET DATA;
2053121   +      if ^_a and _b then output;
2053122   +   run;
2053123   +   data _null_;
2053124   +      retain index 0;
2053125   +      set _temp2 end=eof;
2053126   +      index +1;
2053127   +      where key ='MODEL';
2053128   +      call symput('MODELID'!!strip(put(index, best.)), strip(data));
2053129   +      call symput('TARGET'!!strip(put(index, best.)), strip(target));
2053130   +      if eof then
2053131   +         call symput('targetnum', strip(put(index, best.)));
2053132   +   run;
2053133   +   proc datasets lib=work nolist;
2053134   +      delete _temp1 _temp2;
2053135   +   run;
2053136   +   %if "&targetNum" eq "0" %then %goto doendtgp;
2053137   +
2053138   +   %let modelString =;
2053139   +   %do i=1 %to &targetnum;
2053140   +        %if ^%sysfunc(indexw(&modelString, &&modelid&i)) %then %do;
2053141   +            %copyModelDs(model=&&modelid&i, key=EMRANK);
2053142   +            %copyModelDs(model=&&modelid&i, key=EMSCOREDIST);
2053143   +            %copyModelDs(model=&&modelid&i, key=EMOUTFIT);
2053144   +            %copyModelDs(model=&&modelid&i, key=EMCLASSIFICATION);
2053145   +            %copyModelDs(model=&&modelid&i, key=EMEVENREPORT);
2053146   +            %copyModelDs(model=&&modelid&i, key=EMRESIDUALS);
2053147   +            %let modelString = &modelString &&modelid&i;
2053148   +       %end;
2053149   +       %em_model(TARGET=&&target&i, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2053150   +   %end;
2053151   +
2053152   +   %doendtgp:
2053153   +
2053154   +%mend traingroup;
2053155   +
2053156   +%macro getSize(data=, nobsvar=);
2053157   +
2053158   +   %if %sysfunc(exist(&data, DATA)) %then %do;
2053159   +       %let dsid = %sysfunc(open(&data));
2053160   +       %if &dsid %then %do;
2053161   +           %let &&nobsvar = %sysfunc(attrn(&dsid, NLOBS));
2053162   +           %let dsid = %sysfunc(close(&dsid));
2053163   +       %end;
2053164   +   %end;
2053165   +    %if %sysfunc(exist(&data, VIEW)) %then %do;
2053166   +        proc sql;
2053167   +           reset noprint;
2053168   +           select count(*) into :&nobsvar from &data;
2053169   +        quit;
2053170   +   %end;
2053171   +
2053172   +%mend getsize;
2053173   +
2053174   +%macro train;
2053175   +
2053176   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %do;
2053177   +      %let EM_TOOLTYPE=UTILITY;
2053178   +      %if %sysfunc(exist(&em_data_eminfo)) %then %do;
2053179   +          proc delete data=&em_data_eminfo;
2053180   +          run;
2053181   +      %end;
2053182   +      %goto doendtr;
2053183   +   %end;
2053184   +
2053185   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
2053186   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2053187   +       %goto doendtr;
2053188   +   %end;
2053189   +
2053190   +   %let xgroupid = ;
2053191   +   data _null_;
2053192   +      set &em_import_data_eminfo;
2053193   +      where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
2053194   +      call symput('XGROUPID',  strip(data));
2053195   +      call symput('LOOPTYPE', strip(key));
2053196   +   run;
2053197   +
2053198   +   %if "&looptype" eq "BOOSTINFO" %then %do;
2053199   +       %let nDataObs=0;
2053200   +       %getSize(data=&em_import_data, nobsvar=nDataObs);
2053201   +
2053202   +       %let nStartObs=0;
2053203   +       %getsize(data=&em_lib..&xgroupid._train, nobsvar=nStartObs);
2053204   +
2053205   +       %if &nDataObs ne &nStartObs %then %do;
2053206   +           %let emexceptionstring = EMTOOL.BOOSTERRORNOBSCHANGED;
2053207   +           %goto doendtr;
2053208   +       %end;
2053209   +
2053210   +       %trainboost(groupid=&xgroupid);
2053211   +   %end;
2053212   +   %else
2053213   +   %if "&looptype" eq "BAGINFO" %then %do;
2053214   +       %trainbag(groupid=&xgroupid);
2053215   +   %end;
2053216   +   %else
2053217   +   %if "&looptype" eq "GROUPINFO" %then %do;
2053218   +       %traingroup(groupid=&xgroupid);
2053219   +   %end;
2053220   +   %else
2053221   +   %if "&looptype" eq "TARGETINFO" %then %do;
2053222   +       %traintarget(groupid=&xgroupid);
2053223   +   %end;
2053224   +
2053225   +   data &em_data_eminfo;
2053226   +      length TARGET KEY $32  DATA $43;
2053227   +      TARGET=''; KEY='ENDGROUP'; DATA="&em_nodeid"; output;
2053228   +   run;
2053229   +
2053230   +   %let EM_TOOLTYPE=MODEL;
2053231   +
2053232   +   %doendtr:
2053233   +
2053234   +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Tree_EMINFO;
MPRINT(TRAIN):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(TRAIN):   call symput('XGROUPID', strip(data));
MPRINT(TRAIN):   call symput('LOOPTYPE', strip(key));
MPRINT(TRAIN):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp1;
MPRINT(TRAINGROUP):   set EMWS1.Grp_eminfo;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.GRP_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   set EMWS1.Tree_EMINFO;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp1;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp2;
MPRINT(TRAINGROUP):   by TARGET DATA;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   merge _temp1(in=_a) _temp2(in=_b);
MPRINT(TRAINGROUP):   by TARGET DATA;
MPRINT(TRAINGROUP):   if ^_a and _b then output;
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _null_;
MPRINT(TRAINGROUP):   retain index 0;
MPRINT(TRAINGROUP):   set _temp2 end=eof;
MPRINT(TRAINGROUP):   index +1;
MPRINT(TRAINGROUP):   where key ='MODEL';
MPRINT(TRAINGROUP):   call symput('MODELID'!!strip(put(index, best.)), strip(data));
MPRINT(TRAINGROUP):   call symput('TARGET'!!strip(put(index, best.)), strip(target));
MPRINT(TRAINGROUP):   if eof then call symput('targetnum', strip(put(index, best.)));
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc datasets lib=work nolist;
MPRINT(TRAINGROUP):   delete _temp1 _temp2;
MPRINT(TRAINGROUP):   run;
 
NOTE: Deleting WORK._TEMP1 (memtype=DATA).
NOTE: Deleting WORK._TEMP2 (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(COPYMODELDS):   data EMWS1.EndGrp_EMRANK;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Tree";
MPRINT(COPYMODELDS):   set EMWS1.Tree_EMRANK;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.TREE_EMRANK.
NOTE: The data set EMWS1.ENDGRP_EMRANK has 20 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp_EMSCOREDIST;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Tree";
MPRINT(COPYMODELDS):   set EMWS1.Tree_EMSCOREDIST;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 6 observations read from the data set EMWS1.TREE_EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP_EMSCOREDIST has 6 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp_EMOUTFIT;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Tree";
MPRINT(COPYMODELDS):   set EMWS1.Tree_EMOUTFIT;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP_EMOUTFIT has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Tree";
MPRINT(COPYMODELDS):   set EMWS1.Tree_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.TREE_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   length DATA $65 TARGET $32 PREDICTED ASSESS DECSCORECODE FITSTATISTICS CLASSIFICATION RESIDUALS $1;
MPRINT(EM_MODEL):   data = "";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "N";
MPRINT(EM_MODEL):   decscorecode = "N";
MPRINT(EM_MODEL):   fitstatistics = "N";
MPRINT(EM_MODEL):   classification = "N";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   run;
 
NOTE: The data set WORK.EM_USER_MODEL has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.EndGrp_EMINFO;
MPRINT(TRAIN):   length TARGET KEY $32 DATA $43;
MPRINT(TRAIN):   TARGET='';
MPRINT(TRAIN):   KEY='ENDGROUP';
MPRINT(TRAIN):   DATA="EndGrp";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   run;
 
NOTE: The data set EMWS1.ENDGRP_EMINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: EndGrp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2053235    *------------------------------------------------------------*;
2053236    * End TRAIN: EndGrp;
2053237    *------------------------------------------------------------*;
2053238
 
2053239    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2053240    * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
2053241    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2053242    ;
MPRINT(EM_DIAGRAM):   ;
2053243    ;
MPRINT(EM_DIAGRAM):   ;
2053244    ;
MPRINT(EM_DIAGRAM):   ;
2053245    ;
MPRINT(EM_DIAGRAM):   ;
2053246    quit;
MPRINT(EM_DIAGRAM):   quit;
2053247    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2053248    * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
2053249    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2053250    /*; *"; *'; */
2053251    ;
MPRINT(EM_DIAGRAM):   ;
2053252    run;
MPRINT(EM_DIAGRAM):   run;
2053253    quit;
MPRINT(EM_DIAGRAM):   quit;
2053254    /* Reset EM Options */
2053255    options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
2053256    options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
2053257    goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:48:10 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                16:48:10 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3FG4SBD "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3FG4SBD new;
MPRINT(EM_DIAGRAM):   run;
2053359    %let EMEXCEPTIONSTRING=;
2053360    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2053361    * SCORE: EndGrp;
MPRINT(EM_DIAGRAM):   * SCORE: EndGrp;
2053362    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2053363    %let EM_ACTION = SCORE;
2053364    %let syscc = 0;
2053365    %macro main;
2053366       %if %upcase(&EM_ACTION) = TRAIN %then %do;
2053367
2053368           filename temp catalog 'sashelp.emutil.endgp_train.source';
2053369           %include temp;
2053370           filename temp;
2053371
2053372           %train;
2053373
2053374       %end;
2053375       %else
2053376          %if %upcase(&EM_ACTION) = SCORE %then %do;
2053377
2053378           filename temp catalog 'sashelp.emutil.endgp_score.source';
2053379           %include temp;
2053380           filename temp;
2053381
2053382           %score;
2053383       %end;
2053384       %else
2053385       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
2053386
2053387           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
2053388           %include temp;
2053389           filename temp;
2053390
2053391           %postloop;
2053392
2053393       %end;
2053394
2053395       %doendm:
2053396    %mend main;
2053397
2053398    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_SCORE.SOURCE.
2053399   +%macro scoreTables(data=, out=, scoreref=, prescore=);
2053401   +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW))) %then %do;
2053402   +       data &out / view=&out;
2053403   +          set &data
2053405   +          %if "&prescore" = "Y" %then %do;
2053406   +              (obs=1)
2053407   +          %end;
2053409   +          ;
2053411   +          %inc &scoreref;
2053413   +          %if "&prescore" eq "Y" %then %do;
2053414   +              drop I_: R_:;
2053415   +          %end;
2053417   +       run;
2053418   +   %end;
2053420   +%mend scoretables;
2053422   +%macro boostbagcode(groupid=, type=, EnsembleIndex=);
2053423   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
2053424   +   data _null_;
2053425   +      retain index 0;
2053426   +      set &infoDs;
2053427   +      call symput('targetname', strip(_target_));
2053428   +      call symput('endloopnum', strip(_loop_));
2053429   +   run;
2053431   +   %let endgrp_decmeta=;
2053432   +   %let endgrp_decdata=;
2053434   +   data _null_;
2053435   +      set &em_import_data_eminfo;
2053436   +      where key in('MODEL', 'DECMETA', 'DECDATA') and TARGET="&targetname";
2053437   +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
2053438   +      else
2053439   +      if key='DECDATA' then call symput('ENDGRP_DECDATA', strip(data));
2053440   +      else call symput('MODELID', strip(data));
2053441   +   run;
2053443   +   %let headerString= Boosting;
2053444   +   %let prefixString= _BoostVar;
2053446   +   %if "&type" = "BAGINFO" %then %do;
2053447   +        %let headerString = Bagging;
2053448   +        %let prefixString= _BagVar;
2053449   +   %end;
2053451   +   %let targetType=;
2053452   +   %let predictedVars=;
2053453   +   data _null_;
2053454   +      retain index;
2053455   +      set &endgrp_decmeta end=eof;
2053456   +      length tempvar $200;
2053457   +      if _TYPE_='TARGET' then call symput('TARGETTYPE', strip(level));
2053458   +      else
2053459   +      if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
2053460   +      else
2053461   +      if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
2053462   +      else
2053463   +      if _TYPE_ = 'PREDICTED' then do;
2053464   +         index+1;
2053465   +         call symput('predvars'!!strip(put(index, best.)), strip(variable));
2053466   +         tempvar = strip("&em_nodeid")!!'_'!!strip(variable);
2053467   +         if length(tempvar)<=32 then call symput('tempvars'!!strip(put(index, best.)), strip(tempvar));
2053468   +         else call symput('tempvars'!!strip(put(index, best.)), strip("&prefixString")!!strip(put(index, best.)));
2053469   +      end;
2053470   +      if eof then
2053471   +         call symput('prednum', strip(put(index, best.)));
2053472   +   run;
2053474   +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
2053475   +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
2053477   +   filename loopflow "&em_user_loopflowcode";
2053478   +   filename looppub "&em_user_looppubcode";
2053480   +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
2053481   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
2053483   +   %if "&emloopnumber" = "1" %then %do;
2053484   +       data _null_;
2053485   +          rc = fdelete('loopflow');
2053486   +          rc = fdelete('looppub');
2053487   +       run;
2053488   +       data _null_;
2053489   +          file loopflow;
2053490   +          put "&em_codebar;";
2053491   +          put "* &em_nodeid: ;" ;
2053492   +          put "* User: &sysuserid;";
2053493   +          put "* Date: &sysdate: &systime;";
2053494   +          put "&em_codebar ;";
2053495   +          put "* Ensemble Code;";
2053496   +          put "&em_codebar ;";
2053497   +          put "* &headerString: Loop=1;";
2053498   +          put "* Temporary Variables;";
2053499   +          %do i= 1 %to &prednum;
2053500   +              put "drop &&tempvars&i;";
2053501   +              put "&&tempvars&i = 0;";
2053502   +          %end;
2053503   +       run;
2053504   +       %em_copyfile(infref=loopflow, outfref=looppub);
2053505   +   %end;
2053507   +   %let j=&emloopnumber;
2053508   +   %do i = 1 %to &loopcodenum;
2053509   +       %let fsourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
2053510   +       %let psourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
2053512   +       %if (&&loopnode&i eq &em_nodeid ) or
2053513   +           ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex )) %then %do;
2053514   +           data _null_;
2053515   +              file loopflow mod;
2053516   +              put "&em_codebar;";
2053517   +              put "* &&loopnode&i: &&loopdesc&i;" ;
2053518   +              put "* User: &sysuserid;";
2053519   +              put "* Date: &sysdate: &systime;";
2053520   +              put "* &headerString: Loop=&j;";
2053521   +              put "&em_codebar;";
2053522   +           run;
2053523   +           data _null_;
2053524   +              file looppub mod;
2053525   +              put "&em_codebar;";
2053526   +              put "* &&loopnode&i: &&loopdesc&i;" ;
2053527   +              put "* User: &sysuserid;";
2053528   +              put "* Date: &sysdate: &systime;";
2053529   +              put "* &headerString: Loop=&j;";
2053530   +              put "&em_codebar;";
2053531   +           run;
2053532   +       %end;
2053534   +       %if &&loopnode&i ne &em_nodeid %then %do;
2053535   +           %if (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex ) %then %do;
2053536   +               filename x catalog "&fsourceEntry";
2053537   +               %em_copyfile(infref=x, outfref=loopflow, append=Y);
2053538   +               filename x;
2053540   +               filename y catalog "&psourceEntry";
2053541   +               %em_copyfile(infref=y, outfref=looppub, append=Y);
2053542   +               filename y;
2053543   +           %end;
2053544   +       %end;
2053545   +       %else %do;
2053546   +           %if "&j" ne "1" %then %do;
2053547   +               %let weight = %eval(&j-1);
2053548   +               data _null_;
2053549   +                  file loopflow mod;
2053550   +                  put "&em_codebar;";
2053551   +                  %if "&j" ne "&endloopnum" %then %do;
2053552   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
2053553   +                  %end;
2053554   +                  %else %do;
2053555   +                      put "* &headerString: accumulate final probabilities;";
2053556   +                  %end;
2053557   +                  put "&em_codebar;";
2053558   +                  %do k=1 %to &prednum;
2053559   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
2053560   +                  %end;
2053561   +               run;
2053562   +               data _null_;
2053563   +                  file looppub mod;
2053564   +                  put "&em_codebar;";
2053565   +                  %if "&j" ne "&endloopnum" %then %do;
2053566   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
2053567   +                  %end;
2053568   +                  %else %do;
2053569   +                      put "* &headerString: accumulate final probabilities;";
2053570   +                  %end;
2053571   +                  %do k=1 %to &prednum;
2053572   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
2053573   +                  %end;
2053574   +               run;
2053575   +           %end;
2053576   +           %if "&j" ne "&endloopnum" %then %do;
2053577   +               data _null_;
2053578   +                  file loopflow mod;
2053579   +                  put "&em_codebar;";
2053580   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
2053581   +                  put "&em_codebar;";
2053582   +               %do k=1 %to &prednum;
2053583   +                  put "&&tempvars&k = &&predvars&k;";
2053584   +               %end;
2053585   +               run;
2053586   +               data _null_;
2053587   +                  file looppub mod;
2053588   +                  put "&em_codebar;";
2053589   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
2053590   +                  put "&em_codebar;";
2053591   +               %do k=1 %to &prednum;
2053592   +                   put "&&tempvars&k = &&predvars&k;";
2053593   +               %end;
2053594   +               run;
2053595   +           %end;
2053597   +       %end;
2053598   +   %end;
2053600   +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
2053601   +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
2053603   +   filename loopflow;
2053604   +   filename looppub;
2053605   +   filename empub;
2053607   +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
2053608   +   %let gpTrain=;
2053609   +   %let gpValidate=;
2053610   +   %let gpTest=;
2053612   +   data _null_;
2053613   +      set &groupImportDs;
2053614   +      select(upcase(port));
2053615   +          when('DATA')     call symput('gpTrain',    strip(dataset));
2053616   +          when('VALIDATE') call symput('gpValidate', strip(dataset));
2053617   +          when('TEST')     call symput('gpTest',     strip(dataset));
2053618   +       otherwise;
2053619   +      end;
2053620   +   run;
2053622   +   %if "&gpTrain" ne "" %then %do;
2053624   +       %scoreTables(data=&em_lib..&gpTrain,     out=&em_export_train,    scoreref=emflow, prescore=Y);
2053626   +       %if &targetType ne INTERVAL %then %do;
2053627   +           %makeClassificationVars(target=&targetname, data=&em_export_train, decmeta=&endgrp_decmeta, publish=N, fref=emflow);
2053628   +       %end;
2053630   +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
2053632   +       %let decflow = %sysfunc(Pathname(WORK))&em_dsep._decflow.sas;
2053634   +       %em_decidecode(data=&em_export_train , decdata=&ENDGRP_DECDATA , decmeta=&ENDGRP_DECMETA ,
2053635   +                                                           noresfile=, resfile=%nrbquote(&decflow));
2053637   +       filename _decflow "&decflow";
2053638   +       %em_copyfile(infref=_decflow, outfref=emflow, append=Y);
2053639   +       filename _decflow;
2053641   +   %end;
2053643   +   %if "&gpTrain" ne "" %then
2053644   +        %scoreTables(data=&em_lib..%sysfunc(strip(&gpTrain)),     out=&em_export_train,    scoreref=emflow);
2053645   +   %if "&gpValidate" ne "" %then
2053646   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),  out=&em_export_validate, scoreref=emflow);
2053647   +   %if "&gpTest" ne "" %then
2053648   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),      out=&em_export_test,     scoreref=emflow);
2053650   +   filename emflow;
2053652   +%mend boostbagcode;
2053654   +%macro score;
2053656   +   filename _dec catalog "sashelp.emutil.em_decidecode.source";
2053657   +   %inc _dec;
2053658   +   filename _dec;
2053660   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %goto doendpl;
2053662   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
2053663   +       %let emexceptionstring = nomodeltarget;
2053664   +       %goto doendpl;
2053665   +   %end;
2053667   +   %LET GROUPID=;
2053668   +   %let LOOPTYPE=;
2053669   +   data _null_;
2053670   +      set &em_import_data_eminfo;
2053671   +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
2053672   +      call symput('GROUPID',   strip(data));
2053673   +      call symput('LOOPTYPE', strip(key));
2053674   +   run;
2053676   +   %em_getname(key=PATH, type=DATA);
2053678   +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
2053679   +   %include temp;
2053680   +   filename temp;
2053682   +   %em_gettrainpath(NODEID=&em_nodeid, OUTPATH= score_path);
2053684   +   %if &emloopnumber = 1 and %sysfunc(exist(&em_user_path)) %then %do;
2053685   +       %let deleteString = &em_nodeid._path;
2053686   +       proc datasets lib=&em_lib nolist;
2053687   +          delete &deleteString;
2053688   +       run;
2053689   +       quit;
2053690   +   %end;
2053692   +   %if ^%sysfunc(exist(WORK.score_path)) %then %goto doendpl;
2053694   +   data score_path;
2053695   +      retain LOOPID &emloopnumber;
2053696   +      set score_path;
2053697   +   run;
2053699   +   proc append base=&em_user_path  data=score_path;
2053700   +   run;
2053702   +   %let EnsembleIndex=0;
2053703   +   data _null_;
2053704   +      retain index 0 ensembleIndex 0;
2053705   +      set score_Path end=eof;
2053706   +      if nodelabel = "&groupid" or index then do;
2053707   +         index + 1;
2053708   +         call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
2053709   +         call symput('loopdesc'!!strip(put(index, best.)), strip(component));
2053710   +      end;
2053711   +      if component='Ensemble' then ensembleIndex = index;
2053712   +      if eof then do;
2053713   +         call symput('loopcodenum', strip(put(index, best.)));
2053714   +         call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
2053715   +      end;
2053716   +   run;
2053718   +   proc datasets lib=work nolist;
2053719   +      delete score_Path;
2053720   +   run;
2053721   +   quit;
2053723   +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
2053724   +       %boostbagcode(groupid=&groupid, type=&looptype, EnsembleIndex=&EnsembleIndex);
2053726   +   %doendpl:
2053728   +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):   filename _dec catalog "sashelp.emutil.em_decidecode.source";
NOTE: %INCLUDE (level 1) file _DEC is file SASHELP.EMUTIL.EM_DECIDECODE.SOURCE.
2053729   +/*
2053730   +       MACRO: EM_DECIDECODE
2053731   +
2053732   +       PURPOSE: Generate EM Decide Score Code for non-interval target.
2053733   +       SUPPORT: Taiyeong Lee
2053734   +
2053735   +       HISTORY: 01OCT04 Initial code
2053736   +       NOTE:    All parameters are optional, call %EM_DECIDECODE()
2053737   +                to add the corresponding decision code
2053738   +
2053739   +*/
2053740   +
2053741   +
2053742   +%macro  EM_DECIDECODE(data= , decdata= , decmeta= , noresfile=, resfile=);
2053743   + %global m_data    m_decdata   m_decmeta  m_noresfile  m_resfile ;
2053744   +
2053745   +    %do;
2053746   +    %let m_data      = &data;
2053747   +    %let m_decdata   = &decdata;
2053748   +    %let m_decmeta   = &decmeta;
2053749   +    %let m_noresfile = &noresfile;
2053750   +    %let m_resfile   = &resfile;
2053751   +    dm "afa c=sashelp.emutil.decidecode.scl";
2053752   +  %end;
2053753   +%mend EM_DECIDECODE;
2053754   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename _dec;
NOTE: Fileref _DEC has been deassigned.
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Tree_EMINFO;
MPRINT(SCORE):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(SCORE):   call symput('GROUPID', strip(data));
MPRINT(SCORE):   call symput('LOOPTYPE', strip(key));
MPRINT(SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
2053755   +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
2053756   +   proc display c=sashelp.emcore.pathscorecode.scl;
2053757   +   run;
2053758   +%mend EM_GETTRAINPATH;
2053759   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
2053760    data score_path;
MPRINT(EM_GETTRAINPATH):   data score_path;
2053761    length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
2053762    nodelabel="FIMPORT";
MPRINT(EM_GETTRAINPATH):   nodelabel="FIMPORT";
2053763    parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
2053764    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2053765    component="FileImport";
MPRINT(EM_GETTRAINPATH):   component="FileImport";
2053766    tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
2053767    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2053768    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2053769    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2053770    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2053771    output;
MPRINT(EM_GETTRAINPATH):   output;
2053772    nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
2053773    parent="FIMPORT";
MPRINT(EM_GETTRAINPATH):   parent="FIMPORT";
2053774    description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
2053775    component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
2053776    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2053777    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2053778    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2053779    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2053780    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2053781    output;
MPRINT(EM_GETTRAINPATH):   output;
2053782    nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
2053783    parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
2053784    description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
2053785    component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
2053786    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2053787    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2053788    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2053789    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2053790    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2053791    output;
MPRINT(EM_GETTRAINPATH):   output;
2053792    nodelabel="EMCODE2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE2";
2053793    parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
2053794    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
2053795    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
2053796    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2053797    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2053798    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2053799    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2053800    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2053801    output;
MPRINT(EM_GETTRAINPATH):   output;
2053802    nodelabel="Meta2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta2";
2053803    parent="EMCODE2";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE2";
2053804    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
2053805    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
2053806    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2053807    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2053808    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2053809    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2053810    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2053811    output;
MPRINT(EM_GETTRAINPATH):   output;
2053812    nodelabel="EMCODE3";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE3";
2053813    parent="Meta2";
MPRINT(EM_GETTRAINPATH):   parent="Meta2";
2053814    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
2053815    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
2053816    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2053817    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2053818    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2053819    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2053820    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2053821    output;
MPRINT(EM_GETTRAINPATH):   output;
2053822    nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
2053823    parent="EMCODE3";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE3";
2053824    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
2053825    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
2053826    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2053827    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2053828    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2053829    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2053830    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2053831    output;
MPRINT(EM_GETTRAINPATH):   output;
2053832    nodelabel="Meta";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta";
2053833    parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
2053834    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
2053835    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
2053836    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2053837    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2053838    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2053839    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2053840    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2053841    output;
MPRINT(EM_GETTRAINPATH):   output;
2053842    nodelabel="Trans2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans2";
2053843    parent="Meta";
MPRINT(EM_GETTRAINPATH):   parent="Meta";
2053844    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
2053845    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
2053846    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2053847    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2053848    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2053849    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2053850    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2053851    output;
MPRINT(EM_GETTRAINPATH):   output;
2053852    nodelabel="Grp";
MPRINT(EM_GETTRAINPATH):   nodelabel="Grp";
2053853    parent="Trans2";
MPRINT(EM_GETTRAINPATH):   parent="Trans2";
2053854    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2053855    component="StartGroup";
MPRINT(EM_GETTRAINPATH):   component="StartGroup";
2053856    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2053857    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2053858    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2053859    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2053860    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2053861    output;
MPRINT(EM_GETTRAINPATH):   output;
2053862    nodelabel="Tree";
MPRINT(EM_GETTRAINPATH):   nodelabel="Tree";
2053863    parent="Grp";
MPRINT(EM_GETTRAINPATH):   parent="Grp";
2053864    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2053865    component="DecisionTree";
MPRINT(EM_GETTRAINPATH):   component="DecisionTree";
2053866    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
2053867    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2053868    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2053869    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2053870    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2053871    output;
MPRINT(EM_GETTRAINPATH):   output;
2053872    nodelabel="EndGrp";
MPRINT(EM_GETTRAINPATH):   nodelabel="EndGrp";
2053873    parent="Tree";
MPRINT(EM_GETTRAINPATH):   parent="Tree";
2053874    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2053875    component="EndGroup";
MPRINT(EM_GETTRAINPATH):   component="EndGroup";
2053876    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
2053877    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2053878    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2053879    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2053880    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2053881    output;
MPRINT(EM_GETTRAINPATH):   output;
2053882    run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK.SCORE_PATH has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(SCORE):  ;
MPRINT(SCORE):   data score_path;
MPRINT(SCORE):   retain LOOPID 6;
MPRINT(SCORE):   set score_path;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set WORK.SCORE_PATH has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc append base=EMWS1.EndGrp_PATH data=score_path;
MPRINT(SCORE):   run;
 
NOTE: Appending WORK.SCORE_PATH to EMWS1.ENDGRP_PATH.
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: 12 observations added.
NOTE: The data set EMWS1.ENDGRP_PATH has 72 observations and 10 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   retain index 0 ensembleIndex 0;
MPRINT(SCORE):   set score_Path end=eof;
MPRINT(SCORE):   if nodelabel = "Grp" or index then do;
MPRINT(SCORE):   index + 1;
MPRINT(SCORE):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(SCORE):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(SCORE):   end;
MPRINT(SCORE):   if component='Ensemble' then ensembleIndex = index;
MPRINT(SCORE):   if eof then do;
MPRINT(SCORE):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(SCORE):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(SCORE):   end;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc datasets lib=work nolist;
MPRINT(SCORE):   delete score_Path;
MPRINT(SCORE):   run;
 
NOTE: Deleting WORK.SCORE_PATH (memtype=DATA).
MPRINT(SCORE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: EndGrp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2053883    *------------------------------------------------------------*;
2053884    * End SCORE: EndGrp;
2053885    *------------------------------------------------------------*;
2053886
 
2053887    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2053888    * EndGrp: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * EndGrp: Scoring DATA data;
2053889    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2053890    data EMWS1.EndGrp_TRAIN
2053891    / view=EMWS1.EndGrp_TRAIN
2053892    ;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp_TRAIN / view=EMWS1.EndGrp_TRAIN ;
2053893    set EMWS1.Tree_TRAIN
2053894    ;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree_TRAIN ;
2053895    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.ENDGRP_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TREE_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2053896    quit;
 
2053898    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
2053899    * EndGrp: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp: Computing metadata for TRAIN data;
2053900    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.ENDGRP_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp_TRAIN out=WORK.M20T1KGI noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M20T1KGI;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M20T1KGI(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M20T1KGI;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M20T1KGI;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3I8HPRO NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3I8HPRO;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3I8HPRO;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M18AI_RG(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3I8HPRO;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3I8HPRO;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3I8HPRO;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3I8HPRO;
MPRINT(EMADVISECOLUMNS):   set WORK.M3I8HPRO;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Tree_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Tree_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2054246    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2054247    set EMWS1.EndGrp_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMINFO;
2054248    where DATA='EndGrp' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
2054249    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP_EMINFO.
      WHERE (DATA='EndGrp') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2054250    data EMWS1.EndGrp_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp_EMINFO;
2054251    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2054252    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2054253    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.ENDGRP_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
2054257    run;
2054258    data EMWS1.EndGrp_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp_EMINFO;
2054259    set EMWS1.EndGrp_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMINFO WORK.MODELTEMP_INFO;
2054260    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2054261    proc sort data = EMWS1.EndGrp_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp_EMINFO NOTHREADS;
2054262    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2054263    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP_EMINFO.
NOTE: The data set EMWS1.ENDGRP_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2054264    proc sort data = EMWS1.Tree_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Tree_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
2054265    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2054266    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.TREE_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2054267    proc sort data = EMWS1.EndGrp_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2054268    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2054269    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2054270    data EMWS1.EndGrp_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp_EMINFO;
2054271    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2054272    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2054273    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2054274    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2054275    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2054276    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2054277    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS1.ENDGRP_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:48:12 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                02 June 2018
Time:                16:48:12 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0D1RXJI "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0D1RXJI new;
MPRINT(EM_DIAGRAM):   run;
2054301    data EMWS1.EndGrp_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp_EMOUTFIT;
2054302    set EMWS1.EndGrp_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMOUTFIT;
2054303    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
2054304    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
2054305    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
2054306    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP_EMOUTFIT has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2054307    proc sort data=EMWS1.EndGrp_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp_EMREPORTFIT nothreads;
2054308    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
2054309    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP_EMREPORTFIT has 8 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2054310    %let _EMwarndup = 0;
2054311    %let _EMtargetdup =;
2054312    %let _EMASEtargetdup =;
2054313    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2054314    set EMWS1.EndGrp_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMOUTFIT;
2054315    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
2054316    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
2054317    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
2054318    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
2054319    end;
MPRINT(EM_DIAGRAM):   end;
2054320    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2054321    proc sort data=EMWS1.Tree_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Tree_CMeta_TRAIN out=WORK.SUBSETINMETA;
2054322    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2054323    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set EMWS1.TREE_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 23 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
2054324    proc sort data=EMWS1.EndGrp_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
2054325    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2054326    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set EMWS1.ENDGRP_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 23 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2054327    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
2054328    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
2054329    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2054330    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 23 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 23 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2054331    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2054332    set EMWS1.EndGrp_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_CMeta_TRAIN;
2054333    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
2054334    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.ENDGRP_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 10 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2054335    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2054336    set EMWS1.EndGrp_TRAIN(keep=
2054337    F_DepVar
2054338    I_DepVar
2054339    P_DepVar0
2054340    P_DepVar1
2054341    Q_DepVar0
2054342    Q_DepVar1
2054343    R_DepVar0
2054344    R_DepVar1
2054345    U_DepVar
2054346    _WARN_
2054347    DepVar
2054348    );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 Q_DepVar0 Q_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2054349    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2180 observations read from the data set EMWS1.GRP_TRAIN.
NOTE: View EMWS1.ENDGRP_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2180 observations read from the data set EMWS1.TREE_TRAIN.
NOTE: There were 2180 observations read from the data set EMWS1.ENDGRP_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2180 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
2058536    %let _cn = %sysfunc(getoption(CENTER));
2058537    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2058538    proc print data=EMWS1.EndGrp_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp_EMREPORTFIT noobs label;
2058539    var STAT LABEL TRAIN
2058540    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
2058541    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
2058542    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2058543    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
2058544    run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 1367.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2058545    title10;
MPRINT(EM_DIAGRAM):   title10;
2058546    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2058547    proc sort data=EMWS1.EndGrp_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp_EMCLASSIFICATION nothreads;
2058548    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2058549    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2058550    %let _cn = %sysfunc(getoption(CENTER));
2058551    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
2058552    proc print data=EMWS1.EndGrp_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp_EMCLASSIFICATION noobs label;
2058553    var from into pct_row pct_col count percent
2058554    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
2058555    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2058556    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
2058557    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
2058558    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
2058559    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
2058560    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
2058561    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
2058562    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
2058563    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2058564    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
2058565    run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 1368.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2058566    title9;
MPRINT(EM_DIAGRAM):   title9;
2058567    title10;
MPRINT(EM_DIAGRAM):   title10;
2058568    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2058569    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
2058570    modify EndGrp_EMRANK;
MPRINT(EM_DIAGRAM):   modify EndGrp_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2058571    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2058572    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
2058573    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP_EMRANK.DATA.
2058574    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
2058575    %let _cn = %sysfunc(getoption(CENTER));
2058576    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2058577    proc print data=EMWS1.EndGrp_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp_EMRANK label noobs;
2058578    var
2058579    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
2058580    by
2058581    notsorted DATAROLE
2058582    notsorted TARGET
2058583    notsorted TARGETLABEL
2058584    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
2058585    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2058586    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
2058587    run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP_EMRANK.
NOTE: The PROCEDURE PRINT printed page 1369.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2058588    title10;
MPRINT(EM_DIAGRAM):   title10;
2058589    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2058590    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
2058591    modify EndGrp_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify EndGrp_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2058592    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2058593    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
2058594    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP_EMSCOREDIST.DATA.
2058595    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.07 seconds
 
 
2058596    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2058597    set EMWS1.Grp_GROUPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp_GROUPINFO;
2058598    where _LOOP_=6;
MPRINT(EM_DIAGRAM):   where _LOOP_=6;
2058599    call symput('LOOP_WHERE', strip(_wheredesc_));
MPRINT(EM_DIAGRAM):   call symput('LOOP_WHERE', strip(_wheredesc_));
2058600    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP_GROUPINFO.
      WHERE _LOOP_=6;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2058601    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2058602    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2058603    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2058604    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2058605    set EMWS1.EndGrp_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMRANK;
2058606    _LOOP_ =6;
MPRINT(EM_DIAGRAM):   _LOOP_ =6;
2058607    _WHERE_ ="^(cv_var =6)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =6)";
2058608    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP_EMRANK.
NOTE: The data set WORK.TEMP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2058609    data EMWS1.EndGrp_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp_EMRANK_LOOP;
2058610    set EMWS1.EndGrp_EMRANK_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMRANK_LOOP temp;
2058611    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 100 observations read from the data set EMWS1.ENDGRP_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP_EMRANK_LOOP has 120 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2058612    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2058613    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2058614    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2058615    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2058616    set EMWS1.EndGrp_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMSCOREDIST;
2058617    _LOOP_ =6;
MPRINT(EM_DIAGRAM):   _LOOP_ =6;
2058618    _WHERE_ ="^(cv_var =6)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =6)";
2058619    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS1.ENDGRP_EMSCOREDIST.
NOTE: The data set WORK.TEMP has 6 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2058620    data EMWS1.EndGrp_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp_EMSCOREDIST_LOOP;
2058621    set EMWS1.EndGrp_EMSCOREDIST_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMSCOREDIST_LOOP temp;
2058622    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 30 observations read from the data set EMWS1.ENDGRP_EMSCOREDIST_LOOP.
NOTE: There were 6 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP_EMSCOREDIST_LOOP has 36 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2058623    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2058624    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2058625    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2058626    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2058627    set EMWS1.EndGrp_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMOUTFIT;
2058628    _LOOP_ =6;
MPRINT(EM_DIAGRAM):   _LOOP_ =6;
2058629    _WHERE_ ="^(cv_var =6)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =6)";
2058630    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP_EMOUTFIT.
NOTE: The data set WORK.TEMP has 1 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2058631    data EMWS1.EndGrp_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp_EMOUTFIT_LOOP;
2058632    set EMWS1.EndGrp_EMOUTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMOUTFIT_LOOP temp;
2058633    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS1.ENDGRP_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP_EMOUTFIT_LOOP has 6 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2058634    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2058635    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2058636    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2058637    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2058638    set EMWS1.EndGrp_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMREPORTFIT;
2058639    _LOOP_ =6;
MPRINT(EM_DIAGRAM):   _LOOP_ =6;
2058640    _WHERE_ ="^(cv_var =6)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =6)";
2058641    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP_EMREPORTFIT.
NOTE: The data set WORK.TEMP has 8 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2058642    data EMWS1.EndGrp_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp_EMREPORTFIT_LOOP;
2058643    set EMWS1.EndGrp_EMREPORTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMREPORTFIT_LOOP temp;
2058644    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set EMWS1.ENDGRP_EMREPORTFIT_LOOP.
NOTE: There were 8 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP_EMREPORTFIT_LOOP has 48 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2058645    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2058646    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2058647    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2058648    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2058649    set EMWS1.EndGrp_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMCLASSIFICATION;
2058650    _LOOP_ =6;
MPRINT(EM_DIAGRAM):   _LOOP_ =6;
2058651    _WHERE_ ="^(cv_var =6)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =6)";
2058652    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP_EMCLASSIFICATION.
NOTE: The data set WORK.TEMP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2058653    data EMWS1.EndGrp_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp_EMCLASSIFICATION_LOOP;
2058654    set EMWS1.EndGrp_EMCLASSIFICATION_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMCLASSIFICATION_LOOP temp;
2058655    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP_EMCLASSIFICATION_LOOP has 24 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
