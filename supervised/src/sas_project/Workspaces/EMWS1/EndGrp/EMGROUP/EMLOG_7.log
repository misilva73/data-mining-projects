*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                16:52:07 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:52:02 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                16:52:02 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1BE5OC_ "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1BE5OC_ new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMGROUP\EMLOG_7.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:52:02 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMGROUP\EMOUTPUT_7.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:52:02 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
2386377    proc freq data=EMWS1.EndGrp_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.EndGrp_VariableSet noprint;
2386378    table ROLE*LEVEL/out=WORK.EndGrpMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.EndGrpMETA;
2386379    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set EMWS1.ENDGRP_VARIABLESET.
NOTE: The data set WORK.ENDGRPMETA has 11 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
 
 
2386380    proc print data=WORK.EndGrpMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrpMETA label noobs;
2386381    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
2386382    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
2386383    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2386384    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
2386385    run;
 
NOTE: There were 11 observations read from the data set WORK.ENDGRPMETA.
NOTE: The PROCEDURE PRINT printed page 1597.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2386386    title10;
MPRINT(EM_DIAGRAM):   title10;
2386387    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Tree_TRAIN EMWS1.Tree_TRAIN
EMWS1.Tree_TRAIN EMWS1.Tree_TRAIN EMWS1 Tree_TRAIN
EMWS1.Tree_TRAIN EMWS1.Tree_TRAIN
EMWS1.Tree_TRAIN EMWS1.Tree_TRAIN EMWS1 Tree_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Tree_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Tree_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
2386416    data WORK.EndGrp_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
2386417    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
2386418    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
2386419       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
2386420    set EMWS1.TREE_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.TREE_DEPVAR_DM( where=(_TYPE_="TARGET"));
2386421    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
2386422    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
2386423    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
2386424    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
2386425    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
2386426    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
2386427    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
2386428    end;
MPRINT(EM_DIAGRAM):   end;
2386429    output;
MPRINT(EM_DIAGRAM):   output;
2386430    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
2386431    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2386432    proc print data=WORK.EndGrp_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp_EVENT noobs label;
2386433    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
2386434    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2386435    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
2386436    run;
 
NOTE: There were 1 observations read from the data set WORK.ENDGRP_EVENT.
NOTE: The PROCEDURE PRINT printed page 1598.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2386437    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
2386438    proc print data = EMWS1.Tree_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Tree_DepVar_DM noobs label;
2386439    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
2386440    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
2386441    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
2386442    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2386443    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
2386444    run;
 
NOTE: There were 7 observations read from the data set EMWS1.TREE_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 1599.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2386445    title10;
MPRINT(EM_DIAGRAM):   title10;
2386446    %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=300;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13736263736263;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=1884;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86263736263736;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Tree_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Tree_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Tree_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Tree_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
2386919    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2386920    * EndGrp: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * EndGrp: Generation of macros and macro variables;
2386921    * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
2386922    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
2386923    %let EMEXCEPTIONSTRING=;
2386924    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2386925    * TRAIN: EndGrp;
MPRINT(EM_DIAGRAM):   * TRAIN: EndGrp;
2386926    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2386927    %let EM_ACTION = TRAIN;
2386928    %let syscc = 0;
2386929    %macro main;
2386930       %if %upcase(&EM_ACTION) = TRAIN %then %do;
2386931
2386932           filename temp catalog 'sashelp.emutil.endgp_train.source';
2386933           %include temp;
2386934           filename temp;
2386935
2386936           %train;
2386937
2386938       %end;
2386939       %else
2386940          %if %upcase(&EM_ACTION) = SCORE %then %do;
2386941
2386942           filename temp catalog 'sashelp.emutil.endgp_score.source';
2386943           %include temp;
2386944           filename temp;
2386945
2386946           %score;
2386947       %end;
2386948       %else
2386949       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
2386950
2386951           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
2386952           %include temp;
2386953           filename temp;
2386954
2386955           %postloop;
2386956
2386957       %end;
2386958
2386959       %doendm:
2386960    %mend main;
2386961
2386962    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_TRAIN.SOURCE.
2386963   +%macro copyModelDs(model=, key=);
2386964   +   %let modelDs  = &em_lib..&model._&key;
2386965   +   %let reportDs = &em_lib..&em_nodeid._&key;
2386966   +   %if %sysfunc(exist(&modelDs)) %then %do;
2386967   +       data &reportDs;
2386968   +          length ModelId $16;
2386969   +          retain ModelId "&model";
2386970   +          set &modelDs;
2386971   +       run;
2386972   +   %end;
2386973   +%mend copyModelDs;
2386974   +
2386975   +%macro traintarget(groupid=);
2386976   +   %em_getname(key=emoutfit, type=DATA);
2386977   +   %let targetname=;
2386978   +   data _null_;
2386979   +     set &em_lib..&groupid._&looptype;
2386980   +     where _LOOP_ = &EMLOOPNUMBER;
2386981   +     call symput('targetname', strip(_TARGET_));
2386982   +   run;
2386983   +   %let modelId =;
2386984   +   data _null_;
2386985   +      set &em_import_data_eminfo;
2386986   +      where key = 'MODEL' and TARGET = "&targetname";
2386987   +      call symput('modelId',   strip(data));
2386988   +   run;
2386989   +   %if "&modelId" ne "" %then %do;
2386990   +       %copyModelDs(model=&modelid, key=EMRANK);
2386991   +       %copyModelDs(model=&modelid, key=EMSCOREDIST);
2386992   +       %copyModelDs(model=&modelid, key=EMOUTFIT);
2386993   +       %copyModelDs(model=&modelid, key=EMCLASSIFICATION);
2386994   +       %copyModelDs(model=&modelid, key=EMEVENREPORT);
2386995   +       %copyModelDs(model=&modelid, key=EMRESIDUALS);
2386996   +       %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2386997   +   %end;
2386998   +
2386999   +   %doendtgp:
2387000   +%mend;
2387001   +
2387002   +%macro trainboost(groupid=);
2387003   +
2387004   +   %let boostinfoDs  = &em_lib..%sysfunc(strip(&groupid))_boostinfo;
2387005   +   %let boostscoreDs = &em_lib..%sysfunc(strip(&groupid))_boostscore;
2387006   +
2387007   +   data _null_;
2387008   +      retain index 0;
2387009   +      set &boostinfoDs;
2387010   +      call symput('targetname', strip(_target_));
2387011   +   run;
2387012   +
2387013   +   %if "&em_import_data_eminfo" ne "" and %sysfunc(exist(&em_import_data_eminfo)) %then %do;
2387014   +       %let decmeta = ;
2387015   +       data _null_;
2387016   +          set &em_import_data_eminfo;
2387017   +          where (key='DECMETA' and TARGET="&targetname");
2387018   +          call symput('DECMETA', strip(data));
2387019   +       run;
2387020   +       %if "&decmeta" eq "" %then %do;
2387021   +           %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2387022   +           %goto doendtb;
2387023   +       %end;
2387024   +
2387025   +       %let predictedVars=;
2387026   +       data _null_;
2387027   +          set &decmeta;
2387028   +          if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
2387029   +          else
2387030   +          if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
2387031   +          else
2387032   +          if _TYPE_ = 'PREDICTED' then call symput('predictedvars', strip(symget('predictedVars'))!!' '!!strip(variable));
2387033   +       run;
2387034   +       %if %index(&EM_DEBUG, _ALL_) %then %do;
2387035   +           %put GROUPID: &GROUPID DECMETA: &DECMETA FROMVAR: &FROMVAR INTO: &INTOVAR PREDICTED: &PREDICTEDVARS;
2387036   +       %end;
2387037   +   %end;
2387038   +
2387039   +   * ;
2387040   +   * ENDGROUP &NODEID : Boosting scoring ;
2387041   +   * ;
2387042   +   data &em_lib..&groupid._boostscore;
2387043   +      set &em_import_data;
2387044   +      keep _WARN_ &targetname &fromvar &intovar &predictedvars;
2387045   +      %if "%em_freq" ne "" %then %do ;
2387046   +          keep %em_freq ;
2387047   +      %end ;
2387048   +   run;
2387049   +   %em_model(TARGET=&targetname , ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2387050   +
2387051   +   %doendtb:
2387052   +
2387053   +%mend trainboost;
2387054   +
2387055   +%macro trainbag(groupid=);
2387056   +   %let baginfoDs  = &em_lib..%sysfunc(strip(&groupid))_baginfo;
2387057   +   data _null_;
2387058   +      retain index 0;
2387059   +      set &baginfoDs;
2387060   +      call symput('targetname', strip(_target_));
2387061   +   run;
2387062   +
2387063   +   %let decmeta = ;
2387064   +   data _null_;
2387065   +       set &em_import_data_eminfo;
2387066   +       where (key='DECMETA' and TARGET="&targetname");
2387067   +       call symput('DECMETA', strip(data));
2387068   +   run;
2387069   +   %if "&decmeta" eq "" %then %do;
2387070   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2387071   +       %goto doendtg;
2387072   +   %end;
2387073   +
2387074   +   %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2387075   +
2387076   +   %doendtg:
2387077   +%mend trainbag;
2387078   +
2387079   +%macro traingroup(groupid=);
2387080   +   %let targetNum = 0;
2387081   +
2387082   +   data _temp1;
2387083   +      set &em_lib..&groupid._eminfo;
2387084   +      where key='MODEL';
2387085   +   run;
2387086   +   data _temp2;
2387087   +      set &em_import_data_eminfo;
2387088   +      where key='MODEL';
2387089   +   run;
2387090   +   proc sort data=_temp1; by TARGET DATA;
2387091   +   proc sort data=_temp2; by TARGET DATA;
2387092   +   data _temp2;
2387093   +      merge _temp1(in=_a) _temp2(in=_b);
2387094   +      by TARGET DATA;
2387095   +      if ^_a and _b then output;
2387096   +   run;
2387097   +   data _null_;
2387098   +      retain index 0;
2387099   +      set _temp2 end=eof;
2387100   +      index +1;
2387101   +      where key ='MODEL';
2387102   +      call symput('MODELID'!!strip(put(index, best.)), strip(data));
2387103   +      call symput('TARGET'!!strip(put(index, best.)), strip(target));
2387104   +      if eof then
2387105   +         call symput('targetnum', strip(put(index, best.)));
2387106   +   run;
2387107   +   proc datasets lib=work nolist;
2387108   +      delete _temp1 _temp2;
2387109   +   run;
2387110   +   %if "&targetNum" eq "0" %then %goto doendtgp;
2387111   +
2387112   +   %let modelString =;
2387113   +   %do i=1 %to &targetnum;
2387114   +        %if ^%sysfunc(indexw(&modelString, &&modelid&i)) %then %do;
2387115   +            %copyModelDs(model=&&modelid&i, key=EMRANK);
2387116   +            %copyModelDs(model=&&modelid&i, key=EMSCOREDIST);
2387117   +            %copyModelDs(model=&&modelid&i, key=EMOUTFIT);
2387118   +            %copyModelDs(model=&&modelid&i, key=EMCLASSIFICATION);
2387119   +            %copyModelDs(model=&&modelid&i, key=EMEVENREPORT);
2387120   +            %copyModelDs(model=&&modelid&i, key=EMRESIDUALS);
2387121   +            %let modelString = &modelString &&modelid&i;
2387122   +       %end;
2387123   +       %em_model(TARGET=&&target&i, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2387124   +   %end;
2387125   +
2387126   +   %doendtgp:
2387127   +
2387128   +%mend traingroup;
2387129   +
2387130   +%macro getSize(data=, nobsvar=);
2387131   +
2387132   +   %if %sysfunc(exist(&data, DATA)) %then %do;
2387133   +       %let dsid = %sysfunc(open(&data));
2387134   +       %if &dsid %then %do;
2387135   +           %let &&nobsvar = %sysfunc(attrn(&dsid, NLOBS));
2387136   +           %let dsid = %sysfunc(close(&dsid));
2387137   +       %end;
2387138   +   %end;
2387139   +    %if %sysfunc(exist(&data, VIEW)) %then %do;
2387140   +        proc sql;
2387141   +           reset noprint;
2387142   +           select count(*) into :&nobsvar from &data;
2387143   +        quit;
2387144   +   %end;
2387145   +
2387146   +%mend getsize;
2387147   +
2387148   +%macro train;
2387149   +
2387150   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %do;
2387151   +      %let EM_TOOLTYPE=UTILITY;
2387152   +      %if %sysfunc(exist(&em_data_eminfo)) %then %do;
2387153   +          proc delete data=&em_data_eminfo;
2387154   +          run;
2387155   +      %end;
2387156   +      %goto doendtr;
2387157   +   %end;
2387158   +
2387159   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
2387160   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2387161   +       %goto doendtr;
2387162   +   %end;
2387163   +
2387164   +   %let xgroupid = ;
2387165   +   data _null_;
2387166   +      set &em_import_data_eminfo;
2387167   +      where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
2387168   +      call symput('XGROUPID',  strip(data));
2387169   +      call symput('LOOPTYPE', strip(key));
2387170   +   run;
2387171   +
2387172   +   %if "&looptype" eq "BOOSTINFO" %then %do;
2387173   +       %let nDataObs=0;
2387174   +       %getSize(data=&em_import_data, nobsvar=nDataObs);
2387175   +
2387176   +       %let nStartObs=0;
2387177   +       %getsize(data=&em_lib..&xgroupid._train, nobsvar=nStartObs);
2387178   +
2387179   +       %if &nDataObs ne &nStartObs %then %do;
2387180   +           %let emexceptionstring = EMTOOL.BOOSTERRORNOBSCHANGED;
2387181   +           %goto doendtr;
2387182   +       %end;
2387183   +
2387184   +       %trainboost(groupid=&xgroupid);
2387185   +   %end;
2387186   +   %else
2387187   +   %if "&looptype" eq "BAGINFO" %then %do;
2387188   +       %trainbag(groupid=&xgroupid);
2387189   +   %end;
2387190   +   %else
2387191   +   %if "&looptype" eq "GROUPINFO" %then %do;
2387192   +       %traingroup(groupid=&xgroupid);
2387193   +   %end;
2387194   +   %else
2387195   +   %if "&looptype" eq "TARGETINFO" %then %do;
2387196   +       %traintarget(groupid=&xgroupid);
2387197   +   %end;
2387198   +
2387199   +   data &em_data_eminfo;
2387200   +      length TARGET KEY $32  DATA $43;
2387201   +      TARGET=''; KEY='ENDGROUP'; DATA="&em_nodeid"; output;
2387202   +   run;
2387203   +
2387204   +   %let EM_TOOLTYPE=MODEL;
2387205   +
2387206   +   %doendtr:
2387207   +
2387208   +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Tree_EMINFO;
MPRINT(TRAIN):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(TRAIN):   call symput('XGROUPID', strip(data));
MPRINT(TRAIN):   call symput('LOOPTYPE', strip(key));
MPRINT(TRAIN):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp1;
MPRINT(TRAINGROUP):   set EMWS1.Grp_eminfo;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.GRP_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   set EMWS1.Tree_EMINFO;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp1;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp2;
MPRINT(TRAINGROUP):   by TARGET DATA;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   merge _temp1(in=_a) _temp2(in=_b);
MPRINT(TRAINGROUP):   by TARGET DATA;
MPRINT(TRAINGROUP):   if ^_a and _b then output;
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _null_;
MPRINT(TRAINGROUP):   retain index 0;
MPRINT(TRAINGROUP):   set _temp2 end=eof;
MPRINT(TRAINGROUP):   index +1;
MPRINT(TRAINGROUP):   where key ='MODEL';
MPRINT(TRAINGROUP):   call symput('MODELID'!!strip(put(index, best.)), strip(data));
MPRINT(TRAINGROUP):   call symput('TARGET'!!strip(put(index, best.)), strip(target));
MPRINT(TRAINGROUP):   if eof then call symput('targetnum', strip(put(index, best.)));
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   proc datasets lib=work nolist;
MPRINT(TRAINGROUP):   delete _temp1 _temp2;
MPRINT(TRAINGROUP):   run;
 
NOTE: Deleting WORK._TEMP1 (memtype=DATA).
NOTE: Deleting WORK._TEMP2 (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(COPYMODELDS):   data EMWS1.EndGrp_EMRANK;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Tree";
MPRINT(COPYMODELDS):   set EMWS1.Tree_EMRANK;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.TREE_EMRANK.
NOTE: The data set EMWS1.ENDGRP_EMRANK has 20 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp_EMSCOREDIST;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Tree";
MPRINT(COPYMODELDS):   set EMWS1.Tree_EMSCOREDIST;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 5 observations read from the data set EMWS1.TREE_EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP_EMSCOREDIST has 5 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp_EMOUTFIT;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Tree";
MPRINT(COPYMODELDS):   set EMWS1.Tree_EMOUTFIT;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP_EMOUTFIT has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Tree";
MPRINT(COPYMODELDS):   set EMWS1.Tree_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.TREE_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   length DATA $65 TARGET $32 PREDICTED ASSESS DECSCORECODE FITSTATISTICS CLASSIFICATION RESIDUALS $1;
MPRINT(EM_MODEL):   data = "";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "N";
MPRINT(EM_MODEL):   decscorecode = "N";
MPRINT(EM_MODEL):   fitstatistics = "N";
MPRINT(EM_MODEL):   classification = "N";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   run;
 
NOTE: The data set WORK.EM_USER_MODEL has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.EndGrp_EMINFO;
MPRINT(TRAIN):   length TARGET KEY $32 DATA $43;
MPRINT(TRAIN):   TARGET='';
MPRINT(TRAIN):   KEY='ENDGROUP';
MPRINT(TRAIN):   DATA="EndGrp";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   run;
 
NOTE: The data set EMWS1.ENDGRP_EMINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: EndGrp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2387209    *------------------------------------------------------------*;
2387210    * End TRAIN: EndGrp;
2387211    *------------------------------------------------------------*;
2387212
 
2387213    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2387214    * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
2387215    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2387216    ;
MPRINT(EM_DIAGRAM):   ;
2387217    ;
MPRINT(EM_DIAGRAM):   ;
2387218    ;
MPRINT(EM_DIAGRAM):   ;
2387219    ;
MPRINT(EM_DIAGRAM):   ;
2387220    quit;
MPRINT(EM_DIAGRAM):   quit;
2387221    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2387222    * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
2387223    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2387224    /*; *"; *'; */
2387225    ;
MPRINT(EM_DIAGRAM):   ;
2387226    run;
MPRINT(EM_DIAGRAM):   run;
2387227    quit;
MPRINT(EM_DIAGRAM):   quit;
2387228    /* Reset EM Options */
2387229    options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
2387230    options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
2387231    goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:52:05 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                16:52:05 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O09V0LVA "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O09V0LVA new;
MPRINT(EM_DIAGRAM):   run;
2387333    %let EMEXCEPTIONSTRING=;
2387334    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2387335    * SCORE: EndGrp;
MPRINT(EM_DIAGRAM):   * SCORE: EndGrp;
2387336    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2387337    %let EM_ACTION = SCORE;
2387338    %let syscc = 0;
2387339    %macro main;
2387340       %if %upcase(&EM_ACTION) = TRAIN %then %do;
2387341
2387342           filename temp catalog 'sashelp.emutil.endgp_train.source';
2387343           %include temp;
2387344           filename temp;
2387345
2387346           %train;
2387347
2387348       %end;
2387349       %else
2387350          %if %upcase(&EM_ACTION) = SCORE %then %do;
2387351
2387352           filename temp catalog 'sashelp.emutil.endgp_score.source';
2387353           %include temp;
2387354           filename temp;
2387355
2387356           %score;
2387357       %end;
2387358       %else
2387359       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
2387360
2387361           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
2387362           %include temp;
2387363           filename temp;
2387364
2387365           %postloop;
2387366
2387367       %end;
2387368
2387369       %doendm:
2387370    %mend main;
2387371
2387372    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_SCORE.SOURCE.
2387373   +%macro scoreTables(data=, out=, scoreref=, prescore=);
2387375   +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW))) %then %do;
2387376   +       data &out / view=&out;
2387377   +          set &data
2387379   +          %if "&prescore" = "Y" %then %do;
2387380   +              (obs=1)
2387381   +          %end;
2387383   +          ;
2387385   +          %inc &scoreref;
2387387   +          %if "&prescore" eq "Y" %then %do;
2387388   +              drop I_: R_:;
2387389   +          %end;
2387391   +       run;
2387392   +   %end;
2387394   +%mend scoretables;
2387396   +%macro boostbagcode(groupid=, type=, EnsembleIndex=);
2387397   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
2387398   +   data _null_;
2387399   +      retain index 0;
2387400   +      set &infoDs;
2387401   +      call symput('targetname', strip(_target_));
2387402   +      call symput('endloopnum', strip(_loop_));
2387403   +   run;
2387405   +   %let endgrp_decmeta=;
2387406   +   %let endgrp_decdata=;
2387408   +   data _null_;
2387409   +      set &em_import_data_eminfo;
2387410   +      where key in('MODEL', 'DECMETA', 'DECDATA') and TARGET="&targetname";
2387411   +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
2387412   +      else
2387413   +      if key='DECDATA' then call symput('ENDGRP_DECDATA', strip(data));
2387414   +      else call symput('MODELID', strip(data));
2387415   +   run;
2387417   +   %let headerString= Boosting;
2387418   +   %let prefixString= _BoostVar;
2387420   +   %if "&type" = "BAGINFO" %then %do;
2387421   +        %let headerString = Bagging;
2387422   +        %let prefixString= _BagVar;
2387423   +   %end;
2387425   +   %let targetType=;
2387426   +   %let predictedVars=;
2387427   +   data _null_;
2387428   +      retain index;
2387429   +      set &endgrp_decmeta end=eof;
2387430   +      length tempvar $200;
2387431   +      if _TYPE_='TARGET' then call symput('TARGETTYPE', strip(level));
2387432   +      else
2387433   +      if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
2387434   +      else
2387435   +      if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
2387436   +      else
2387437   +      if _TYPE_ = 'PREDICTED' then do;
2387438   +         index+1;
2387439   +         call symput('predvars'!!strip(put(index, best.)), strip(variable));
2387440   +         tempvar = strip("&em_nodeid")!!'_'!!strip(variable);
2387441   +         if length(tempvar)<=32 then call symput('tempvars'!!strip(put(index, best.)), strip(tempvar));
2387442   +         else call symput('tempvars'!!strip(put(index, best.)), strip("&prefixString")!!strip(put(index, best.)));
2387443   +      end;
2387444   +      if eof then
2387445   +         call symput('prednum', strip(put(index, best.)));
2387446   +   run;
2387448   +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
2387449   +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
2387451   +   filename loopflow "&em_user_loopflowcode";
2387452   +   filename looppub "&em_user_looppubcode";
2387454   +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
2387455   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
2387457   +   %if "&emloopnumber" = "1" %then %do;
2387458   +       data _null_;
2387459   +          rc = fdelete('loopflow');
2387460   +          rc = fdelete('looppub');
2387461   +       run;
2387462   +       data _null_;
2387463   +          file loopflow;
2387464   +          put "&em_codebar;";
2387465   +          put "* &em_nodeid: ;" ;
2387466   +          put "* User: &sysuserid;";
2387467   +          put "* Date: &sysdate: &systime;";
2387468   +          put "&em_codebar ;";
2387469   +          put "* Ensemble Code;";
2387470   +          put "&em_codebar ;";
2387471   +          put "* &headerString: Loop=1;";
2387472   +          put "* Temporary Variables;";
2387473   +          %do i= 1 %to &prednum;
2387474   +              put "drop &&tempvars&i;";
2387475   +              put "&&tempvars&i = 0;";
2387476   +          %end;
2387477   +       run;
2387478   +       %em_copyfile(infref=loopflow, outfref=looppub);
2387479   +   %end;
2387481   +   %let j=&emloopnumber;
2387482   +   %do i = 1 %to &loopcodenum;
2387483   +       %let fsourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
2387484   +       %let psourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
2387486   +       %if (&&loopnode&i eq &em_nodeid ) or
2387487   +           ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex )) %then %do;
2387488   +           data _null_;
2387489   +              file loopflow mod;
2387490   +              put "&em_codebar;";
2387491   +              put "* &&loopnode&i: &&loopdesc&i;" ;
2387492   +              put "* User: &sysuserid;";
2387493   +              put "* Date: &sysdate: &systime;";
2387494   +              put "* &headerString: Loop=&j;";
2387495   +              put "&em_codebar;";
2387496   +           run;
2387497   +           data _null_;
2387498   +              file looppub mod;
2387499   +              put "&em_codebar;";
2387500   +              put "* &&loopnode&i: &&loopdesc&i;" ;
2387501   +              put "* User: &sysuserid;";
2387502   +              put "* Date: &sysdate: &systime;";
2387503   +              put "* &headerString: Loop=&j;";
2387504   +              put "&em_codebar;";
2387505   +           run;
2387506   +       %end;
2387508   +       %if &&loopnode&i ne &em_nodeid %then %do;
2387509   +           %if (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex ) %then %do;
2387510   +               filename x catalog "&fsourceEntry";
2387511   +               %em_copyfile(infref=x, outfref=loopflow, append=Y);
2387512   +               filename x;
2387514   +               filename y catalog "&psourceEntry";
2387515   +               %em_copyfile(infref=y, outfref=looppub, append=Y);
2387516   +               filename y;
2387517   +           %end;
2387518   +       %end;
2387519   +       %else %do;
2387520   +           %if "&j" ne "1" %then %do;
2387521   +               %let weight = %eval(&j-1);
2387522   +               data _null_;
2387523   +                  file loopflow mod;
2387524   +                  put "&em_codebar;";
2387525   +                  %if "&j" ne "&endloopnum" %then %do;
2387526   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
2387527   +                  %end;
2387528   +                  %else %do;
2387529   +                      put "* &headerString: accumulate final probabilities;";
2387530   +                  %end;
2387531   +                  put "&em_codebar;";
2387532   +                  %do k=1 %to &prednum;
2387533   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
2387534   +                  %end;
2387535   +               run;
2387536   +               data _null_;
2387537   +                  file looppub mod;
2387538   +                  put "&em_codebar;";
2387539   +                  %if "&j" ne "&endloopnum" %then %do;
2387540   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
2387541   +                  %end;
2387542   +                  %else %do;
2387543   +                      put "* &headerString: accumulate final probabilities;";
2387544   +                  %end;
2387545   +                  %do k=1 %to &prednum;
2387546   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
2387547   +                  %end;
2387548   +               run;
2387549   +           %end;
2387550   +           %if "&j" ne "&endloopnum" %then %do;
2387551   +               data _null_;
2387552   +                  file loopflow mod;
2387553   +                  put "&em_codebar;";
2387554   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
2387555   +                  put "&em_codebar;";
2387556   +               %do k=1 %to &prednum;
2387557   +                  put "&&tempvars&k = &&predvars&k;";
2387558   +               %end;
2387559   +               run;
2387560   +               data _null_;
2387561   +                  file looppub mod;
2387562   +                  put "&em_codebar;";
2387563   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
2387564   +                  put "&em_codebar;";
2387565   +               %do k=1 %to &prednum;
2387566   +                   put "&&tempvars&k = &&predvars&k;";
2387567   +               %end;
2387568   +               run;
2387569   +           %end;
2387571   +       %end;
2387572   +   %end;
2387574   +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
2387575   +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
2387577   +   filename loopflow;
2387578   +   filename looppub;
2387579   +   filename empub;
2387581   +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
2387582   +   %let gpTrain=;
2387583   +   %let gpValidate=;
2387584   +   %let gpTest=;
2387586   +   data _null_;
2387587   +      set &groupImportDs;
2387588   +      select(upcase(port));
2387589   +          when('DATA')     call symput('gpTrain',    strip(dataset));
2387590   +          when('VALIDATE') call symput('gpValidate', strip(dataset));
2387591   +          when('TEST')     call symput('gpTest',     strip(dataset));
2387592   +       otherwise;
2387593   +      end;
2387594   +   run;
2387596   +   %if "&gpTrain" ne "" %then %do;
2387598   +       %scoreTables(data=&em_lib..&gpTrain,     out=&em_export_train,    scoreref=emflow, prescore=Y);
2387600   +       %if &targetType ne INTERVAL %then %do;
2387601   +           %makeClassificationVars(target=&targetname, data=&em_export_train, decmeta=&endgrp_decmeta, publish=N, fref=emflow);
2387602   +       %end;
2387604   +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
2387606   +       %let decflow = %sysfunc(Pathname(WORK))&em_dsep._decflow.sas;
2387608   +       %em_decidecode(data=&em_export_train , decdata=&ENDGRP_DECDATA , decmeta=&ENDGRP_DECMETA ,
2387609   +                                                           noresfile=, resfile=%nrbquote(&decflow));
2387611   +       filename _decflow "&decflow";
2387612   +       %em_copyfile(infref=_decflow, outfref=emflow, append=Y);
2387613   +       filename _decflow;
2387615   +   %end;
2387617   +   %if "&gpTrain" ne "" %then
2387618   +        %scoreTables(data=&em_lib..%sysfunc(strip(&gpTrain)),     out=&em_export_train,    scoreref=emflow);
2387619   +   %if "&gpValidate" ne "" %then
2387620   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),  out=&em_export_validate, scoreref=emflow);
2387621   +   %if "&gpTest" ne "" %then
2387622   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),      out=&em_export_test,     scoreref=emflow);
2387624   +   filename emflow;
2387626   +%mend boostbagcode;
2387628   +%macro score;
2387630   +   filename _dec catalog "sashelp.emutil.em_decidecode.source";
2387631   +   %inc _dec;
2387632   +   filename _dec;
2387634   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %goto doendpl;
2387636   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
2387637   +       %let emexceptionstring = nomodeltarget;
2387638   +       %goto doendpl;
2387639   +   %end;
2387641   +   %LET GROUPID=;
2387642   +   %let LOOPTYPE=;
2387643   +   data _null_;
2387644   +      set &em_import_data_eminfo;
2387645   +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
2387646   +      call symput('GROUPID',   strip(data));
2387647   +      call symput('LOOPTYPE', strip(key));
2387648   +   run;
2387650   +   %em_getname(key=PATH, type=DATA);
2387652   +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
2387653   +   %include temp;
2387654   +   filename temp;
2387656   +   %em_gettrainpath(NODEID=&em_nodeid, OUTPATH= score_path);
2387658   +   %if &emloopnumber = 1 and %sysfunc(exist(&em_user_path)) %then %do;
2387659   +       %let deleteString = &em_nodeid._path;
2387660   +       proc datasets lib=&em_lib nolist;
2387661   +          delete &deleteString;
2387662   +       run;
2387663   +       quit;
2387664   +   %end;
2387666   +   %if ^%sysfunc(exist(WORK.score_path)) %then %goto doendpl;
2387668   +   data score_path;
2387669   +      retain LOOPID &emloopnumber;
2387670   +      set score_path;
2387671   +   run;
2387673   +   proc append base=&em_user_path  data=score_path;
2387674   +   run;
2387676   +   %let EnsembleIndex=0;
2387677   +   data _null_;
2387678   +      retain index 0 ensembleIndex 0;
2387679   +      set score_Path end=eof;
2387680   +      if nodelabel = "&groupid" or index then do;
2387681   +         index + 1;
2387682   +         call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
2387683   +         call symput('loopdesc'!!strip(put(index, best.)), strip(component));
2387684   +      end;
2387685   +      if component='Ensemble' then ensembleIndex = index;
2387686   +      if eof then do;
2387687   +         call symput('loopcodenum', strip(put(index, best.)));
2387688   +         call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
2387689   +      end;
2387690   +   run;
2387692   +   proc datasets lib=work nolist;
2387693   +      delete score_Path;
2387694   +   run;
2387695   +   quit;
2387697   +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
2387698   +       %boostbagcode(groupid=&groupid, type=&looptype, EnsembleIndex=&EnsembleIndex);
2387700   +   %doendpl:
2387702   +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):   filename _dec catalog "sashelp.emutil.em_decidecode.source";
NOTE: %INCLUDE (level 1) file _DEC is file SASHELP.EMUTIL.EM_DECIDECODE.SOURCE.
2387703   +/*
2387704   +       MACRO: EM_DECIDECODE
2387705   +
2387706   +       PURPOSE: Generate EM Decide Score Code for non-interval target.
2387707   +       SUPPORT: Taiyeong Lee
2387708   +
2387709   +       HISTORY: 01OCT04 Initial code
2387710   +       NOTE:    All parameters are optional, call %EM_DECIDECODE()
2387711   +                to add the corresponding decision code
2387712   +
2387713   +*/
2387714   +
2387715   +
2387716   +%macro  EM_DECIDECODE(data= , decdata= , decmeta= , noresfile=, resfile=);
2387717   + %global m_data    m_decdata   m_decmeta  m_noresfile  m_resfile ;
2387718   +
2387719   +    %do;
2387720   +    %let m_data      = &data;
2387721   +    %let m_decdata   = &decdata;
2387722   +    %let m_decmeta   = &decmeta;
2387723   +    %let m_noresfile = &noresfile;
2387724   +    %let m_resfile   = &resfile;
2387725   +    dm "afa c=sashelp.emutil.decidecode.scl";
2387726   +  %end;
2387727   +%mend EM_DECIDECODE;
2387728   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename _dec;
NOTE: Fileref _DEC has been deassigned.
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Tree_EMINFO;
MPRINT(SCORE):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(SCORE):   call symput('GROUPID', strip(data));
MPRINT(SCORE):   call symput('LOOPTYPE', strip(key));
MPRINT(SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
2387729   +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
2387730   +   proc display c=sashelp.emcore.pathscorecode.scl;
2387731   +   run;
2387732   +%mend EM_GETTRAINPATH;
2387733   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
2387734    data score_path;
MPRINT(EM_GETTRAINPATH):   data score_path;
2387735    length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
2387736    nodelabel="FIMPORT";
MPRINT(EM_GETTRAINPATH):   nodelabel="FIMPORT";
2387737    parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
2387738    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2387739    component="FileImport";
MPRINT(EM_GETTRAINPATH):   component="FileImport";
2387740    tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
2387741    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2387742    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2387743    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2387744    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2387745    output;
MPRINT(EM_GETTRAINPATH):   output;
2387746    nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
2387747    parent="FIMPORT";
MPRINT(EM_GETTRAINPATH):   parent="FIMPORT";
2387748    description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
2387749    component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
2387750    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2387751    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2387752    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2387753    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2387754    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2387755    output;
MPRINT(EM_GETTRAINPATH):   output;
2387756    nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
2387757    parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
2387758    description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
2387759    component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
2387760    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2387761    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2387762    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2387763    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2387764    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2387765    output;
MPRINT(EM_GETTRAINPATH):   output;
2387766    nodelabel="EMCODE2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE2";
2387767    parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
2387768    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
2387769    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
2387770    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2387771    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2387772    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2387773    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2387774    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2387775    output;
MPRINT(EM_GETTRAINPATH):   output;
2387776    nodelabel="Meta2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta2";
2387777    parent="EMCODE2";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE2";
2387778    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
2387779    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
2387780    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2387781    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2387782    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2387783    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2387784    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2387785    output;
MPRINT(EM_GETTRAINPATH):   output;
2387786    nodelabel="EMCODE3";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE3";
2387787    parent="Meta2";
MPRINT(EM_GETTRAINPATH):   parent="Meta2";
2387788    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
2387789    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
2387790    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2387791    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2387792    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2387793    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2387794    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2387795    output;
MPRINT(EM_GETTRAINPATH):   output;
2387796    nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
2387797    parent="EMCODE3";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE3";
2387798    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
2387799    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
2387800    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2387801    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2387802    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2387803    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2387804    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2387805    output;
MPRINT(EM_GETTRAINPATH):   output;
2387806    nodelabel="Meta";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta";
2387807    parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
2387808    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
2387809    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
2387810    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2387811    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2387812    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2387813    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2387814    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2387815    output;
MPRINT(EM_GETTRAINPATH):   output;
2387816    nodelabel="Trans2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans2";
2387817    parent="Meta";
MPRINT(EM_GETTRAINPATH):   parent="Meta";
2387818    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
2387819    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
2387820    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2387821    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2387822    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2387823    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2387824    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2387825    output;
MPRINT(EM_GETTRAINPATH):   output;
2387826    nodelabel="Grp";
MPRINT(EM_GETTRAINPATH):   nodelabel="Grp";
2387827    parent="Trans2";
MPRINT(EM_GETTRAINPATH):   parent="Trans2";
2387828    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2387829    component="StartGroup";
MPRINT(EM_GETTRAINPATH):   component="StartGroup";
2387830    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2387831    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2387832    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2387833    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2387834    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2387835    output;
MPRINT(EM_GETTRAINPATH):   output;
2387836    nodelabel="Tree";
MPRINT(EM_GETTRAINPATH):   nodelabel="Tree";
2387837    parent="Grp";
MPRINT(EM_GETTRAINPATH):   parent="Grp";
2387838    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2387839    component="DecisionTree";
MPRINT(EM_GETTRAINPATH):   component="DecisionTree";
2387840    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
2387841    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2387842    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2387843    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2387844    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2387845    output;
MPRINT(EM_GETTRAINPATH):   output;
2387846    nodelabel="EndGrp";
MPRINT(EM_GETTRAINPATH):   nodelabel="EndGrp";
2387847    parent="Tree";
MPRINT(EM_GETTRAINPATH):   parent="Tree";
2387848    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2387849    component="EndGroup";
MPRINT(EM_GETTRAINPATH):   component="EndGroup";
2387850    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
2387851    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2387852    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2387853    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2387854    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2387855    output;
MPRINT(EM_GETTRAINPATH):   output;
2387856    run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK.SCORE_PATH has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(SCORE):  ;
MPRINT(SCORE):   data score_path;
MPRINT(SCORE):   retain LOOPID 7;
MPRINT(SCORE):   set score_path;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set WORK.SCORE_PATH has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc append base=EMWS1.EndGrp_PATH data=score_path;
MPRINT(SCORE):   run;
 
NOTE: Appending WORK.SCORE_PATH to EMWS1.ENDGRP_PATH.
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: 12 observations added.
NOTE: The data set EMWS1.ENDGRP_PATH has 84 observations and 10 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   retain index 0 ensembleIndex 0;
MPRINT(SCORE):   set score_Path end=eof;
MPRINT(SCORE):   if nodelabel = "Grp" or index then do;
MPRINT(SCORE):   index + 1;
MPRINT(SCORE):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(SCORE):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(SCORE):   end;
MPRINT(SCORE):   if component='Ensemble' then ensembleIndex = index;
MPRINT(SCORE):   if eof then do;
MPRINT(SCORE):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(SCORE):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(SCORE):   end;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc datasets lib=work nolist;
MPRINT(SCORE):   delete score_Path;
MPRINT(SCORE):   run;
 
NOTE: Deleting WORK.SCORE_PATH (memtype=DATA).
MPRINT(SCORE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: EndGrp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2387857    *------------------------------------------------------------*;
2387858    * End SCORE: EndGrp;
2387859    *------------------------------------------------------------*;
2387860
 
2387861    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2387862    * EndGrp: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * EndGrp: Scoring DATA data;
2387863    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2387864    data EMWS1.EndGrp_TRAIN
2387865    / view=EMWS1.EndGrp_TRAIN
2387866    ;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp_TRAIN / view=EMWS1.EndGrp_TRAIN ;
2387867    set EMWS1.Tree_TRAIN
2387868    ;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree_TRAIN ;
2387869    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.ENDGRP_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TREE_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2387870    quit;
 
2387872    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
2387873    * EndGrp: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp: Computing metadata for TRAIN data;
2387874    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.ENDGRP_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp_TRAIN out=WORK.M3FHDY5Z noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3FHDY5Z;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3FHDY5Z(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3FHDY5Z;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3FHDY5Z;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2ND02_A NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2ND02_A;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2ND02_A;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0FIPR_K(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2ND02_A;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2ND02_A;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2ND02_A;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2ND02_A;
MPRINT(EMADVISECOLUMNS):   set WORK.M2ND02_A;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Tree_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Tree_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2388220    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2388221    set EMWS1.EndGrp_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMINFO;
2388222    where DATA='EndGrp' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
2388223    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP_EMINFO.
      WHERE (DATA='EndGrp') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2388224    data EMWS1.EndGrp_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp_EMINFO;
2388225    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2388226    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2388227    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.ENDGRP_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
2388231    run;
2388232    data EMWS1.EndGrp_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp_EMINFO;
2388233    set EMWS1.EndGrp_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMINFO WORK.MODELTEMP_INFO;
2388234    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2388235    proc sort data = EMWS1.EndGrp_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp_EMINFO NOTHREADS;
2388236    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2388237    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP_EMINFO.
NOTE: The data set EMWS1.ENDGRP_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2388238    proc sort data = EMWS1.Tree_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Tree_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
2388239    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2388240    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.TREE_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2388241    proc sort data = EMWS1.EndGrp_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2388242    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2388243    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2388244    data EMWS1.EndGrp_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp_EMINFO;
2388245    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2388246    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2388247    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2388248    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2388249    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2388250    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2388251    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS1.ENDGRP_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:52:06 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                02 June 2018
Time:                16:52:06 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3GBPYX0 "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3GBPYX0 new;
MPRINT(EM_DIAGRAM):   run;
2388275    data EMWS1.EndGrp_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp_EMOUTFIT;
2388276    set EMWS1.EndGrp_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMOUTFIT;
2388277    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
2388278    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
2388279    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
2388280    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP_EMOUTFIT has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2388281    proc sort data=EMWS1.EndGrp_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp_EMREPORTFIT nothreads;
2388282    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
2388283    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP_EMREPORTFIT has 8 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2388284    %let _EMwarndup = 0;
2388285    %let _EMtargetdup =;
2388286    %let _EMASEtargetdup =;
2388287    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2388288    set EMWS1.EndGrp_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMOUTFIT;
2388289    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
2388290    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
2388291    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
2388292    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
2388293    end;
MPRINT(EM_DIAGRAM):   end;
2388294    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2388295    proc sort data=EMWS1.Tree_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Tree_CMeta_TRAIN out=WORK.SUBSETINMETA;
2388296    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2388297    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set EMWS1.TREE_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 23 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2388298    proc sort data=EMWS1.EndGrp_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
2388299    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2388300    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set EMWS1.ENDGRP_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 23 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2388301    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
2388302    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
2388303    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2388304    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 23 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 23 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2388305    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2388306    set EMWS1.EndGrp_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_CMeta_TRAIN;
2388307    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
2388308    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.ENDGRP_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 10 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2388309    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2388310    set EMWS1.EndGrp_TRAIN(keep=
2388311    F_DepVar
2388312    I_DepVar
2388313    P_DepVar0
2388314    P_DepVar1
2388315    Q_DepVar0
2388316    Q_DepVar1
2388317    R_DepVar0
2388318    R_DepVar1
2388319    U_DepVar
2388320    _WARN_
2388321    DepVar
2388322    );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 Q_DepVar0 Q_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2388323    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2184 observations read from the data set EMWS1.GRP_TRAIN.
NOTE: View EMWS1.ENDGRP_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: There were 2184 observations read from the data set EMWS1.TREE_TRAIN.
NOTE: There were 2184 observations read from the data set EMWS1.ENDGRP_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2184 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
2392510    %let _cn = %sysfunc(getoption(CENTER));
2392511    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2392512    proc print data=EMWS1.EndGrp_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp_EMREPORTFIT noobs label;
2392513    var STAT LABEL TRAIN
2392514    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
2392515    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
2392516    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2392517    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
2392518    run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 1600.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2392519    title10;
MPRINT(EM_DIAGRAM):   title10;
2392520    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2392521    proc sort data=EMWS1.EndGrp_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp_EMCLASSIFICATION nothreads;
2392522    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2392523    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2392524    %let _cn = %sysfunc(getoption(CENTER));
2392525    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
2392526    proc print data=EMWS1.EndGrp_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp_EMCLASSIFICATION noobs label;
2392527    var from into pct_row pct_col count percent
2392528    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
2392529    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2392530    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
2392531    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
2392532    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
2392533    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
2392534    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
2392535    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
2392536    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
2392537    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2392538    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
2392539    run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 1601.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2392540    title9;
MPRINT(EM_DIAGRAM):   title9;
2392541    title10;
MPRINT(EM_DIAGRAM):   title10;
2392542    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2392543    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
2392544    modify EndGrp_EMRANK;
MPRINT(EM_DIAGRAM):   modify EndGrp_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2392545    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2392546    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
2392547    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP_EMRANK.DATA.
2392548    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.07 seconds
 
 
2392549    %let _cn = %sysfunc(getoption(CENTER));
2392550    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2392551    proc print data=EMWS1.EndGrp_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp_EMRANK label noobs;
2392552    var
2392553    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
2392554    by
2392555    notsorted DATAROLE
2392556    notsorted TARGET
2392557    notsorted TARGETLABEL
2392558    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
2392559    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2392560    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
2392561    run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP_EMRANK.
NOTE: The PROCEDURE PRINT printed page 1602.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2392562    title10;
MPRINT(EM_DIAGRAM):   title10;
2392563    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2392564    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
2392565    modify EndGrp_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify EndGrp_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2392566    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2392567    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
2392568    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP_EMSCOREDIST.DATA.
2392569    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
2392570    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2392571    set EMWS1.Grp_GROUPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp_GROUPINFO;
2392572    where _LOOP_=7;
MPRINT(EM_DIAGRAM):   where _LOOP_=7;
2392573    call symput('LOOP_WHERE', strip(_wheredesc_));
MPRINT(EM_DIAGRAM):   call symput('LOOP_WHERE', strip(_wheredesc_));
2392574    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP_GROUPINFO.
      WHERE _LOOP_=7;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2392575    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2392576    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2392577    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2392578    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2392579    set EMWS1.EndGrp_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMRANK;
2392580    _LOOP_ =7;
MPRINT(EM_DIAGRAM):   _LOOP_ =7;
2392581    _WHERE_ ="^(cv_var =7)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =7)";
2392582    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP_EMRANK.
NOTE: The data set WORK.TEMP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2392583    data EMWS1.EndGrp_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp_EMRANK_LOOP;
2392584    set EMWS1.EndGrp_EMRANK_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMRANK_LOOP temp;
2392585    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 120 observations read from the data set EMWS1.ENDGRP_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP_EMRANK_LOOP has 140 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2392586    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2392587    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2392588    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2392589    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2392590    set EMWS1.EndGrp_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMSCOREDIST;
2392591    _LOOP_ =7;
MPRINT(EM_DIAGRAM):   _LOOP_ =7;
2392592    _WHERE_ ="^(cv_var =7)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =7)";
2392593    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS1.ENDGRP_EMSCOREDIST.
NOTE: The data set WORK.TEMP has 5 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2392594    data EMWS1.EndGrp_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp_EMSCOREDIST_LOOP;
2392595    set EMWS1.EndGrp_EMSCOREDIST_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMSCOREDIST_LOOP temp;
2392596    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS1.ENDGRP_EMSCOREDIST_LOOP.
NOTE: There were 5 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP_EMSCOREDIST_LOOP has 41 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2392597    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2392598    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2392599    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2392600    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2392601    set EMWS1.EndGrp_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMOUTFIT;
2392602    _LOOP_ =7;
MPRINT(EM_DIAGRAM):   _LOOP_ =7;
2392603    _WHERE_ ="^(cv_var =7)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =7)";
2392604    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP_EMOUTFIT.
NOTE: The data set WORK.TEMP has 1 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2392605    data EMWS1.EndGrp_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp_EMOUTFIT_LOOP;
2392606    set EMWS1.EndGrp_EMOUTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMOUTFIT_LOOP temp;
2392607    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS1.ENDGRP_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP_EMOUTFIT_LOOP has 7 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2392608    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2392609    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2392610    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2392611    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2392612    set EMWS1.EndGrp_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMREPORTFIT;
2392613    _LOOP_ =7;
MPRINT(EM_DIAGRAM):   _LOOP_ =7;
2392614    _WHERE_ ="^(cv_var =7)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =7)";
2392615    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP_EMREPORTFIT.
NOTE: The data set WORK.TEMP has 8 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2392616    data EMWS1.EndGrp_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp_EMREPORTFIT_LOOP;
2392617    set EMWS1.EndGrp_EMREPORTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMREPORTFIT_LOOP temp;
2392618    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set EMWS1.ENDGRP_EMREPORTFIT_LOOP.
NOTE: There were 8 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP_EMREPORTFIT_LOOP has 56 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2392619    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2392620    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2392621    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2392622    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2392623    set EMWS1.EndGrp_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMCLASSIFICATION;
2392624    _LOOP_ =7;
MPRINT(EM_DIAGRAM):   _LOOP_ =7;
2392625    _WHERE_ ="^(cv_var =7)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =7)";
2392626    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP_EMCLASSIFICATION.
NOTE: The data set WORK.TEMP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2392627    data EMWS1.EndGrp_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp_EMCLASSIFICATION_LOOP;
2392628    set EMWS1.EndGrp_EMCLASSIFICATION_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp_EMCLASSIFICATION_LOOP temp;
2392629    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 24 observations read from the data set EMWS1.ENDGRP_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP_EMCLASSIFICATION_LOOP has 28 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
