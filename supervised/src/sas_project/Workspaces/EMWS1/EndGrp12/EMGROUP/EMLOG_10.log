*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                17:03:29 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:03:23 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                17:03:23 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0LEZ5SD "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp12\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0LEZ5SD new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp12\EMGROUP\EMLOG_10.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:03:23 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp12\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp12\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp12\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp12\EMGROUP\EMOUTPUT_10.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:03:23 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp12\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp12\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp12\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp12\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp12\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
3294884    proc freq data=EMWS1.EndGrp12_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.EndGrp12_VariableSet noprint;
3294885    table ROLE*LEVEL/out=WORK.EndGrp12META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.EndGrp12META;
3294886    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP12_VARIABLESET.
NOTE: The data set WORK.ENDGRP12META has 8 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.00 seconds
 
 
3294887    proc print data=WORK.EndGrp12META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp12META label noobs;
3294888    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
3294889    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
3294890    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3294891    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
3294892    run;
 
NOTE: There were 8 observations read from the data set WORK.ENDGRP12META.
NOTE: The PROCEDURE PRINT printed page 2230.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3294893    title10;
MPRINT(EM_DIAGRAM):   title10;
3294894    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Neural4_TRAIN EMWS1.Neural4_TRAIN
EMWS1.Neural4_TRAIN EMWS1.Neural4_TRAIN EMWS1 Neural4_TRAIN
EMWS1.Neural4_TRAIN EMWS1.Neural4_TRAIN
EMWS1.Neural4_TRAIN EMWS1.Neural4_TRAIN EMWS1 Neural4_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Neural4_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural4_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
3294923    data WORK.EndGrp12_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp12_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
3294924    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
3294925    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
3294926       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
3294927    set EMWS1.NEURAL4_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.NEURAL4_DEPVAR_DM( where=(_TYPE_="TARGET"));
3294928    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
3294929    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
3294930    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
3294931    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
3294932    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
3294933    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
3294934    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
3294935    end;
MPRINT(EM_DIAGRAM):   end;
3294936    output;
MPRINT(EM_DIAGRAM):   output;
3294937    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL4_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP12_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
3294938    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3294939    proc print data=WORK.EndGrp12_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp12_EVENT noobs label;
3294940    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
3294941    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3294942    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
3294943    run;
 
NOTE: There were 1 observations read from the data set WORK.ENDGRP12_EVENT.
NOTE: The PROCEDURE PRINT printed page 2231.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3294944    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
3294945    proc print data = EMWS1.Neural4_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Neural4_DepVar_DM noobs label;
3294946    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
3294947    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
3294948    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
3294949    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3294950    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
3294951    run;
 
NOTE: There were 7 observations read from the data set EMWS1.NEURAL4_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 2232.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3294952    title10;
MPRINT(EM_DIAGRAM):   title10;
3294953    %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp12: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp12: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp12: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=298;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13675998164295;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=1881;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86324001835704;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Neural4_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Neural4_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Neural4_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Neural4_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
3295427    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3295428    * EndGrp12: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * EndGrp12: Generation of macros and macro variables;
3295429    * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
3295430    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
3295431    %let EMEXCEPTIONSTRING=;
3295432    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3295433    * TRAIN: EndGrp12;
MPRINT(EM_DIAGRAM):   * TRAIN: EndGrp12;
3295434    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3295435    %let EM_ACTION = TRAIN;
3295436    %let syscc = 0;
3295437    %macro main;
3295438       %if %upcase(&EM_ACTION) = TRAIN %then %do;
3295439
3295440           filename temp catalog 'sashelp.emutil.endgp_train.source';
3295441           %include temp;
3295442           filename temp;
3295443
3295444           %train;
3295445
3295446       %end;
3295447       %else
3295448          %if %upcase(&EM_ACTION) = SCORE %then %do;
3295449
3295450           filename temp catalog 'sashelp.emutil.endgp_score.source';
3295451           %include temp;
3295452           filename temp;
3295453
3295454           %score;
3295455       %end;
3295456       %else
3295457       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
3295458
3295459           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
3295460           %include temp;
3295461           filename temp;
3295462
3295463           %postloop;
3295464
3295465       %end;
3295466
3295467       %doendm:
3295468    %mend main;
3295469
3295470    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_TRAIN.SOURCE.
3295471   +%macro copyModelDs(model=, key=);
3295472   +   %let modelDs  = &em_lib..&model._&key;
3295473   +   %let reportDs = &em_lib..&em_nodeid._&key;
3295474   +   %if %sysfunc(exist(&modelDs)) %then %do;
3295475   +       data &reportDs;
3295476   +          length ModelId $16;
3295477   +          retain ModelId "&model";
3295478   +          set &modelDs;
3295479   +       run;
3295480   +   %end;
3295481   +%mend copyModelDs;
3295482   +
3295483   +%macro traintarget(groupid=);
3295484   +   %em_getname(key=emoutfit, type=DATA);
3295485   +   %let targetname=;
3295486   +   data _null_;
3295487   +     set &em_lib..&groupid._&looptype;
3295488   +     where _LOOP_ = &EMLOOPNUMBER;
3295489   +     call symput('targetname', strip(_TARGET_));
3295490   +   run;
3295491   +   %let modelId =;
3295492   +   data _null_;
3295493   +      set &em_import_data_eminfo;
3295494   +      where key = 'MODEL' and TARGET = "&targetname";
3295495   +      call symput('modelId',   strip(data));
3295496   +   run;
3295497   +   %if "&modelId" ne "" %then %do;
3295498   +       %copyModelDs(model=&modelid, key=EMRANK);
3295499   +       %copyModelDs(model=&modelid, key=EMSCOREDIST);
3295500   +       %copyModelDs(model=&modelid, key=EMOUTFIT);
3295501   +       %copyModelDs(model=&modelid, key=EMCLASSIFICATION);
3295502   +       %copyModelDs(model=&modelid, key=EMEVENREPORT);
3295503   +       %copyModelDs(model=&modelid, key=EMRESIDUALS);
3295504   +       %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
3295505   +   %end;
3295506   +
3295507   +   %doendtgp:
3295508   +%mend;
3295509   +
3295510   +%macro trainboost(groupid=);
3295511   +
3295512   +   %let boostinfoDs  = &em_lib..%sysfunc(strip(&groupid))_boostinfo;
3295513   +   %let boostscoreDs = &em_lib..%sysfunc(strip(&groupid))_boostscore;
3295514   +
3295515   +   data _null_;
3295516   +      retain index 0;
3295517   +      set &boostinfoDs;
3295518   +      call symput('targetname', strip(_target_));
3295519   +   run;
3295520   +
3295521   +   %if "&em_import_data_eminfo" ne "" and %sysfunc(exist(&em_import_data_eminfo)) %then %do;
3295522   +       %let decmeta = ;
3295523   +       data _null_;
3295524   +          set &em_import_data_eminfo;
3295525   +          where (key='DECMETA' and TARGET="&targetname");
3295526   +          call symput('DECMETA', strip(data));
3295527   +       run;
3295528   +       %if "&decmeta" eq "" %then %do;
3295529   +           %let emexceptionstring = EMTOOL.NOTARGETMODELED;
3295530   +           %goto doendtb;
3295531   +       %end;
3295532   +
3295533   +       %let predictedVars=;
3295534   +       data _null_;
3295535   +          set &decmeta;
3295536   +          if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
3295537   +          else
3295538   +          if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
3295539   +          else
3295540   +          if _TYPE_ = 'PREDICTED' then call symput('predictedvars', strip(symget('predictedVars'))!!' '!!strip(variable));
3295541   +       run;
3295542   +       %if %index(&EM_DEBUG, _ALL_) %then %do;
3295543   +           %put GROUPID: &GROUPID DECMETA: &DECMETA FROMVAR: &FROMVAR INTO: &INTOVAR PREDICTED: &PREDICTEDVARS;
3295544   +       %end;
3295545   +   %end;
3295546   +
3295547   +   * ;
3295548   +   * ENDGROUP &NODEID : Boosting scoring ;
3295549   +   * ;
3295550   +   data &em_lib..&groupid._boostscore;
3295551   +      set &em_import_data;
3295552   +      keep _WARN_ &targetname &fromvar &intovar &predictedvars;
3295553   +      %if "%em_freq" ne "" %then %do ;
3295554   +          keep %em_freq ;
3295555   +      %end ;
3295556   +   run;
3295557   +   %em_model(TARGET=&targetname , ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
3295558   +
3295559   +   %doendtb:
3295560   +
3295561   +%mend trainboost;
3295562   +
3295563   +%macro trainbag(groupid=);
3295564   +   %let baginfoDs  = &em_lib..%sysfunc(strip(&groupid))_baginfo;
3295565   +   data _null_;
3295566   +      retain index 0;
3295567   +      set &baginfoDs;
3295568   +      call symput('targetname', strip(_target_));
3295569   +   run;
3295570   +
3295571   +   %let decmeta = ;
3295572   +   data _null_;
3295573   +       set &em_import_data_eminfo;
3295574   +       where (key='DECMETA' and TARGET="&targetname");
3295575   +       call symput('DECMETA', strip(data));
3295576   +   run;
3295577   +   %if "&decmeta" eq "" %then %do;
3295578   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
3295579   +       %goto doendtg;
3295580   +   %end;
3295581   +
3295582   +   %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
3295583   +
3295584   +   %doendtg:
3295585   +%mend trainbag;
3295586   +
3295587   +%macro traingroup(groupid=);
3295588   +   %let targetNum = 0;
3295589   +
3295590   +   data _temp1;
3295591   +      set &em_lib..&groupid._eminfo;
3295592   +      where key='MODEL';
3295593   +   run;
3295594   +   data _temp2;
3295595   +      set &em_import_data_eminfo;
3295596   +      where key='MODEL';
3295597   +   run;
3295598   +   proc sort data=_temp1; by TARGET DATA;
3295599   +   proc sort data=_temp2; by TARGET DATA;
3295600   +   data _temp2;
3295601   +      merge _temp1(in=_a) _temp2(in=_b);
3295602   +      by TARGET DATA;
3295603   +      if ^_a and _b then output;
3295604   +   run;
3295605   +   data _null_;
3295606   +      retain index 0;
3295607   +      set _temp2 end=eof;
3295608   +      index +1;
3295609   +      where key ='MODEL';
3295610   +      call symput('MODELID'!!strip(put(index, best.)), strip(data));
3295611   +      call symput('TARGET'!!strip(put(index, best.)), strip(target));
3295612   +      if eof then
3295613   +         call symput('targetnum', strip(put(index, best.)));
3295614   +   run;
3295615   +   proc datasets lib=work nolist;
3295616   +      delete _temp1 _temp2;
3295617   +   run;
3295618   +   %if "&targetNum" eq "0" %then %goto doendtgp;
3295619   +
3295620   +   %let modelString =;
3295621   +   %do i=1 %to &targetnum;
3295622   +        %if ^%sysfunc(indexw(&modelString, &&modelid&i)) %then %do;
3295623   +            %copyModelDs(model=&&modelid&i, key=EMRANK);
3295624   +            %copyModelDs(model=&&modelid&i, key=EMSCOREDIST);
3295625   +            %copyModelDs(model=&&modelid&i, key=EMOUTFIT);
3295626   +            %copyModelDs(model=&&modelid&i, key=EMCLASSIFICATION);
3295627   +            %copyModelDs(model=&&modelid&i, key=EMEVENREPORT);
3295628   +            %copyModelDs(model=&&modelid&i, key=EMRESIDUALS);
3295629   +            %let modelString = &modelString &&modelid&i;
3295630   +       %end;
3295631   +       %em_model(TARGET=&&target&i, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
3295632   +   %end;
3295633   +
3295634   +   %doendtgp:
3295635   +
3295636   +%mend traingroup;
3295637   +
3295638   +%macro getSize(data=, nobsvar=);
3295639   +
3295640   +   %if %sysfunc(exist(&data, DATA)) %then %do;
3295641   +       %let dsid = %sysfunc(open(&data));
3295642   +       %if &dsid %then %do;
3295643   +           %let &&nobsvar = %sysfunc(attrn(&dsid, NLOBS));
3295644   +           %let dsid = %sysfunc(close(&dsid));
3295645   +       %end;
3295646   +   %end;
3295647   +    %if %sysfunc(exist(&data, VIEW)) %then %do;
3295648   +        proc sql;
3295649   +           reset noprint;
3295650   +           select count(*) into :&nobsvar from &data;
3295651   +        quit;
3295652   +   %end;
3295653   +
3295654   +%mend getsize;
3295655   +
3295656   +%macro train;
3295657   +
3295658   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %do;
3295659   +      %let EM_TOOLTYPE=UTILITY;
3295660   +      %if %sysfunc(exist(&em_data_eminfo)) %then %do;
3295661   +          proc delete data=&em_data_eminfo;
3295662   +          run;
3295663   +      %end;
3295664   +      %goto doendtr;
3295665   +   %end;
3295666   +
3295667   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
3295668   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
3295669   +       %goto doendtr;
3295670   +   %end;
3295671   +
3295672   +   %let xgroupid = ;
3295673   +   data _null_;
3295674   +      set &em_import_data_eminfo;
3295675   +      where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
3295676   +      call symput('XGROUPID',  strip(data));
3295677   +      call symput('LOOPTYPE', strip(key));
3295678   +   run;
3295679   +
3295680   +   %if "&looptype" eq "BOOSTINFO" %then %do;
3295681   +       %let nDataObs=0;
3295682   +       %getSize(data=&em_import_data, nobsvar=nDataObs);
3295683   +
3295684   +       %let nStartObs=0;
3295685   +       %getsize(data=&em_lib..&xgroupid._train, nobsvar=nStartObs);
3295686   +
3295687   +       %if &nDataObs ne &nStartObs %then %do;
3295688   +           %let emexceptionstring = EMTOOL.BOOSTERRORNOBSCHANGED;
3295689   +           %goto doendtr;
3295690   +       %end;
3295691   +
3295692   +       %trainboost(groupid=&xgroupid);
3295693   +   %end;
3295694   +   %else
3295695   +   %if "&looptype" eq "BAGINFO" %then %do;
3295696   +       %trainbag(groupid=&xgroupid);
3295697   +   %end;
3295698   +   %else
3295699   +   %if "&looptype" eq "GROUPINFO" %then %do;
3295700   +       %traingroup(groupid=&xgroupid);
3295701   +   %end;
3295702   +   %else
3295703   +   %if "&looptype" eq "TARGETINFO" %then %do;
3295704   +       %traintarget(groupid=&xgroupid);
3295705   +   %end;
3295706   +
3295707   +   data &em_data_eminfo;
3295708   +      length TARGET KEY $32  DATA $43;
3295709   +      TARGET=''; KEY='ENDGROUP'; DATA="&em_nodeid"; output;
3295710   +   run;
3295711   +
3295712   +   %let EM_TOOLTYPE=MODEL;
3295713   +
3295714   +   %doendtr:
3295715   +
3295716   +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Neural4_EMINFO;
MPRINT(TRAIN):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(TRAIN):   call symput('XGROUPID', strip(data));
MPRINT(TRAIN):   call symput('LOOPTYPE', strip(key));
MPRINT(TRAIN):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL4_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp1;
MPRINT(TRAINGROUP):   set EMWS1.Grp12_eminfo;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.GRP12_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   set EMWS1.Neural4_EMINFO;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL4_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp1;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp2;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   merge _temp1(in=_a) _temp2(in=_b);
MPRINT(TRAINGROUP):   by TARGET DATA;
MPRINT(TRAINGROUP):   if ^_a and _b then output;
MPRINT(TRAINGROUP):   run;
NOTE: There were 0 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   data _null_;
MPRINT(TRAINGROUP):   retain index 0;
MPRINT(TRAINGROUP):   set _temp2 end=eof;
MPRINT(TRAINGROUP):   index +1;
MPRINT(TRAINGROUP):   where key ='MODEL';
MPRINT(TRAINGROUP):   call symput('MODELID'!!strip(put(index, best.)), strip(data));
MPRINT(TRAINGROUP):   call symput('TARGET'!!strip(put(index, best.)), strip(target));
MPRINT(TRAINGROUP):   if eof then call symput('targetnum', strip(put(index, best.)));
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc datasets lib=work nolist;
MPRINT(TRAINGROUP):   delete _temp1 _temp2;
MPRINT(TRAINGROUP):   run;
 
NOTE: Deleting WORK._TEMP1 (memtype=DATA).
NOTE: Deleting WORK._TEMP2 (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(COPYMODELDS):   data EMWS1.EndGrp12_EMRANK;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural4";
MPRINT(COPYMODELDS):   set EMWS1.Neural4_EMRANK;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL4_EMRANK.
NOTE: The data set EMWS1.ENDGRP12_EMRANK has 20 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp12_EMSCOREDIST;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural4";
MPRINT(COPYMODELDS):   set EMWS1.Neural4_EMSCOREDIST;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 19 observations read from the data set EMWS1.NEURAL4_EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP12_EMSCOREDIST has 19 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp12_EMOUTFIT;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural4";
MPRINT(COPYMODELDS):   set EMWS1.Neural4_EMOUTFIT;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL4_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP12_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp12_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural4";
MPRINT(COPYMODELDS):   set EMWS1.Neural4_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL4_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP12_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   length DATA $65 TARGET $32 PREDICTED ASSESS DECSCORECODE FITSTATISTICS CLASSIFICATION RESIDUALS $1;
MPRINT(EM_MODEL):   data = "";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "N";
MPRINT(EM_MODEL):   decscorecode = "N";
MPRINT(EM_MODEL):   fitstatistics = "N";
MPRINT(EM_MODEL):   classification = "N";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   run;
 
NOTE: The data set WORK.EM_USER_MODEL has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.EndGrp12_EMINFO;
MPRINT(TRAIN):   length TARGET KEY $32 DATA $43;
MPRINT(TRAIN):   TARGET='';
MPRINT(TRAIN):   KEY='ENDGROUP';
MPRINT(TRAIN):   DATA="EndGrp12";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   run;
 
NOTE: The data set EMWS1.ENDGRP12_EMINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: EndGrp12;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3295717    *------------------------------------------------------------*;
3295718    * End TRAIN: EndGrp12;
3295719    *------------------------------------------------------------*;
3295720
 
3295721    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3295722    * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
3295723    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3295724    ;
MPRINT(EM_DIAGRAM):   ;
3295725    ;
MPRINT(EM_DIAGRAM):   ;
3295726    ;
MPRINT(EM_DIAGRAM):   ;
3295727    ;
MPRINT(EM_DIAGRAM):   ;
3295728    quit;
MPRINT(EM_DIAGRAM):   quit;
3295729    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3295730    * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
3295731    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3295732    /*; *"; *'; */
3295733    ;
MPRINT(EM_DIAGRAM):   ;
3295734    run;
MPRINT(EM_DIAGRAM):   run;
3295735    quit;
MPRINT(EM_DIAGRAM):   quit;
3295736    /* Reset EM Options */
3295737    options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
3295738    options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
3295739    goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:03:27 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                17:03:27 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2PFCHL9 "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp12\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2PFCHL9 new;
MPRINT(EM_DIAGRAM):   run;
3295841    %let EMEXCEPTIONSTRING=;
3295842    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3295843    * SCORE: EndGrp12;
MPRINT(EM_DIAGRAM):   * SCORE: EndGrp12;
3295844    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3295845    %let EM_ACTION = SCORE;
3295846    %let syscc = 0;
3295847    %macro main;
3295848       %if %upcase(&EM_ACTION) = TRAIN %then %do;
3295849
3295850           filename temp catalog 'sashelp.emutil.endgp_train.source';
3295851           %include temp;
3295852           filename temp;
3295853
3295854           %train;
3295855
3295856       %end;
3295857       %else
3295858          %if %upcase(&EM_ACTION) = SCORE %then %do;
3295859
3295860           filename temp catalog 'sashelp.emutil.endgp_score.source';
3295861           %include temp;
3295862           filename temp;
3295863
3295864           %score;
3295865       %end;
3295866       %else
3295867       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
3295868
3295869           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
3295870           %include temp;
3295871           filename temp;
3295872
3295873           %postloop;
3295874
3295875       %end;
3295876
3295877       %doendm:
3295878    %mend main;
3295879
3295880    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_SCORE.SOURCE.
3295881   +%macro scoreTables(data=, out=, scoreref=, prescore=);
3295883   +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW))) %then %do;
3295884   +       data &out / view=&out;
3295885   +          set &data
3295887   +          %if "&prescore" = "Y" %then %do;
3295888   +              (obs=1)
3295889   +          %end;
3295891   +          ;
3295893   +          %inc &scoreref;
3295895   +          %if "&prescore" eq "Y" %then %do;
3295896   +              drop I_: R_:;
3295897   +          %end;
3295899   +       run;
3295900   +   %end;
3295902   +%mend scoretables;
3295904   +%macro boostbagcode(groupid=, type=, EnsembleIndex=);
3295905   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
3295906   +   data _null_;
3295907   +      retain index 0;
3295908   +      set &infoDs;
3295909   +      call symput('targetname', strip(_target_));
3295910   +      call symput('endloopnum', strip(_loop_));
3295911   +   run;
3295913   +   %let endgrp_decmeta=;
3295914   +   %let endgrp_decdata=;
3295916   +   data _null_;
3295917   +      set &em_import_data_eminfo;
3295918   +      where key in('MODEL', 'DECMETA', 'DECDATA') and TARGET="&targetname";
3295919   +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
3295920   +      else
3295921   +      if key='DECDATA' then call symput('ENDGRP_DECDATA', strip(data));
3295922   +      else call symput('MODELID', strip(data));
3295923   +   run;
3295925   +   %let headerString= Boosting;
3295926   +   %let prefixString= _BoostVar;
3295928   +   %if "&type" = "BAGINFO" %then %do;
3295929   +        %let headerString = Bagging;
3295930   +        %let prefixString= _BagVar;
3295931   +   %end;
3295933   +   %let targetType=;
3295934   +   %let predictedVars=;
3295935   +   data _null_;
3295936   +      retain index;
3295937   +      set &endgrp_decmeta end=eof;
3295938   +      length tempvar $200;
3295939   +      if _TYPE_='TARGET' then call symput('TARGETTYPE', strip(level));
3295940   +      else
3295941   +      if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
3295942   +      else
3295943   +      if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
3295944   +      else
3295945   +      if _TYPE_ = 'PREDICTED' then do;
3295946   +         index+1;
3295947   +         call symput('predvars'!!strip(put(index, best.)), strip(variable));
3295948   +         tempvar = strip("&em_nodeid")!!'_'!!strip(variable);
3295949   +         if length(tempvar)<=32 then call symput('tempvars'!!strip(put(index, best.)), strip(tempvar));
3295950   +         else call symput('tempvars'!!strip(put(index, best.)), strip("&prefixString")!!strip(put(index, best.)));
3295951   +      end;
3295952   +      if eof then
3295953   +         call symput('prednum', strip(put(index, best.)));
3295954   +   run;
3295956   +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
3295957   +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
3295959   +   filename loopflow "&em_user_loopflowcode";
3295960   +   filename looppub "&em_user_looppubcode";
3295962   +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
3295963   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
3295965   +   %if "&emloopnumber" = "1" %then %do;
3295966   +       data _null_;
3295967   +          rc = fdelete('loopflow');
3295968   +          rc = fdelete('looppub');
3295969   +       run;
3295970   +       data _null_;
3295971   +          file loopflow;
3295972   +          put "&em_codebar;";
3295973   +          put "* &em_nodeid: ;" ;
3295974   +          put "* User: &sysuserid;";
3295975   +          put "* Date: &sysdate: &systime;";
3295976   +          put "&em_codebar ;";
3295977   +          put "* Ensemble Code;";
3295978   +          put "&em_codebar ;";
3295979   +          put "* &headerString: Loop=1;";
3295980   +          put "* Temporary Variables;";
3295981   +          %do i= 1 %to &prednum;
3295982   +              put "drop &&tempvars&i;";
3295983   +              put "&&tempvars&i = 0;";
3295984   +          %end;
3295985   +       run;
3295986   +       %em_copyfile(infref=loopflow, outfref=looppub);
3295987   +   %end;
3295989   +   %let j=&emloopnumber;
3295990   +   %do i = 1 %to &loopcodenum;
3295991   +       %let fsourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
3295992   +       %let psourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
3295994   +       %if (&&loopnode&i eq &em_nodeid ) or
3295995   +           ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex )) %then %do;
3295996   +           data _null_;
3295997   +              file loopflow mod;
3295998   +              put "&em_codebar;";
3295999   +              put "* &&loopnode&i: &&loopdesc&i;" ;
3296000   +              put "* User: &sysuserid;";
3296001   +              put "* Date: &sysdate: &systime;";
3296002   +              put "* &headerString: Loop=&j;";
3296003   +              put "&em_codebar;";
3296004   +           run;
3296005   +           data _null_;
3296006   +              file looppub mod;
3296007   +              put "&em_codebar;";
3296008   +              put "* &&loopnode&i: &&loopdesc&i;" ;
3296009   +              put "* User: &sysuserid;";
3296010   +              put "* Date: &sysdate: &systime;";
3296011   +              put "* &headerString: Loop=&j;";
3296012   +              put "&em_codebar;";
3296013   +           run;
3296014   +       %end;
3296016   +       %if &&loopnode&i ne &em_nodeid %then %do;
3296017   +           %if (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex ) %then %do;
3296018   +               filename x catalog "&fsourceEntry";
3296019   +               %em_copyfile(infref=x, outfref=loopflow, append=Y);
3296020   +               filename x;
3296022   +               filename y catalog "&psourceEntry";
3296023   +               %em_copyfile(infref=y, outfref=looppub, append=Y);
3296024   +               filename y;
3296025   +           %end;
3296026   +       %end;
3296027   +       %else %do;
3296028   +           %if "&j" ne "1" %then %do;
3296029   +               %let weight = %eval(&j-1);
3296030   +               data _null_;
3296031   +                  file loopflow mod;
3296032   +                  put "&em_codebar;";
3296033   +                  %if "&j" ne "&endloopnum" %then %do;
3296034   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
3296035   +                  %end;
3296036   +                  %else %do;
3296037   +                      put "* &headerString: accumulate final probabilities;";
3296038   +                  %end;
3296039   +                  put "&em_codebar;";
3296040   +                  %do k=1 %to &prednum;
3296041   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
3296042   +                  %end;
3296043   +               run;
3296044   +               data _null_;
3296045   +                  file looppub mod;
3296046   +                  put "&em_codebar;";
3296047   +                  %if "&j" ne "&endloopnum" %then %do;
3296048   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
3296049   +                  %end;
3296050   +                  %else %do;
3296051   +                      put "* &headerString: accumulate final probabilities;";
3296052   +                  %end;
3296053   +                  %do k=1 %to &prednum;
3296054   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
3296055   +                  %end;
3296056   +               run;
3296057   +           %end;
3296058   +           %if "&j" ne "&endloopnum" %then %do;
3296059   +               data _null_;
3296060   +                  file loopflow mod;
3296061   +                  put "&em_codebar;";
3296062   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
3296063   +                  put "&em_codebar;";
3296064   +               %do k=1 %to &prednum;
3296065   +                  put "&&tempvars&k = &&predvars&k;";
3296066   +               %end;
3296067   +               run;
3296068   +               data _null_;
3296069   +                  file looppub mod;
3296070   +                  put "&em_codebar;";
3296071   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
3296072   +                  put "&em_codebar;";
3296073   +               %do k=1 %to &prednum;
3296074   +                   put "&&tempvars&k = &&predvars&k;";
3296075   +               %end;
3296076   +               run;
3296077   +           %end;
3296079   +       %end;
3296080   +   %end;
3296082   +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
3296083   +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
3296085   +   filename loopflow;
3296086   +   filename looppub;
3296087   +   filename empub;
3296089   +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
3296090   +   %let gpTrain=;
3296091   +   %let gpValidate=;
3296092   +   %let gpTest=;
3296094   +   data _null_;
3296095   +      set &groupImportDs;
3296096   +      select(upcase(port));
3296097   +          when('DATA')     call symput('gpTrain',    strip(dataset));
3296098   +          when('VALIDATE') call symput('gpValidate', strip(dataset));
3296099   +          when('TEST')     call symput('gpTest',     strip(dataset));
3296100   +       otherwise;
3296101   +      end;
3296102   +   run;
3296104   +   %if "&gpTrain" ne "" %then %do;
3296106   +       %scoreTables(data=&em_lib..&gpTrain,     out=&em_export_train,    scoreref=emflow, prescore=Y);
3296108   +       %if &targetType ne INTERVAL %then %do;
3296109   +           %makeClassificationVars(target=&targetname, data=&em_export_train, decmeta=&endgrp_decmeta, publish=N, fref=emflow);
3296110   +       %end;
3296112   +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
3296114   +       %let decflow = %sysfunc(Pathname(WORK))&em_dsep._decflow.sas;
3296116   +       %em_decidecode(data=&em_export_train , decdata=&ENDGRP_DECDATA , decmeta=&ENDGRP_DECMETA ,
3296117   +                                                           noresfile=, resfile=%nrbquote(&decflow));
3296119   +       filename _decflow "&decflow";
3296120   +       %em_copyfile(infref=_decflow, outfref=emflow, append=Y);
3296121   +       filename _decflow;
3296123   +   %end;
3296125   +   %if "&gpTrain" ne "" %then
3296126   +        %scoreTables(data=&em_lib..%sysfunc(strip(&gpTrain)),     out=&em_export_train,    scoreref=emflow);
3296127   +   %if "&gpValidate" ne "" %then
3296128   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),  out=&em_export_validate, scoreref=emflow);
3296129   +   %if "&gpTest" ne "" %then
3296130   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),      out=&em_export_test,     scoreref=emflow);
3296132   +   filename emflow;
3296134   +%mend boostbagcode;
3296136   +%macro score;
3296138   +   filename _dec catalog "sashelp.emutil.em_decidecode.source";
3296139   +   %inc _dec;
3296140   +   filename _dec;
3296142   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %goto doendpl;
3296144   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
3296145   +       %let emexceptionstring = nomodeltarget;
3296146   +       %goto doendpl;
3296147   +   %end;
3296149   +   %LET GROUPID=;
3296150   +   %let LOOPTYPE=;
3296151   +   data _null_;
3296152   +      set &em_import_data_eminfo;
3296153   +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
3296154   +      call symput('GROUPID',   strip(data));
3296155   +      call symput('LOOPTYPE', strip(key));
3296156   +   run;
3296158   +   %em_getname(key=PATH, type=DATA);
3296160   +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
3296161   +   %include temp;
3296162   +   filename temp;
3296164   +   %em_gettrainpath(NODEID=&em_nodeid, OUTPATH= score_path);
3296166   +   %if &emloopnumber = 1 and %sysfunc(exist(&em_user_path)) %then %do;
3296167   +       %let deleteString = &em_nodeid._path;
3296168   +       proc datasets lib=&em_lib nolist;
3296169   +          delete &deleteString;
3296170   +       run;
3296171   +       quit;
3296172   +   %end;
3296174   +   %if ^%sysfunc(exist(WORK.score_path)) %then %goto doendpl;
3296176   +   data score_path;
3296177   +      retain LOOPID &emloopnumber;
3296178   +      set score_path;
3296179   +   run;
3296181   +   proc append base=&em_user_path  data=score_path;
3296182   +   run;
3296184   +   %let EnsembleIndex=0;
3296185   +   data _null_;
3296186   +      retain index 0 ensembleIndex 0;
3296187   +      set score_Path end=eof;
3296188   +      if nodelabel = "&groupid" or index then do;
3296189   +         index + 1;
3296190   +         call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
3296191   +         call symput('loopdesc'!!strip(put(index, best.)), strip(component));
3296192   +      end;
3296193   +      if component='Ensemble' then ensembleIndex = index;
3296194   +      if eof then do;
3296195   +         call symput('loopcodenum', strip(put(index, best.)));
3296196   +         call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
3296197   +      end;
3296198   +   run;
3296200   +   proc datasets lib=work nolist;
3296201   +      delete score_Path;
3296202   +   run;
3296203   +   quit;
3296205   +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
3296206   +       %boostbagcode(groupid=&groupid, type=&looptype, EnsembleIndex=&EnsembleIndex);
3296208   +   %doendpl:
3296210   +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):   filename _dec catalog "sashelp.emutil.em_decidecode.source";
NOTE: %INCLUDE (level 1) file _DEC is file SASHELP.EMUTIL.EM_DECIDECODE.SOURCE.
3296211   +/*
3296212   +       MACRO: EM_DECIDECODE
3296213   +
3296214   +       PURPOSE: Generate EM Decide Score Code for non-interval target.
3296215   +       SUPPORT: Taiyeong Lee
3296216   +
3296217   +       HISTORY: 01OCT04 Initial code
3296218   +       NOTE:    All parameters are optional, call %EM_DECIDECODE()
3296219   +                to add the corresponding decision code
3296220   +
3296221   +*/
3296222   +
3296223   +
3296224   +%macro  EM_DECIDECODE(data= , decdata= , decmeta= , noresfile=, resfile=);
3296225   + %global m_data    m_decdata   m_decmeta  m_noresfile  m_resfile ;
3296226   +
3296227   +    %do;
3296228   +    %let m_data      = &data;
3296229   +    %let m_decdata   = &decdata;
3296230   +    %let m_decmeta   = &decmeta;
3296231   +    %let m_noresfile = &noresfile;
3296232   +    %let m_resfile   = &resfile;
3296233   +    dm "afa c=sashelp.emutil.decidecode.scl";
3296234   +  %end;
3296235   +%mend EM_DECIDECODE;
3296236   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename _dec;
NOTE: Fileref _DEC has been deassigned.
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Neural4_EMINFO;
MPRINT(SCORE):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(SCORE):   call symput('GROUPID', strip(data));
MPRINT(SCORE):   call symput('LOOPTYPE', strip(key));
MPRINT(SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL4_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
3296237   +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
3296238   +   proc display c=sashelp.emcore.pathscorecode.scl;
3296239   +   run;
3296240   +%mend EM_GETTRAINPATH;
3296241   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
3296242    data score_path;
MPRINT(EM_GETTRAINPATH):   data score_path;
3296243    length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
3296244    nodelabel="FIMPORT";
MPRINT(EM_GETTRAINPATH):   nodelabel="FIMPORT";
3296245    parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
3296246    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
3296247    component="FileImport";
MPRINT(EM_GETTRAINPATH):   component="FileImport";
3296248    tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
3296249    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3296250    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3296251    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3296252    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3296253    output;
MPRINT(EM_GETTRAINPATH):   output;
3296254    nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
3296255    parent="FIMPORT";
MPRINT(EM_GETTRAINPATH):   parent="FIMPORT";
3296256    description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
3296257    component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
3296258    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
3296259    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3296260    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3296261    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3296262    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3296263    output;
MPRINT(EM_GETTRAINPATH):   output;
3296264    nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
3296265    parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
3296266    description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
3296267    component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
3296268    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
3296269    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3296270    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3296271    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3296272    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3296273    output;
MPRINT(EM_GETTRAINPATH):   output;
3296274    nodelabel="EMCODE2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE2";
3296275    parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
3296276    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
3296277    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
3296278    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3296279    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3296280    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3296281    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3296282    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3296283    output;
MPRINT(EM_GETTRAINPATH):   output;
3296284    nodelabel="Meta2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta2";
3296285    parent="EMCODE2";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE2";
3296286    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
3296287    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
3296288    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3296289    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3296290    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3296291    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3296292    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3296293    output;
MPRINT(EM_GETTRAINPATH):   output;
3296294    nodelabel="EMCODE3";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE3";
3296295    parent="Meta2";
MPRINT(EM_GETTRAINPATH):   parent="Meta2";
3296296    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
3296297    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
3296298    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3296299    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3296300    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3296301    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3296302    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3296303    output;
MPRINT(EM_GETTRAINPATH):   output;
3296304    nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
3296305    parent="EMCODE3";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE3";
3296306    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
3296307    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
3296308    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
3296309    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3296310    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3296311    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3296312    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3296313    output;
MPRINT(EM_GETTRAINPATH):   output;
3296314    nodelabel="Meta";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta";
3296315    parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
3296316    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
3296317    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
3296318    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3296319    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3296320    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3296321    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3296322    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3296323    output;
MPRINT(EM_GETTRAINPATH):   output;
3296324    nodelabel="Trans2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans2";
3296325    parent="Meta";
MPRINT(EM_GETTRAINPATH):   parent="Meta";
3296326    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
3296327    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
3296328    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
3296329    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3296330    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3296331    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3296332    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3296333    output;
MPRINT(EM_GETTRAINPATH):   output;
3296334    nodelabel="Grp12";
MPRINT(EM_GETTRAINPATH):   nodelabel="Grp12";
3296335    parent="Trans2";
MPRINT(EM_GETTRAINPATH):   parent="Trans2";
3296336    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
3296337    component="StartGroup";
MPRINT(EM_GETTRAINPATH):   component="StartGroup";
3296338    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3296339    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3296340    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3296341    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3296342    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3296343    output;
MPRINT(EM_GETTRAINPATH):   output;
3296344    nodelabel="Neural4";
MPRINT(EM_GETTRAINPATH):   nodelabel="Neural4";
3296345    parent="Grp12";
MPRINT(EM_GETTRAINPATH):   parent="Grp12";
3296346    description="Neural";
MPRINT(EM_GETTRAINPATH):   description="Neural";
3296347    component="NeuralNetwork";
MPRINT(EM_GETTRAINPATH):   component="NeuralNetwork";
3296348    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
3296349    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3296350    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3296351    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3296352    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3296353    output;
MPRINT(EM_GETTRAINPATH):   output;
3296354    nodelabel="EndGrp12";
MPRINT(EM_GETTRAINPATH):   nodelabel="EndGrp12";
3296355    parent="Neural4";
MPRINT(EM_GETTRAINPATH):   parent="Neural4";
3296356    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
3296357    component="EndGroup";
MPRINT(EM_GETTRAINPATH):   component="EndGroup";
3296358    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
3296359    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3296360    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3296361    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3296362    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3296363    output;
MPRINT(EM_GETTRAINPATH):   output;
3296364    run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK.SCORE_PATH has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(SCORE):  ;
MPRINT(SCORE):   data score_path;
MPRINT(SCORE):   retain LOOPID 10;
MPRINT(SCORE):   set score_path;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set WORK.SCORE_PATH has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc append base=EMWS1.EndGrp12_PATH data=score_path;
MPRINT(SCORE):   run;
 
NOTE: Appending WORK.SCORE_PATH to EMWS1.ENDGRP12_PATH.
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: 12 observations added.
NOTE: The data set EMWS1.ENDGRP12_PATH has 120 observations and 10 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   retain index 0 ensembleIndex 0;
MPRINT(SCORE):   set score_Path end=eof;
MPRINT(SCORE):   if nodelabel = "Grp12" or index then do;
MPRINT(SCORE):   index + 1;
MPRINT(SCORE):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(SCORE):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(SCORE):   end;
MPRINT(SCORE):   if component='Ensemble' then ensembleIndex = index;
MPRINT(SCORE):   if eof then do;
MPRINT(SCORE):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(SCORE):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(SCORE):   end;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc datasets lib=work nolist;
MPRINT(SCORE):   delete score_Path;
MPRINT(SCORE):   run;
 
NOTE: Deleting WORK.SCORE_PATH (memtype=DATA).
MPRINT(SCORE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: EndGrp12;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3296365    *------------------------------------------------------------*;
3296366    * End SCORE: EndGrp12;
3296367    *------------------------------------------------------------*;
3296368
 
3296369    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3296370    * EndGrp12: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * EndGrp12: Scoring DATA data;
3296371    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3296372    data EMWS1.EndGrp12_TRAIN
3296373    / view=EMWS1.EndGrp12_TRAIN
3296374    ;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp12_TRAIN / view=EMWS1.EndGrp12_TRAIN ;
3296375    set EMWS1.Neural4_TRAIN
3296376    ;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_TRAIN ;
3296377    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.ENDGRP12_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.NEURAL4_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
3296378    quit;
 
3296380    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
3296381    * EndGrp12: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp12: Computing metadata for TRAIN data;
3296382    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.ENDGRP12_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp12\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp12_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp12_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp12_TRAIN out=WORK.M1OOLZAC noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1OOLZAC;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1OOLZAC(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1OOLZAC;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1OOLZAC;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M29LMJYN NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M29LMJYN;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M29LMJYN;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0MIHY6K(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M29LMJYN;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M29LMJYN;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M29LMJYN;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M29LMJYN;
MPRINT(EMADVISECOLUMNS):   set WORK.M29LMJYN;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Neural4_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural4_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp12_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp12";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp12";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp12";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp12: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
3296728    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
3296729    set EMWS1.EndGrp12_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp12_EMINFO;
3296730    where DATA='EndGrp12' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp12' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
3296731    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP12_EMINFO.
      WHERE (DATA='EndGrp12') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3296732    data EMWS1.EndGrp12_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp12_EMINFO;
3296733    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
3296734    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
3296735    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.ENDGRP12_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
3296739    run;
3296740    data EMWS1.EndGrp12_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp12_EMINFO;
3296741    set EMWS1.EndGrp12_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp12_EMINFO WORK.MODELTEMP_INFO;
3296742    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP12_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP12_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3296743    proc sort data = EMWS1.EndGrp12_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp12_EMINFO NOTHREADS;
3296744    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3296745    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP12_EMINFO.
NOTE: The data set EMWS1.ENDGRP12_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3296746    proc sort data = EMWS1.Neural4_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Neural4_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
3296747    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3296748    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL4_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3296749    proc sort data = EMWS1.EndGrp12_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp12_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
3296750    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3296751    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP12_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3296752    data EMWS1.EndGrp12_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp12_EMINFO;
3296753    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
3296754    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3296755    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP12_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3296756    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
3296757    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
3296758    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
3296759    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS1.ENDGRP12_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:03:28 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                02 June 2018
Time:                17:03:28 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O367U3T9 "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp12\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O367U3T9 new;
MPRINT(EM_DIAGRAM):   run;
3296783    data EMWS1.EndGrp12_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp12_EMOUTFIT;
3296784    set EMWS1.EndGrp12_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp12_EMOUTFIT;
3296785    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
3296786    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
3296787    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
3296788    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP12_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP12_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3296789    proc sort data=EMWS1.EndGrp12_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp12_EMREPORTFIT nothreads;
3296790    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
3296791    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP12_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP12_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3296792    %let _EMwarndup = 0;
3296793    %let _EMtargetdup =;
3296794    %let _EMASEtargetdup =;
3296795    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3296796    set EMWS1.EndGrp12_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp12_EMOUTFIT;
3296797    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
3296798    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
3296799    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
3296800    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
3296801    end;
MPRINT(EM_DIAGRAM):   end;
3296802    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP12_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3296803    proc sort data=EMWS1.Neural4_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural4_CMeta_TRAIN out=WORK.SUBSETINMETA;
3296804    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3296805    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL4_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 20 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3296806    proc sort data=EMWS1.EndGrp12_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp12_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
3296807    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3296808    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP12_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 20 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3296809    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
3296810    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
3296811    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3296812    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 20 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3296813    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
3296814    set EMWS1.EndGrp12_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp12_CMeta_TRAIN;
3296815    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
3296816    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP12_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3296817    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
3296818    set EMWS1.EndGrp12_TRAIN(keep=
3296819    F_DepVar
3296820    I_DepVar
3296821    P_DepVar0
3296822    P_DepVar1
3296823    R_DepVar0
3296824    R_DepVar1
3296825    U_DepVar
3296826    _WARN_
3296827    DepVar
3296828    );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp12_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
3296829    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2179 observations read from the data set EMWS1.GRP12_TRAIN.
NOTE: View EMWS1.ENDGRP12_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2179 observations read from the data set EMWS1.NEURAL4_TRAIN.
NOTE: There were 2179 observations read from the data set EMWS1.ENDGRP12_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2179 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp12_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
3301016    %let _cn = %sysfunc(getoption(CENTER));
3301017    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3301018    proc print data=EMWS1.EndGrp12_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp12_EMREPORTFIT noobs label;
3301019    var STAT LABEL TRAIN
3301020    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
3301021    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
3301022    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3301023    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
3301024    run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP12_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 2233.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3301025    title10;
MPRINT(EM_DIAGRAM):   title10;
3301026    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3301027    proc sort data=EMWS1.EndGrp12_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp12_EMCLASSIFICATION nothreads;
3301028    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
3301029    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP12_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP12_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3301030    %let _cn = %sysfunc(getoption(CENTER));
3301031    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
3301032    proc print data=EMWS1.EndGrp12_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp12_EMCLASSIFICATION noobs label;
3301033    var from into pct_row pct_col count percent
3301034    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
3301035    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
3301036    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
3301037    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
3301038    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
3301039    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
3301040    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
3301041    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
3301042    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
3301043    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3301044    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
3301045    run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP12_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 2234.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3301046    title9;
MPRINT(EM_DIAGRAM):   title9;
3301047    title10;
MPRINT(EM_DIAGRAM):   title10;
3301048    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3301049    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3301050    modify EndGrp12_EMRANK;
MPRINT(EM_DIAGRAM):   modify EndGrp12_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3301051    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3301052    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
3301053    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP12_EMRANK.DATA.
3301054    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
3301055    %let _cn = %sysfunc(getoption(CENTER));
3301056    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3301057    proc print data=EMWS1.EndGrp12_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp12_EMRANK label noobs;
3301058    var
3301059    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
3301060    by
3301061    notsorted DATAROLE
3301062    notsorted TARGET
3301063    notsorted TARGETLABEL
3301064    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
3301065    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3301066    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
3301067    run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP12_EMRANK.
NOTE: The PROCEDURE PRINT printed page 2235.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3301068    title10;
MPRINT(EM_DIAGRAM):   title10;
3301069    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3301070    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3301071    modify EndGrp12_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify EndGrp12_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3301072    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3301073    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
3301074    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP12_EMSCOREDIST.DATA.
3301075    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
3301076    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3301077    set EMWS1.Grp12_GROUPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp12_GROUPINFO;
3301078    where _LOOP_=10;
MPRINT(EM_DIAGRAM):   where _LOOP_=10;
3301079    call symput('LOOP_WHERE', strip(_wheredesc_));
MPRINT(EM_DIAGRAM):   call symput('LOOP_WHERE', strip(_wheredesc_));
3301080    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP12_GROUPINFO.
      WHERE _LOOP_=10;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3301081    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3301082    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3301083    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3301084    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3301085    set EMWS1.EndGrp12_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp12_EMRANK;
3301086    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3301087    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3301088    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP12_EMRANK.
NOTE: The data set WORK.TEMP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3301089    data EMWS1.EndGrp12_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp12_EMRANK_LOOP;
3301090    set EMWS1.EndGrp12_EMRANK_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp12_EMRANK_LOOP temp;
3301091    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 180 observations read from the data set EMWS1.ENDGRP12_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP12_EMRANK_LOOP has 200 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3301092    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3301093    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3301094    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3301095    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3301096    set EMWS1.EndGrp12_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp12_EMSCOREDIST;
3301097    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3301098    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3301099    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS1.ENDGRP12_EMSCOREDIST.
NOTE: The data set WORK.TEMP has 19 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3301100    data EMWS1.EndGrp12_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp12_EMSCOREDIST_LOOP;
3301101    set EMWS1.EndGrp12_EMSCOREDIST_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp12_EMSCOREDIST_LOOP temp;
3301102    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 180 observations read from the data set EMWS1.ENDGRP12_EMSCOREDIST_LOOP.
NOTE: There were 19 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP12_EMSCOREDIST_LOOP has 199 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3301103    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3301104    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3301105    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3301106    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3301107    set EMWS1.EndGrp12_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp12_EMOUTFIT;
3301108    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3301109    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3301110    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP12_EMOUTFIT.
NOTE: The data set WORK.TEMP has 1 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3301111    data EMWS1.EndGrp12_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp12_EMOUTFIT_LOOP;
3301112    set EMWS1.EndGrp12_EMOUTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp12_EMOUTFIT_LOOP temp;
3301113    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.ENDGRP12_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP12_EMOUTFIT_LOOP has 10 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3301114    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3301115    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3301116    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3301117    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3301118    set EMWS1.EndGrp12_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp12_EMREPORTFIT;
3301119    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3301120    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3301121    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP12_EMREPORTFIT.
NOTE: The data set WORK.TEMP has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3301122    data EMWS1.EndGrp12_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp12_EMREPORTFIT_LOOP;
3301123    set EMWS1.EndGrp12_EMREPORTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp12_EMREPORTFIT_LOOP temp;
3301124    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 189 observations read from the data set EMWS1.ENDGRP12_EMREPORTFIT_LOOP.
NOTE: There were 21 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP12_EMREPORTFIT_LOOP has 210 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3301125    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3301126    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3301127    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3301128    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3301129    set EMWS1.EndGrp12_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp12_EMCLASSIFICATION;
3301130    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3301131    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3301132    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP12_EMCLASSIFICATION.
NOTE: The data set WORK.TEMP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3301133    data EMWS1.EndGrp12_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp12_EMCLASSIFICATION_LOOP;
3301134    set EMWS1.EndGrp12_EMCLASSIFICATION_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp12_EMCLASSIFICATION_LOOP temp;
3301135    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS1.ENDGRP12_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP12_EMCLASSIFICATION_LOOP has 40 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
