*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                16:28:43 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:28:38 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                16:28:38 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1GSQ_XB "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp12\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1GSQ_XB new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp12\EMGROUP\EMLOG_1.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:28:38 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp12\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp12\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp12\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp12\EMGROUP\EMOUTPUT_1.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:28:38 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp12\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp12\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp12\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp12\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
289773     proc freq data=EMWS1.EndGrp12_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.EndGrp12_VariableSet noprint;
289774     table ROLE*LEVEL/out=WORK.EndGrp12META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.EndGrp12META;
289775     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP12_VARIABLESET.
NOTE: The data set WORK.ENDGRP12META has 8 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.08 seconds
      cpu time            0.03 seconds
 
 
289776     proc print data=WORK.EndGrp12META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp12META label noobs;
289777     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
289778     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
289779     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
289780     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
289781     run;
 
NOTE: There were 8 observations read from the data set WORK.ENDGRP12META.
NOTE: The PROCEDURE PRINT printed page 187.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
289782     title10;
MPRINT(EM_DIAGRAM):   title10;
289783     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Neural4_TRAIN EMWS1.Neural4_TRAIN
EMWS1.Neural4_TRAIN EMWS1.Neural4_TRAIN EMWS1 Neural4_TRAIN
EMWS1.Neural4_TRAIN EMWS1.Neural4_TRAIN
EMWS1.Neural4_TRAIN EMWS1.Neural4_TRAIN EMWS1 Neural4_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Neural4_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural4_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
289812     data WORK.EndGrp12_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp12_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
289813     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
289814     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
289815        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
289816     set EMWS1.NEURAL4_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.NEURAL4_DEPVAR_DM( where=(_TYPE_="TARGET"));
289817     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
289818     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
289819     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
289820     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
289821     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
289822     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
289823     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
289824     end;
MPRINT(EM_DIAGRAM):   end;
289825     output;
MPRINT(EM_DIAGRAM):   output;
289826     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL4_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP12_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
289827     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
289828     proc print data=WORK.EndGrp12_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp12_EVENT noobs label;
289829     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
289830     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
289831     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
289832     run;
 
NOTE: There were 1 observations read from the data set WORK.ENDGRP12_EVENT.
NOTE: The PROCEDURE PRINT printed page 188.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
289833     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
289834     proc print data = EMWS1.Neural4_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Neural4_DepVar_DM noobs label;
289835     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
289836     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
289837     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
289838     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
289839     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
289840     run;
 
NOTE: There were 7 observations read from the data set EMWS1.NEURAL4_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 189.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
289841     title10;
MPRINT(EM_DIAGRAM):   title10;
289842     %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp12: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp12: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp12: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=297;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13481615978211;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=1906;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86518384021788;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Neural4_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Neural4_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Neural4_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Neural4_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
290316     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
290317     * EndGrp12: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * EndGrp12: Generation of macros and macro variables;
290318     * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
290319     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
290320     %let EMEXCEPTIONSTRING=;
290321     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
290322     * TRAIN: EndGrp12;
MPRINT(EM_DIAGRAM):   * TRAIN: EndGrp12;
290323     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
290324     %let EM_ACTION = TRAIN;
290325     %let syscc = 0;
290326     %macro main;
290327        %if %upcase(&EM_ACTION) = TRAIN %then %do;
290328
290329            filename temp catalog 'sashelp.emutil.endgp_train.source';
290330            %include temp;
290331            filename temp;
290332
290333            %train;
290334
290335        %end;
290336        %else
290337           %if %upcase(&EM_ACTION) = SCORE %then %do;
290338
290339            filename temp catalog 'sashelp.emutil.endgp_score.source';
290340            %include temp;
290341            filename temp;
290342
290343            %score;
290344        %end;
290345        %else
290346        %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
290347
290348            filename temp catalog 'sashelp.emutil.endgp_postloop.source';
290349            %include temp;
290350            filename temp;
290351
290352            %postloop;
290353
290354        %end;
290355
290356        %doendm:
290357     %mend main;
290358
290359     %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_TRAIN.SOURCE.
290360    +%macro copyModelDs(model=, key=);
290361    +   %let modelDs  = &em_lib..&model._&key;
290362    +   %let reportDs = &em_lib..&em_nodeid._&key;
290363    +   %if %sysfunc(exist(&modelDs)) %then %do;
290364    +       data &reportDs;
290365    +          length ModelId $16;
290366    +          retain ModelId "&model";
290367    +          set &modelDs;
290368    +       run;
290369    +   %end;
290370    +%mend copyModelDs;
290371    +
290372    +%macro traintarget(groupid=);
290373    +   %em_getname(key=emoutfit, type=DATA);
290374    +   %let targetname=;
290375    +   data _null_;
290376    +     set &em_lib..&groupid._&looptype;
290377    +     where _LOOP_ = &EMLOOPNUMBER;
290378    +     call symput('targetname', strip(_TARGET_));
290379    +   run;
290380    +   %let modelId =;
290381    +   data _null_;
290382    +      set &em_import_data_eminfo;
290383    +      where key = 'MODEL' and TARGET = "&targetname";
290384    +      call symput('modelId',   strip(data));
290385    +   run;
290386    +   %if "&modelId" ne "" %then %do;
290387    +       %copyModelDs(model=&modelid, key=EMRANK);
290388    +       %copyModelDs(model=&modelid, key=EMSCOREDIST);
290389    +       %copyModelDs(model=&modelid, key=EMOUTFIT);
290390    +       %copyModelDs(model=&modelid, key=EMCLASSIFICATION);
290391    +       %copyModelDs(model=&modelid, key=EMEVENREPORT);
290392    +       %copyModelDs(model=&modelid, key=EMRESIDUALS);
290393    +       %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
290394    +   %end;
290395    +
290396    +   %doendtgp:
290397    +%mend;
290398    +
290399    +%macro trainboost(groupid=);
290400    +
290401    +   %let boostinfoDs  = &em_lib..%sysfunc(strip(&groupid))_boostinfo;
290402    +   %let boostscoreDs = &em_lib..%sysfunc(strip(&groupid))_boostscore;
290403    +
290404    +   data _null_;
290405    +      retain index 0;
290406    +      set &boostinfoDs;
290407    +      call symput('targetname', strip(_target_));
290408    +   run;
290409    +
290410    +   %if "&em_import_data_eminfo" ne "" and %sysfunc(exist(&em_import_data_eminfo)) %then %do;
290411    +       %let decmeta = ;
290412    +       data _null_;
290413    +          set &em_import_data_eminfo;
290414    +          where (key='DECMETA' and TARGET="&targetname");
290415    +          call symput('DECMETA', strip(data));
290416    +       run;
290417    +       %if "&decmeta" eq "" %then %do;
290418    +           %let emexceptionstring = EMTOOL.NOTARGETMODELED;
290419    +           %goto doendtb;
290420    +       %end;
290421    +
290422    +       %let predictedVars=;
290423    +       data _null_;
290424    +          set &decmeta;
290425    +          if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
290426    +          else
290427    +          if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
290428    +          else
290429    +          if _TYPE_ = 'PREDICTED' then call symput('predictedvars', strip(symget('predictedVars'))!!' '!!strip(variable));
290430    +       run;
290431    +       %if %index(&EM_DEBUG, _ALL_) %then %do;
290432    +           %put GROUPID: &GROUPID DECMETA: &DECMETA FROMVAR: &FROMVAR INTO: &INTOVAR PREDICTED: &PREDICTEDVARS;
290433    +       %end;
290434    +   %end;
290435    +
290436    +   * ;
290437    +   * ENDGROUP &NODEID : Boosting scoring ;
290438    +   * ;
290439    +   data &em_lib..&groupid._boostscore;
290440    +      set &em_import_data;
290441    +      keep _WARN_ &targetname &fromvar &intovar &predictedvars;
290442    +      %if "%em_freq" ne "" %then %do ;
290443    +          keep %em_freq ;
290444    +      %end ;
290445    +   run;
290446    +   %em_model(TARGET=&targetname , ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
290447    +
290448    +   %doendtb:
290449    +
290450    +%mend trainboost;
290451    +
290452    +%macro trainbag(groupid=);
290453    +   %let baginfoDs  = &em_lib..%sysfunc(strip(&groupid))_baginfo;
290454    +   data _null_;
290455    +      retain index 0;
290456    +      set &baginfoDs;
290457    +      call symput('targetname', strip(_target_));
290458    +   run;
290459    +
290460    +   %let decmeta = ;
290461    +   data _null_;
290462    +       set &em_import_data_eminfo;
290463    +       where (key='DECMETA' and TARGET="&targetname");
290464    +       call symput('DECMETA', strip(data));
290465    +   run;
290466    +   %if "&decmeta" eq "" %then %do;
290467    +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
290468    +       %goto doendtg;
290469    +   %end;
290470    +
290471    +   %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
290472    +
290473    +   %doendtg:
290474    +%mend trainbag;
290475    +
290476    +%macro traingroup(groupid=);
290477    +   %let targetNum = 0;
290478    +
290479    +   data _temp1;
290480    +      set &em_lib..&groupid._eminfo;
290481    +      where key='MODEL';
290482    +   run;
290483    +   data _temp2;
290484    +      set &em_import_data_eminfo;
290485    +      where key='MODEL';
290486    +   run;
290487    +   proc sort data=_temp1; by TARGET DATA;
290488    +   proc sort data=_temp2; by TARGET DATA;
290489    +   data _temp2;
290490    +      merge _temp1(in=_a) _temp2(in=_b);
290491    +      by TARGET DATA;
290492    +      if ^_a and _b then output;
290493    +   run;
290494    +   data _null_;
290495    +      retain index 0;
290496    +      set _temp2 end=eof;
290497    +      index +1;
290498    +      where key ='MODEL';
290499    +      call symput('MODELID'!!strip(put(index, best.)), strip(data));
290500    +      call symput('TARGET'!!strip(put(index, best.)), strip(target));
290501    +      if eof then
290502    +         call symput('targetnum', strip(put(index, best.)));
290503    +   run;
290504    +   proc datasets lib=work nolist;
290505    +      delete _temp1 _temp2;
290506    +   run;
290507    +   %if "&targetNum" eq "0" %then %goto doendtgp;
290508    +
290509    +   %let modelString =;
290510    +   %do i=1 %to &targetnum;
290511    +        %if ^%sysfunc(indexw(&modelString, &&modelid&i)) %then %do;
290512    +            %copyModelDs(model=&&modelid&i, key=EMRANK);
290513    +            %copyModelDs(model=&&modelid&i, key=EMSCOREDIST);
290514    +            %copyModelDs(model=&&modelid&i, key=EMOUTFIT);
290515    +            %copyModelDs(model=&&modelid&i, key=EMCLASSIFICATION);
290516    +            %copyModelDs(model=&&modelid&i, key=EMEVENREPORT);
290517    +            %copyModelDs(model=&&modelid&i, key=EMRESIDUALS);
290518    +            %let modelString = &modelString &&modelid&i;
290519    +       %end;
290520    +       %em_model(TARGET=&&target&i, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
290521    +   %end;
290522    +
290523    +   %doendtgp:
290524    +
290525    +%mend traingroup;
290526    +
290527    +%macro getSize(data=, nobsvar=);
290528    +
290529    +   %if %sysfunc(exist(&data, DATA)) %then %do;
290530    +       %let dsid = %sysfunc(open(&data));
290531    +       %if &dsid %then %do;
290532    +           %let &&nobsvar = %sysfunc(attrn(&dsid, NLOBS));
290533    +           %let dsid = %sysfunc(close(&dsid));
290534    +       %end;
290535    +   %end;
290536    +    %if %sysfunc(exist(&data, VIEW)) %then %do;
290537    +        proc sql;
290538    +           reset noprint;
290539    +           select count(*) into :&nobsvar from &data;
290540    +        quit;
290541    +   %end;
290542    +
290543    +%mend getsize;
290544    +
290545    +%macro train;
290546    +
290547    +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %do;
290548    +      %let EM_TOOLTYPE=UTILITY;
290549    +      %if %sysfunc(exist(&em_data_eminfo)) %then %do;
290550    +          proc delete data=&em_data_eminfo;
290551    +          run;
290552    +      %end;
290553    +      %goto doendtr;
290554    +   %end;
290555    +
290556    +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
290557    +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
290558    +       %goto doendtr;
290559    +   %end;
290560    +
290561    +   %let xgroupid = ;
290562    +   data _null_;
290563    +      set &em_import_data_eminfo;
290564    +      where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
290565    +      call symput('XGROUPID',  strip(data));
290566    +      call symput('LOOPTYPE', strip(key));
290567    +   run;
290568    +
290569    +   %if "&looptype" eq "BOOSTINFO" %then %do;
290570    +       %let nDataObs=0;
290571    +       %getSize(data=&em_import_data, nobsvar=nDataObs);
290572    +
290573    +       %let nStartObs=0;
290574    +       %getsize(data=&em_lib..&xgroupid._train, nobsvar=nStartObs);
290575    +
290576    +       %if &nDataObs ne &nStartObs %then %do;
290577    +           %let emexceptionstring = EMTOOL.BOOSTERRORNOBSCHANGED;
290578    +           %goto doendtr;
290579    +       %end;
290580    +
290581    +       %trainboost(groupid=&xgroupid);
290582    +   %end;
290583    +   %else
290584    +   %if "&looptype" eq "BAGINFO" %then %do;
290585    +       %trainbag(groupid=&xgroupid);
290586    +   %end;
290587    +   %else
290588    +   %if "&looptype" eq "GROUPINFO" %then %do;
290589    +       %traingroup(groupid=&xgroupid);
290590    +   %end;
290591    +   %else
290592    +   %if "&looptype" eq "TARGETINFO" %then %do;
290593    +       %traintarget(groupid=&xgroupid);
290594    +   %end;
290595    +
290596    +   data &em_data_eminfo;
290597    +      length TARGET KEY $32  DATA $43;
290598    +      TARGET=''; KEY='ENDGROUP'; DATA="&em_nodeid"; output;
290599    +   run;
290600    +
290601    +   %let EM_TOOLTYPE=MODEL;
290602    +
290603    +   %doendtr:
290604    +
290605    +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Neural4_EMINFO;
MPRINT(TRAIN):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(TRAIN):   call symput('XGROUPID', strip(data));
MPRINT(TRAIN):   call symput('LOOPTYPE', strip(key));
MPRINT(TRAIN):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL4_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp1;
MPRINT(TRAINGROUP):   set EMWS1.Grp12_eminfo;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.GRP12_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   set EMWS1.Neural4_EMINFO;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL4_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp1;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp2;
MPRINT(TRAINGROUP):   by TARGET DATA;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   merge _temp1(in=_a) _temp2(in=_b);
MPRINT(TRAINGROUP):   by TARGET DATA;
MPRINT(TRAINGROUP):   if ^_a and _b then output;
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _null_;
MPRINT(TRAINGROUP):   retain index 0;
MPRINT(TRAINGROUP):   set _temp2 end=eof;
MPRINT(TRAINGROUP):   index +1;
MPRINT(TRAINGROUP):   where key ='MODEL';
MPRINT(TRAINGROUP):   call symput('MODELID'!!strip(put(index, best.)), strip(data));
MPRINT(TRAINGROUP):   call symput('TARGET'!!strip(put(index, best.)), strip(target));
MPRINT(TRAINGROUP):   if eof then call symput('targetnum', strip(put(index, best.)));
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc datasets lib=work nolist;
MPRINT(TRAINGROUP):   delete _temp1 _temp2;
MPRINT(TRAINGROUP):   run;
 
NOTE: Deleting WORK._TEMP1 (memtype=DATA).
NOTE: Deleting WORK._TEMP2 (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(COPYMODELDS):   data EMWS1.EndGrp12_EMRANK;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural4";
MPRINT(COPYMODELDS):   set EMWS1.Neural4_EMRANK;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL4_EMRANK.
NOTE: The data set EMWS1.ENDGRP12_EMRANK has 20 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp12_EMSCOREDIST;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural4";
MPRINT(COPYMODELDS):   set EMWS1.Neural4_EMSCOREDIST;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL4_EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP12_EMSCOREDIST has 20 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp12_EMOUTFIT;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural4";
MPRINT(COPYMODELDS):   set EMWS1.Neural4_EMOUTFIT;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL4_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP12_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp12_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural4";
MPRINT(COPYMODELDS):   set EMWS1.Neural4_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL4_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP12_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   length DATA $65 TARGET $32 PREDICTED ASSESS DECSCORECODE FITSTATISTICS CLASSIFICATION RESIDUALS $1;
MPRINT(EM_MODEL):   data = "";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "N";
MPRINT(EM_MODEL):   decscorecode = "N";
MPRINT(EM_MODEL):   fitstatistics = "N";
MPRINT(EM_MODEL):   classification = "N";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   run;
 
NOTE: The data set WORK.EM_USER_MODEL has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.EndGrp12_EMINFO;
MPRINT(TRAIN):   length TARGET KEY $32 DATA $43;
MPRINT(TRAIN):   TARGET='';
MPRINT(TRAIN):   KEY='ENDGROUP';
MPRINT(TRAIN):   DATA="EndGrp12";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   run;
 
NOTE: The data set EMWS1.ENDGRP12_EMINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: EndGrp12;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
290606     *------------------------------------------------------------*;
290607     * End TRAIN: EndGrp12;
290608     *------------------------------------------------------------*;
290609
 
290610     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
290611     * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
290612     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
290613     ;
MPRINT(EM_DIAGRAM):   ;
290614     ;
MPRINT(EM_DIAGRAM):   ;
290615     ;
MPRINT(EM_DIAGRAM):   ;
290616     ;
MPRINT(EM_DIAGRAM):   ;
290617     quit;
MPRINT(EM_DIAGRAM):   quit;
290618     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
290619     * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
290620     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
290621     /*; *"; *'; */
290622     ;
MPRINT(EM_DIAGRAM):   ;
290623     run;
MPRINT(EM_DIAGRAM):   run;
290624     quit;
MPRINT(EM_DIAGRAM):   quit;
290625     /* Reset EM Options */
290626     options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
290627     options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
290628     goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:28:41 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                16:28:41 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O276PXIA "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp12\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O276PXIA new;
MPRINT(EM_DIAGRAM):   run;
290730     %let EMEXCEPTIONSTRING=;
290731     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
290732     * SCORE: EndGrp12;
MPRINT(EM_DIAGRAM):   * SCORE: EndGrp12;
290733     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
290734     %let EM_ACTION = SCORE;
290735     %let syscc = 0;
290736     %macro main;
290737        %if %upcase(&EM_ACTION) = TRAIN %then %do;
290738
290739            filename temp catalog 'sashelp.emutil.endgp_train.source';
290740            %include temp;
290741            filename temp;
290742
290743            %train;
290744
290745        %end;
290746        %else
290747           %if %upcase(&EM_ACTION) = SCORE %then %do;
290748
290749            filename temp catalog 'sashelp.emutil.endgp_score.source';
290750            %include temp;
290751            filename temp;
290752
290753            %score;
290754        %end;
290755        %else
290756        %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
290757
290758            filename temp catalog 'sashelp.emutil.endgp_postloop.source';
290759            %include temp;
290760            filename temp;
290761
290762            %postloop;
290763
290764        %end;
290765
290766        %doendm:
290767     %mend main;
290768
290769     %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_SCORE.SOURCE.
290770    +%macro scoreTables(data=, out=, scoreref=, prescore=);
290772    +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW))) %then %do;
290773    +       data &out / view=&out;
290774    +          set &data
290776    +          %if "&prescore" = "Y" %then %do;
290777    +              (obs=1)
290778    +          %end;
290780    +          ;
290782    +          %inc &scoreref;
290784    +          %if "&prescore" eq "Y" %then %do;
290785    +              drop I_: R_:;
290786    +          %end;
290788    +       run;
290789    +   %end;
290791    +%mend scoretables;
290793    +%macro boostbagcode(groupid=, type=, EnsembleIndex=);
290794    +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
290795    +   data _null_;
290796    +      retain index 0;
290797    +      set &infoDs;
290798    +      call symput('targetname', strip(_target_));
290799    +      call symput('endloopnum', strip(_loop_));
290800    +   run;
290802    +   %let endgrp_decmeta=;
290803    +   %let endgrp_decdata=;
290805    +   data _null_;
290806    +      set &em_import_data_eminfo;
290807    +      where key in('MODEL', 'DECMETA', 'DECDATA') and TARGET="&targetname";
290808    +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
290809    +      else
290810    +      if key='DECDATA' then call symput('ENDGRP_DECDATA', strip(data));
290811    +      else call symput('MODELID', strip(data));
290812    +   run;
290814    +   %let headerString= Boosting;
290815    +   %let prefixString= _BoostVar;
290817    +   %if "&type" = "BAGINFO" %then %do;
290818    +        %let headerString = Bagging;
290819    +        %let prefixString= _BagVar;
290820    +   %end;
290822    +   %let targetType=;
290823    +   %let predictedVars=;
290824    +   data _null_;
290825    +      retain index;
290826    +      set &endgrp_decmeta end=eof;
290827    +      length tempvar $200;
290828    +      if _TYPE_='TARGET' then call symput('TARGETTYPE', strip(level));
290829    +      else
290830    +      if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
290831    +      else
290832    +      if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
290833    +      else
290834    +      if _TYPE_ = 'PREDICTED' then do;
290835    +         index+1;
290836    +         call symput('predvars'!!strip(put(index, best.)), strip(variable));
290837    +         tempvar = strip("&em_nodeid")!!'_'!!strip(variable);
290838    +         if length(tempvar)<=32 then call symput('tempvars'!!strip(put(index, best.)), strip(tempvar));
290839    +         else call symput('tempvars'!!strip(put(index, best.)), strip("&prefixString")!!strip(put(index, best.)));
290840    +      end;
290841    +      if eof then
290842    +         call symput('prednum', strip(put(index, best.)));
290843    +   run;
290845    +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
290846    +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
290848    +   filename loopflow "&em_user_loopflowcode";
290849    +   filename looppub "&em_user_looppubcode";
290851    +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
290852    +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
290854    +   %if "&emloopnumber" = "1" %then %do;
290855    +       data _null_;
290856    +          rc = fdelete('loopflow');
290857    +          rc = fdelete('looppub');
290858    +       run;
290859    +       data _null_;
290860    +          file loopflow;
290861    +          put "&em_codebar;";
290862    +          put "* &em_nodeid: ;" ;
290863    +          put "* User: &sysuserid;";
290864    +          put "* Date: &sysdate: &systime;";
290865    +          put "&em_codebar ;";
290866    +          put "* Ensemble Code;";
290867    +          put "&em_codebar ;";
290868    +          put "* &headerString: Loop=1;";
290869    +          put "* Temporary Variables;";
290870    +          %do i= 1 %to &prednum;
290871    +              put "drop &&tempvars&i;";
290872    +              put "&&tempvars&i = 0;";
290873    +          %end;
290874    +       run;
290875    +       %em_copyfile(infref=loopflow, outfref=looppub);
290876    +   %end;
290878    +   %let j=&emloopnumber;
290879    +   %do i = 1 %to &loopcodenum;
290880    +       %let fsourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
290881    +       %let psourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
290883    +       %if (&&loopnode&i eq &em_nodeid ) or
290884    +           ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex )) %then %do;
290885    +           data _null_;
290886    +              file loopflow mod;
290887    +              put "&em_codebar;";
290888    +              put "* &&loopnode&i: &&loopdesc&i;" ;
290889    +              put "* User: &sysuserid;";
290890    +              put "* Date: &sysdate: &systime;";
290891    +              put "* &headerString: Loop=&j;";
290892    +              put "&em_codebar;";
290893    +           run;
290894    +           data _null_;
290895    +              file looppub mod;
290896    +              put "&em_codebar;";
290897    +              put "* &&loopnode&i: &&loopdesc&i;" ;
290898    +              put "* User: &sysuserid;";
290899    +              put "* Date: &sysdate: &systime;";
290900    +              put "* &headerString: Loop=&j;";
290901    +              put "&em_codebar;";
290902    +           run;
290903    +       %end;
290905    +       %if &&loopnode&i ne &em_nodeid %then %do;
290906    +           %if (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex ) %then %do;
290907    +               filename x catalog "&fsourceEntry";
290908    +               %em_copyfile(infref=x, outfref=loopflow, append=Y);
290909    +               filename x;
290911    +               filename y catalog "&psourceEntry";
290912    +               %em_copyfile(infref=y, outfref=looppub, append=Y);
290913    +               filename y;
290914    +           %end;
290915    +       %end;
290916    +       %else %do;
290917    +           %if "&j" ne "1" %then %do;
290918    +               %let weight = %eval(&j-1);
290919    +               data _null_;
290920    +                  file loopflow mod;
290921    +                  put "&em_codebar;";
290922    +                  %if "&j" ne "&endloopnum" %then %do;
290923    +                      put "* &headerString: accumulate probabilities for iteration: &j;";
290924    +                  %end;
290925    +                  %else %do;
290926    +                      put "* &headerString: accumulate final probabilities;";
290927    +                  %end;
290928    +                  put "&em_codebar;";
290929    +                  %do k=1 %to &prednum;
290930    +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
290931    +                  %end;
290932    +               run;
290933    +               data _null_;
290934    +                  file looppub mod;
290935    +                  put "&em_codebar;";
290936    +                  %if "&j" ne "&endloopnum" %then %do;
290937    +                      put "* &headerString: accumulate probabilities for iteration: &j;";
290938    +                  %end;
290939    +                  %else %do;
290940    +                      put "* &headerString: accumulate final probabilities;";
290941    +                  %end;
290942    +                  %do k=1 %to &prednum;
290943    +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
290944    +                  %end;
290945    +               run;
290946    +           %end;
290947    +           %if "&j" ne "&endloopnum" %then %do;
290948    +               data _null_;
290949    +                  file loopflow mod;
290950    +                  put "&em_codebar;";
290951    +                  put "* &headerString: Saving Probabilities for Next Iteration;";
290952    +                  put "&em_codebar;";
290953    +               %do k=1 %to &prednum;
290954    +                  put "&&tempvars&k = &&predvars&k;";
290955    +               %end;
290956    +               run;
290957    +               data _null_;
290958    +                  file looppub mod;
290959    +                  put "&em_codebar;";
290960    +                  put "* &headerString: Saving Probabilities for Next Iteration;";
290961    +                  put "&em_codebar;";
290962    +               %do k=1 %to &prednum;
290963    +                   put "&&tempvars&k = &&predvars&k;";
290964    +               %end;
290965    +               run;
290966    +           %end;
290968    +       %end;
290969    +   %end;
290971    +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
290972    +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
290974    +   filename loopflow;
290975    +   filename looppub;
290976    +   filename empub;
290978    +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
290979    +   %let gpTrain=;
290980    +   %let gpValidate=;
290981    +   %let gpTest=;
290983    +   data _null_;
290984    +      set &groupImportDs;
290985    +      select(upcase(port));
290986    +          when('DATA')     call symput('gpTrain',    strip(dataset));
290987    +          when('VALIDATE') call symput('gpValidate', strip(dataset));
290988    +          when('TEST')     call symput('gpTest',     strip(dataset));
290989    +       otherwise;
290990    +      end;
290991    +   run;
290993    +   %if "&gpTrain" ne "" %then %do;
290995    +       %scoreTables(data=&em_lib..&gpTrain,     out=&em_export_train,    scoreref=emflow, prescore=Y);
290997    +       %if &targetType ne INTERVAL %then %do;
290998    +           %makeClassificationVars(target=&targetname, data=&em_export_train, decmeta=&endgrp_decmeta, publish=N, fref=emflow);
290999    +       %end;
291001    +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
291003    +       %let decflow = %sysfunc(Pathname(WORK))&em_dsep._decflow.sas;
291005    +       %em_decidecode(data=&em_export_train , decdata=&ENDGRP_DECDATA , decmeta=&ENDGRP_DECMETA ,
291006    +                                                           noresfile=, resfile=%nrbquote(&decflow));
291008    +       filename _decflow "&decflow";
291009    +       %em_copyfile(infref=_decflow, outfref=emflow, append=Y);
291010    +       filename _decflow;
291012    +   %end;
291014    +   %if "&gpTrain" ne "" %then
291015    +        %scoreTables(data=&em_lib..%sysfunc(strip(&gpTrain)),     out=&em_export_train,    scoreref=emflow);
291016    +   %if "&gpValidate" ne "" %then
291017    +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),  out=&em_export_validate, scoreref=emflow);
291018    +   %if "&gpTest" ne "" %then
291019    +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),      out=&em_export_test,     scoreref=emflow);
291021    +   filename emflow;
291023    +%mend boostbagcode;
291025    +%macro score;
291027    +   filename _dec catalog "sashelp.emutil.em_decidecode.source";
291028    +   %inc _dec;
291029    +   filename _dec;
291031    +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %goto doendpl;
291033    +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
291034    +       %let emexceptionstring = nomodeltarget;
291035    +       %goto doendpl;
291036    +   %end;
291038    +   %LET GROUPID=;
291039    +   %let LOOPTYPE=;
291040    +   data _null_;
291041    +      set &em_import_data_eminfo;
291042    +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
291043    +      call symput('GROUPID',   strip(data));
291044    +      call symput('LOOPTYPE', strip(key));
291045    +   run;
291047    +   %em_getname(key=PATH, type=DATA);
291049    +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
291050    +   %include temp;
291051    +   filename temp;
291053    +   %em_gettrainpath(NODEID=&em_nodeid, OUTPATH= score_path);
291055    +   %if &emloopnumber = 1 and %sysfunc(exist(&em_user_path)) %then %do;
291056    +       %let deleteString = &em_nodeid._path;
291057    +       proc datasets lib=&em_lib nolist;
291058    +          delete &deleteString;
291059    +       run;
291060    +       quit;
291061    +   %end;
291063    +   %if ^%sysfunc(exist(WORK.score_path)) %then %goto doendpl;
291065    +   data score_path;
291066    +      retain LOOPID &emloopnumber;
291067    +      set score_path;
291068    +   run;
291070    +   proc append base=&em_user_path  data=score_path;
291071    +   run;
291073    +   %let EnsembleIndex=0;
291074    +   data _null_;
291075    +      retain index 0 ensembleIndex 0;
291076    +      set score_Path end=eof;
291077    +      if nodelabel = "&groupid" or index then do;
291078    +         index + 1;
291079    +         call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
291080    +         call symput('loopdesc'!!strip(put(index, best.)), strip(component));
291081    +      end;
291082    +      if component='Ensemble' then ensembleIndex = index;
291083    +      if eof then do;
291084    +         call symput('loopcodenum', strip(put(index, best.)));
291085    +         call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
291086    +      end;
291087    +   run;
291089    +   proc datasets lib=work nolist;
291090    +      delete score_Path;
291091    +   run;
291092    +   quit;
291094    +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
291095    +       %boostbagcode(groupid=&groupid, type=&looptype, EnsembleIndex=&EnsembleIndex);
291097    +   %doendpl:
291099    +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):   filename _dec catalog "sashelp.emutil.em_decidecode.source";
NOTE: %INCLUDE (level 1) file _DEC is file SASHELP.EMUTIL.EM_DECIDECODE.SOURCE.
291100    +/*
291101    +       MACRO: EM_DECIDECODE
291102    +
291103    +       PURPOSE: Generate EM Decide Score Code for non-interval target.
291104    +       SUPPORT: Taiyeong Lee
291105    +
291106    +       HISTORY: 01OCT04 Initial code
291107    +       NOTE:    All parameters are optional, call %EM_DECIDECODE()
291108    +                to add the corresponding decision code
291109    +
291110    +*/
291111    +
291112    +
291113    +%macro  EM_DECIDECODE(data= , decdata= , decmeta= , noresfile=, resfile=);
291114    + %global m_data    m_decdata   m_decmeta  m_noresfile  m_resfile ;
291115    +
291116    +    %do;
291117    +    %let m_data      = &data;
291118    +    %let m_decdata   = &decdata;
291119    +    %let m_decmeta   = &decmeta;
291120    +    %let m_noresfile = &noresfile;
291121    +    %let m_resfile   = &resfile;
291122    +    dm "afa c=sashelp.emutil.decidecode.scl";
291123    +  %end;
291124    +%mend EM_DECIDECODE;
291125    +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename _dec;
NOTE: Fileref _DEC has been deassigned.
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Neural4_EMINFO;
MPRINT(SCORE):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(SCORE):   call symput('GROUPID', strip(data));
MPRINT(SCORE):   call symput('LOOPTYPE', strip(key));
MPRINT(SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL4_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
291126    +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
291127    +   proc display c=sashelp.emcore.pathscorecode.scl;
291128    +   run;
291129    +%mend EM_GETTRAINPATH;
291130    +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
291131     data score_path;
MPRINT(EM_GETTRAINPATH):   data score_path;
291132     length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
291133     nodelabel="FIMPORT";
MPRINT(EM_GETTRAINPATH):   nodelabel="FIMPORT";
291134     parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
291135     description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
291136     component="FileImport";
MPRINT(EM_GETTRAINPATH):   component="FileImport";
291137     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
291138     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
291139     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
291140     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
291141     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
291142     output;
MPRINT(EM_GETTRAINPATH):   output;
291143     nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
291144     parent="FIMPORT";
MPRINT(EM_GETTRAINPATH):   parent="FIMPORT";
291145     description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
291146     component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
291147     tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
291148     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
291149     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
291150     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
291151     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
291152     output;
MPRINT(EM_GETTRAINPATH):   output;
291153     nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
291154     parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
291155     description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
291156     component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
291157     tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
291158     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
291159     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
291160     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
291161     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
291162     output;
MPRINT(EM_GETTRAINPATH):   output;
291163     nodelabel="EMCODE2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE2";
291164     parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
291165     description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
291166     component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
291167     tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
291168     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
291169     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
291170     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
291171     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
291172     output;
MPRINT(EM_GETTRAINPATH):   output;
291173     nodelabel="Meta2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta2";
291174     parent="EMCODE2";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE2";
291175     description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
291176     component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
291177     tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
291178     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
291179     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
291180     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
291181     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
291182     output;
MPRINT(EM_GETTRAINPATH):   output;
291183     nodelabel="EMCODE3";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE3";
291184     parent="Meta2";
MPRINT(EM_GETTRAINPATH):   parent="Meta2";
291185     description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
291186     component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
291187     tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
291188     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
291189     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
291190     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
291191     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
291192     output;
MPRINT(EM_GETTRAINPATH):   output;
291193     nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
291194     parent="EMCODE3";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE3";
291195     description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
291196     component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
291197     tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
291198     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
291199     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
291200     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
291201     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
291202     output;
MPRINT(EM_GETTRAINPATH):   output;
291203     nodelabel="Meta";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta";
291204     parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
291205     description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
291206     component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
291207     tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
291208     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
291209     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
291210     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
291211     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
291212     output;
MPRINT(EM_GETTRAINPATH):   output;
291213     nodelabel="Trans2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans2";
291214     parent="Meta";
MPRINT(EM_GETTRAINPATH):   parent="Meta";
291215     description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
291216     component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
291217     tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
291218     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
291219     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
291220     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
291221     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
291222     output;
MPRINT(EM_GETTRAINPATH):   output;
291223     nodelabel="Grp12";
MPRINT(EM_GETTRAINPATH):   nodelabel="Grp12";
291224     parent="Trans2";
MPRINT(EM_GETTRAINPATH):   parent="Trans2";
291225     description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
291226     component="StartGroup";
MPRINT(EM_GETTRAINPATH):   component="StartGroup";
291227     tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
291228     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
291229     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
291230     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
291231     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
291232     output;
MPRINT(EM_GETTRAINPATH):   output;
291233     nodelabel="Neural4";
MPRINT(EM_GETTRAINPATH):   nodelabel="Neural4";
291234     parent="Grp12";
MPRINT(EM_GETTRAINPATH):   parent="Grp12";
291235     description="Neural";
MPRINT(EM_GETTRAINPATH):   description="Neural";
291236     component="NeuralNetwork";
MPRINT(EM_GETTRAINPATH):   component="NeuralNetwork";
291237     tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
291238     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
291239     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
291240     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
291241     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
291242     output;
MPRINT(EM_GETTRAINPATH):   output;
291243     nodelabel="EndGrp12";
MPRINT(EM_GETTRAINPATH):   nodelabel="EndGrp12";
291244     parent="Neural4";
MPRINT(EM_GETTRAINPATH):   parent="Neural4";
291245     description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
291246     component="EndGroup";
MPRINT(EM_GETTRAINPATH):   component="EndGroup";
291247     tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
291248     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
291249     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
291250     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
291251     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
291252     output;
MPRINT(EM_GETTRAINPATH):   output;
291253     run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK.SCORE_PATH has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(SCORE):  ;
MPRINT(SCORE):   data score_path;
MPRINT(SCORE):   retain LOOPID 1;
MPRINT(SCORE):   set score_path;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set WORK.SCORE_PATH has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):   proc append base=EMWS1.EndGrp12_PATH data=score_path;
MPRINT(SCORE):   run;
 
NOTE: Appending WORK.SCORE_PATH to EMWS1.ENDGRP12_PATH.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set EMWS1.ENDGRP12_PATH has 12 observations and 10 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   retain index 0 ensembleIndex 0;
MPRINT(SCORE):   set score_Path end=eof;
MPRINT(SCORE):   if nodelabel = "Grp12" or index then do;
MPRINT(SCORE):   index + 1;
MPRINT(SCORE):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(SCORE):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(SCORE):   end;
MPRINT(SCORE):   if component='Ensemble' then ensembleIndex = index;
MPRINT(SCORE):   if eof then do;
MPRINT(SCORE):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(SCORE):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(SCORE):   end;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc datasets lib=work nolist;
MPRINT(SCORE):   delete score_Path;
MPRINT(SCORE):   run;
 
NOTE: Deleting WORK.SCORE_PATH (memtype=DATA).
MPRINT(SCORE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: EndGrp12;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291254     *------------------------------------------------------------*;
291255     * End SCORE: EndGrp12;
291256     *------------------------------------------------------------*;
291257
 
291258     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
291259     * EndGrp12: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * EndGrp12: Scoring DATA data;
291260     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291261     data EMWS1.EndGrp12_TRAIN
291262     / view=EMWS1.EndGrp12_TRAIN
291263     ;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp12_TRAIN / view=EMWS1.EndGrp12_TRAIN ;
291264     set EMWS1.Neural4_TRAIN
291265     ;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_TRAIN ;
291266     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.ENDGRP12_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.NEURAL4_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
291267     quit;
 
291269     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
291270     * EndGrp12: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp12: Computing metadata for TRAIN data;
291271     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.ENDGRP12_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp12\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp12_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp12_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp12_TRAIN out=WORK.M1UZDF85 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1UZDF85;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1UZDF85(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1UZDF85;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1UZDF85;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3G0BFCI NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3G0BFCI;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3G0BFCI;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M31AXCAW(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3G0BFCI;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3G0BFCI;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3G0BFCI;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3G0BFCI;
MPRINT(EMADVISECOLUMNS):   set WORK.M3G0BFCI;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Neural4_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural4_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp12_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp12";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp12";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp12";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp12: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
291617     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
291618     set EMWS1.EndGrp12_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp12_EMINFO;
291619     where DATA='EndGrp12' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp12' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
291620     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP12_EMINFO.
      WHERE (DATA='EndGrp12') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
291621     data EMWS1.EndGrp12_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp12_EMINFO;
291622     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
291623     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
291624     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.ENDGRP12_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
291628     run;
291629     data EMWS1.EndGrp12_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp12_EMINFO;
291630     set EMWS1.EndGrp12_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp12_EMINFO WORK.MODELTEMP_INFO;
291631     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP12_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP12_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
291632     proc sort data = EMWS1.EndGrp12_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp12_EMINFO NOTHREADS;
291633     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
291634     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP12_EMINFO.
NOTE: The data set EMWS1.ENDGRP12_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
291635     proc sort data = EMWS1.Neural4_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Neural4_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
291636     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
291637     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL4_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
291638     proc sort data = EMWS1.EndGrp12_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp12_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
291639     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
291640     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP12_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291641     data EMWS1.EndGrp12_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp12_EMINFO;
291642     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
291643     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
291644     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP12_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
291645     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
291646     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
291647     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
291648     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS1.ENDGRP12_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:28:42 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                02 June 2018
Time:                16:28:42 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3UYK26X "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp12\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3UYK26X new;
MPRINT(EM_DIAGRAM):   run;
291672     data EMWS1.EndGrp12_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp12_EMOUTFIT;
291673     set EMWS1.EndGrp12_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp12_EMOUTFIT;
291674     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
291675     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
291676     if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
291677     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP12_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP12_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
291678     proc sort data=EMWS1.EndGrp12_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp12_EMREPORTFIT nothreads;
291679     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
291680     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP12_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP12_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
291681     %let _EMwarndup = 0;
291682     %let _EMtargetdup =;
291683     %let _EMASEtargetdup =;
291684     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
291685     set EMWS1.EndGrp12_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp12_EMOUTFIT;
291686     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
291687     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
291688     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
291689     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
291690     end;
MPRINT(EM_DIAGRAM):   end;
291691     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP12_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291692     proc sort data=EMWS1.Neural4_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural4_CMeta_TRAIN out=WORK.SUBSETINMETA;
291693     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291694     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL4_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 20 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
291695     proc sort data=EMWS1.EndGrp12_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp12_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
291696     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291697     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP12_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 20 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
291698     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
291699     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
291700     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291701     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 20 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291702     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
291703     set EMWS1.EndGrp12_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp12_CMeta_TRAIN;
291704     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
291705     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP12_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
291706     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
291707     set EMWS1.EndGrp12_TRAIN(keep=
291708     F_DepVar
291709     I_DepVar
291710     P_DepVar0
291711     P_DepVar1
291712     R_DepVar0
291713     R_DepVar1
291714     U_DepVar
291715     _WARN_
291716     DepVar
291717     );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp12_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
291718     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2203 observations read from the data set EMWS1.GRP12_TRAIN.
NOTE: View EMWS1.ENDGRP12_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.09 seconds
 
NOTE: There were 2203 observations read from the data set EMWS1.NEURAL4_TRAIN.
NOTE: There were 2203 observations read from the data set EMWS1.ENDGRP12_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2203 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp12_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
295905     %let _cn = %sysfunc(getoption(CENTER));
295906     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
295907     proc print data=EMWS1.EndGrp12_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp12_EMREPORTFIT noobs label;
295908     var STAT LABEL TRAIN
295909     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
295910     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
295911     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
295912     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
295913     run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP12_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 190.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
295914     title10;
MPRINT(EM_DIAGRAM):   title10;
295915     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
295916     proc sort data=EMWS1.EndGrp12_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp12_EMCLASSIFICATION nothreads;
295917     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
295918     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP12_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP12_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
295919     %let _cn = %sysfunc(getoption(CENTER));
295920     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
295921     proc print data=EMWS1.EndGrp12_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp12_EMCLASSIFICATION noobs label;
295922     var from into pct_row pct_col count percent
295923     ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
295924     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
295925     label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
295926     label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
295927     label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
295928     label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
295929     label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
295930     label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
295931     where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
295932     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
295933     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
295934     run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP12_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 191.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
295935     title9;
MPRINT(EM_DIAGRAM):   title9;
295936     title10;
MPRINT(EM_DIAGRAM):   title10;
295937     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
295938     proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
295939     modify EndGrp12_EMRANK;
MPRINT(EM_DIAGRAM):   modify EndGrp12_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
295940     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
295941     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
295942     run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP12_EMRANK.DATA.
295943     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.07 seconds
 
 
295944     %let _cn = %sysfunc(getoption(CENTER));
295945     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
295946     proc print data=EMWS1.EndGrp12_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp12_EMRANK label noobs;
295947     var
295948     decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
295949     by
295950     notsorted DATAROLE
295951     notsorted TARGET
295952     notsorted TARGETLABEL
295953     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
295954     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
295955     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
295956     run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP12_EMRANK.
NOTE: The PROCEDURE PRINT printed page 192.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
295957     title10;
MPRINT(EM_DIAGRAM):   title10;
295958     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
295959     proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
295960     modify EndGrp12_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify EndGrp12_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
295961     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
295962     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
295963     run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP12_EMSCOREDIST.DATA.
295964     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.12 seconds
      cpu time            0.09 seconds
 
 
295965     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
295966     set EMWS1.Grp12_GROUPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp12_GROUPINFO;
295967     where _LOOP_=1;
MPRINT(EM_DIAGRAM):   where _LOOP_=1;
295968     call symput('LOOP_WHERE', strip(_wheredesc_));
MPRINT(EM_DIAGRAM):   call symput('LOOP_WHERE', strip(_wheredesc_));
295969     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP12_GROUPINFO.
      WHERE _LOOP_=1;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
295970     data temp;
MPRINT(EM_DIAGRAM):    data temp;
295971     length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
295972     format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
295973     label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
295974     set EMWS1.EndGrp12_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp12_EMRANK;
295975     _LOOP_ =1;
MPRINT(EM_DIAGRAM):   _LOOP_ =1;
295976     _WHERE_ ="^(cv_var =1)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =1)";
295977     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP12_EMRANK.
NOTE: The data set WORK.TEMP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
295978     data EMWS1.EndGrp12_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp12_EMRANK_LOOP;
295979     set temp;
MPRINT(EM_DIAGRAM):   set temp;
295980     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP12_EMRANK_LOOP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
295981     data temp;
MPRINT(EM_DIAGRAM):    data temp;
295982     length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
295983     format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
295984     label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
295985     set EMWS1.EndGrp12_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp12_EMSCOREDIST;
295986     _LOOP_ =1;
MPRINT(EM_DIAGRAM):   _LOOP_ =1;
295987     _WHERE_ ="^(cv_var =1)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =1)";
295988     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP12_EMSCOREDIST.
NOTE: The data set WORK.TEMP has 20 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
295989     data EMWS1.EndGrp12_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp12_EMSCOREDIST_LOOP;
295990     set temp;
MPRINT(EM_DIAGRAM):   set temp;
295991     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP12_EMSCOREDIST_LOOP has 20 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
295992     data temp;
MPRINT(EM_DIAGRAM):    data temp;
295993     length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
295994     format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
295995     label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
295996     set EMWS1.EndGrp12_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp12_EMOUTFIT;
295997     _LOOP_ =1;
MPRINT(EM_DIAGRAM):   _LOOP_ =1;
295998     _WHERE_ ="^(cv_var =1)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =1)";
295999     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP12_EMOUTFIT.
NOTE: The data set WORK.TEMP has 1 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
296000     data EMWS1.EndGrp12_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp12_EMOUTFIT_LOOP;
296001     set temp;
MPRINT(EM_DIAGRAM):   set temp;
296002     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP12_EMOUTFIT_LOOP has 1 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
296003     data temp;
MPRINT(EM_DIAGRAM):    data temp;
296004     length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
296005     format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
296006     label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
296007     set EMWS1.EndGrp12_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp12_EMREPORTFIT;
296008     _LOOP_ =1;
MPRINT(EM_DIAGRAM):   _LOOP_ =1;
296009     _WHERE_ ="^(cv_var =1)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =1)";
296010     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP12_EMREPORTFIT.
NOTE: The data set WORK.TEMP has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
296011     data EMWS1.EndGrp12_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp12_EMREPORTFIT_LOOP;
296012     set temp;
MPRINT(EM_DIAGRAM):   set temp;
296013     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP12_EMREPORTFIT_LOOP has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
296014     data temp;
MPRINT(EM_DIAGRAM):    data temp;
296015     length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
296016     format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
296017     label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
296018     set EMWS1.EndGrp12_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp12_EMCLASSIFICATION;
296019     _LOOP_ =1;
MPRINT(EM_DIAGRAM):   _LOOP_ =1;
296020     _WHERE_ ="^(cv_var =1)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =1)";
296021     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP12_EMCLASSIFICATION.
NOTE: The data set WORK.TEMP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
296022     data EMWS1.EndGrp12_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp12_EMCLASSIFICATION_LOOP;
296023     set temp;
MPRINT(EM_DIAGRAM):   set temp;
296024     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP12_EMCLASSIFICATION_LOOP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
