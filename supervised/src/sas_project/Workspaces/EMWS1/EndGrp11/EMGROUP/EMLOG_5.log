*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                16:43:31 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:43:25 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                16:43:25 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O33P7NWX "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp11\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O33P7NWX new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp11\EMGROUP\EMLOG_5.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:43:25 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp11\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp11\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp11\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp11\EMGROUP\EMOUTPUT_5.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:43:25 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp11\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp11\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp11\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp11\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp11\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
1636961    proc freq data=EMWS1.EndGrp11_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.EndGrp11_VariableSet noprint;
1636962    table ROLE*LEVEL/out=WORK.EndGrp11META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.EndGrp11META;
1636963    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP11_VARIABLESET.
NOTE: The data set WORK.ENDGRP11META has 8 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
 
 
1636964    proc print data=WORK.EndGrp11META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp11META label noobs;
1636965    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
1636966    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
1636967    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1636968    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
1636969    run;
 
NOTE: There were 8 observations read from the data set WORK.ENDGRP11META.
NOTE: The PROCEDURE PRINT printed page 1094.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1636970    title10;
MPRINT(EM_DIAGRAM):   title10;
1636971    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Neural3_TRAIN EMWS1.Neural3_TRAIN
EMWS1.Neural3_TRAIN EMWS1.Neural3_TRAIN EMWS1 Neural3_TRAIN
EMWS1.Neural3_TRAIN EMWS1.Neural3_TRAIN
EMWS1.Neural3_TRAIN EMWS1.Neural3_TRAIN EMWS1 Neural3_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Neural3_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural3_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
1637000    data WORK.EndGrp11_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp11_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
1637001    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
1637002    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
1637003       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
1637004    set EMWS1.NEURAL3_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.NEURAL3_DEPVAR_DM( where=(_TYPE_="TARGET"));
1637005    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
1637006    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
1637007    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
1637008    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
1637009    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
1637010    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
1637011    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
1637012    end;
MPRINT(EM_DIAGRAM):   end;
1637013    output;
MPRINT(EM_DIAGRAM):   output;
1637014    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL3_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP11_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1637015    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1637016    proc print data=WORK.EndGrp11_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp11_EVENT noobs label;
1637017    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
1637018    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1637019    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
1637020    run;
 
NOTE: There were 1 observations read from the data set WORK.ENDGRP11_EVENT.
NOTE: The PROCEDURE PRINT printed page 1095.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1637021    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
1637022    proc print data = EMWS1.Neural3_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Neural3_DepVar_DM noobs label;
1637023    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
1637024    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
1637025    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
1637026    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1637027    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
1637028    run;
 
NOTE: There were 7 observations read from the data set EMWS1.NEURAL3_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 1096.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1637029    title10;
MPRINT(EM_DIAGRAM):   title10;
1637030    %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp11: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp11: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp11: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=307;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13935542442124;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=1896;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86064457557875;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural3_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Neural3_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Neural3_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Neural3_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Neural3_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
1637504    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1637505    * EndGrp11: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * EndGrp11: Generation of macros and macro variables;
1637506    * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
1637507    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
1637508    %let EMEXCEPTIONSTRING=;
1637509    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1637510    * TRAIN: EndGrp11;
MPRINT(EM_DIAGRAM):   * TRAIN: EndGrp11;
1637511    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1637512    %let EM_ACTION = TRAIN;
1637513    %let syscc = 0;
1637514    %macro main;
1637515       %if %upcase(&EM_ACTION) = TRAIN %then %do;
1637516
1637517           filename temp catalog 'sashelp.emutil.endgp_train.source';
1637518           %include temp;
1637519           filename temp;
1637520
1637521           %train;
1637522
1637523       %end;
1637524       %else
1637525          %if %upcase(&EM_ACTION) = SCORE %then %do;
1637526
1637527           filename temp catalog 'sashelp.emutil.endgp_score.source';
1637528           %include temp;
1637529           filename temp;
1637530
1637531           %score;
1637532       %end;
1637533       %else
1637534       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
1637535
1637536           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
1637537           %include temp;
1637538           filename temp;
1637539
1637540           %postloop;
1637541
1637542       %end;
1637543
1637544       %doendm:
1637545    %mend main;
1637546
1637547    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_TRAIN.SOURCE.
1637548   +%macro copyModelDs(model=, key=);
1637549   +   %let modelDs  = &em_lib..&model._&key;
1637550   +   %let reportDs = &em_lib..&em_nodeid._&key;
1637551   +   %if %sysfunc(exist(&modelDs)) %then %do;
1637552   +       data &reportDs;
1637553   +          length ModelId $16;
1637554   +          retain ModelId "&model";
1637555   +          set &modelDs;
1637556   +       run;
1637557   +   %end;
1637558   +%mend copyModelDs;
1637559   +
1637560   +%macro traintarget(groupid=);
1637561   +   %em_getname(key=emoutfit, type=DATA);
1637562   +   %let targetname=;
1637563   +   data _null_;
1637564   +     set &em_lib..&groupid._&looptype;
1637565   +     where _LOOP_ = &EMLOOPNUMBER;
1637566   +     call symput('targetname', strip(_TARGET_));
1637567   +   run;
1637568   +   %let modelId =;
1637569   +   data _null_;
1637570   +      set &em_import_data_eminfo;
1637571   +      where key = 'MODEL' and TARGET = "&targetname";
1637572   +      call symput('modelId',   strip(data));
1637573   +   run;
1637574   +   %if "&modelId" ne "" %then %do;
1637575   +       %copyModelDs(model=&modelid, key=EMRANK);
1637576   +       %copyModelDs(model=&modelid, key=EMSCOREDIST);
1637577   +       %copyModelDs(model=&modelid, key=EMOUTFIT);
1637578   +       %copyModelDs(model=&modelid, key=EMCLASSIFICATION);
1637579   +       %copyModelDs(model=&modelid, key=EMEVENREPORT);
1637580   +       %copyModelDs(model=&modelid, key=EMRESIDUALS);
1637581   +       %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
1637582   +   %end;
1637583   +
1637584   +   %doendtgp:
1637585   +%mend;
1637586   +
1637587   +%macro trainboost(groupid=);
1637588   +
1637589   +   %let boostinfoDs  = &em_lib..%sysfunc(strip(&groupid))_boostinfo;
1637590   +   %let boostscoreDs = &em_lib..%sysfunc(strip(&groupid))_boostscore;
1637591   +
1637592   +   data _null_;
1637593   +      retain index 0;
1637594   +      set &boostinfoDs;
1637595   +      call symput('targetname', strip(_target_));
1637596   +   run;
1637597   +
1637598   +   %if "&em_import_data_eminfo" ne "" and %sysfunc(exist(&em_import_data_eminfo)) %then %do;
1637599   +       %let decmeta = ;
1637600   +       data _null_;
1637601   +          set &em_import_data_eminfo;
1637602   +          where (key='DECMETA' and TARGET="&targetname");
1637603   +          call symput('DECMETA', strip(data));
1637604   +       run;
1637605   +       %if "&decmeta" eq "" %then %do;
1637606   +           %let emexceptionstring = EMTOOL.NOTARGETMODELED;
1637607   +           %goto doendtb;
1637608   +       %end;
1637609   +
1637610   +       %let predictedVars=;
1637611   +       data _null_;
1637612   +          set &decmeta;
1637613   +          if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
1637614   +          else
1637615   +          if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
1637616   +          else
1637617   +          if _TYPE_ = 'PREDICTED' then call symput('predictedvars', strip(symget('predictedVars'))!!' '!!strip(variable));
1637618   +       run;
1637619   +       %if %index(&EM_DEBUG, _ALL_) %then %do;
1637620   +           %put GROUPID: &GROUPID DECMETA: &DECMETA FROMVAR: &FROMVAR INTO: &INTOVAR PREDICTED: &PREDICTEDVARS;
1637621   +       %end;
1637622   +   %end;
1637623   +
1637624   +   * ;
1637625   +   * ENDGROUP &NODEID : Boosting scoring ;
1637626   +   * ;
1637627   +   data &em_lib..&groupid._boostscore;
1637628   +      set &em_import_data;
1637629   +      keep _WARN_ &targetname &fromvar &intovar &predictedvars;
1637630   +      %if "%em_freq" ne "" %then %do ;
1637631   +          keep %em_freq ;
1637632   +      %end ;
1637633   +   run;
1637634   +   %em_model(TARGET=&targetname , ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
1637635   +
1637636   +   %doendtb:
1637637   +
1637638   +%mend trainboost;
1637639   +
1637640   +%macro trainbag(groupid=);
1637641   +   %let baginfoDs  = &em_lib..%sysfunc(strip(&groupid))_baginfo;
1637642   +   data _null_;
1637643   +      retain index 0;
1637644   +      set &baginfoDs;
1637645   +      call symput('targetname', strip(_target_));
1637646   +   run;
1637647   +
1637648   +   %let decmeta = ;
1637649   +   data _null_;
1637650   +       set &em_import_data_eminfo;
1637651   +       where (key='DECMETA' and TARGET="&targetname");
1637652   +       call symput('DECMETA', strip(data));
1637653   +   run;
1637654   +   %if "&decmeta" eq "" %then %do;
1637655   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
1637656   +       %goto doendtg;
1637657   +   %end;
1637658   +
1637659   +   %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
1637660   +
1637661   +   %doendtg:
1637662   +%mend trainbag;
1637663   +
1637664   +%macro traingroup(groupid=);
1637665   +   %let targetNum = 0;
1637666   +
1637667   +   data _temp1;
1637668   +      set &em_lib..&groupid._eminfo;
1637669   +      where key='MODEL';
1637670   +   run;
1637671   +   data _temp2;
1637672   +      set &em_import_data_eminfo;
1637673   +      where key='MODEL';
1637674   +   run;
1637675   +   proc sort data=_temp1; by TARGET DATA;
1637676   +   proc sort data=_temp2; by TARGET DATA;
1637677   +   data _temp2;
1637678   +      merge _temp1(in=_a) _temp2(in=_b);
1637679   +      by TARGET DATA;
1637680   +      if ^_a and _b then output;
1637681   +   run;
1637682   +   data _null_;
1637683   +      retain index 0;
1637684   +      set _temp2 end=eof;
1637685   +      index +1;
1637686   +      where key ='MODEL';
1637687   +      call symput('MODELID'!!strip(put(index, best.)), strip(data));
1637688   +      call symput('TARGET'!!strip(put(index, best.)), strip(target));
1637689   +      if eof then
1637690   +         call symput('targetnum', strip(put(index, best.)));
1637691   +   run;
1637692   +   proc datasets lib=work nolist;
1637693   +      delete _temp1 _temp2;
1637694   +   run;
1637695   +   %if "&targetNum" eq "0" %then %goto doendtgp;
1637696   +
1637697   +   %let modelString =;
1637698   +   %do i=1 %to &targetnum;
1637699   +        %if ^%sysfunc(indexw(&modelString, &&modelid&i)) %then %do;
1637700   +            %copyModelDs(model=&&modelid&i, key=EMRANK);
1637701   +            %copyModelDs(model=&&modelid&i, key=EMSCOREDIST);
1637702   +            %copyModelDs(model=&&modelid&i, key=EMOUTFIT);
1637703   +            %copyModelDs(model=&&modelid&i, key=EMCLASSIFICATION);
1637704   +            %copyModelDs(model=&&modelid&i, key=EMEVENREPORT);
1637705   +            %copyModelDs(model=&&modelid&i, key=EMRESIDUALS);
1637706   +            %let modelString = &modelString &&modelid&i;
1637707   +       %end;
1637708   +       %em_model(TARGET=&&target&i, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
1637709   +   %end;
1637710   +
1637711   +   %doendtgp:
1637712   +
1637713   +%mend traingroup;
1637714   +
1637715   +%macro getSize(data=, nobsvar=);
1637716   +
1637717   +   %if %sysfunc(exist(&data, DATA)) %then %do;
1637718   +       %let dsid = %sysfunc(open(&data));
1637719   +       %if &dsid %then %do;
1637720   +           %let &&nobsvar = %sysfunc(attrn(&dsid, NLOBS));
1637721   +           %let dsid = %sysfunc(close(&dsid));
1637722   +       %end;
1637723   +   %end;
1637724   +    %if %sysfunc(exist(&data, VIEW)) %then %do;
1637725   +        proc sql;
1637726   +           reset noprint;
1637727   +           select count(*) into :&nobsvar from &data;
1637728   +        quit;
1637729   +   %end;
1637730   +
1637731   +%mend getsize;
1637732   +
1637733   +%macro train;
1637734   +
1637735   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %do;
1637736   +      %let EM_TOOLTYPE=UTILITY;
1637737   +      %if %sysfunc(exist(&em_data_eminfo)) %then %do;
1637738   +          proc delete data=&em_data_eminfo;
1637739   +          run;
1637740   +      %end;
1637741   +      %goto doendtr;
1637742   +   %end;
1637743   +
1637744   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
1637745   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
1637746   +       %goto doendtr;
1637747   +   %end;
1637748   +
1637749   +   %let xgroupid = ;
1637750   +   data _null_;
1637751   +      set &em_import_data_eminfo;
1637752   +      where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
1637753   +      call symput('XGROUPID',  strip(data));
1637754   +      call symput('LOOPTYPE', strip(key));
1637755   +   run;
1637756   +
1637757   +   %if "&looptype" eq "BOOSTINFO" %then %do;
1637758   +       %let nDataObs=0;
1637759   +       %getSize(data=&em_import_data, nobsvar=nDataObs);
1637760   +
1637761   +       %let nStartObs=0;
1637762   +       %getsize(data=&em_lib..&xgroupid._train, nobsvar=nStartObs);
1637763   +
1637764   +       %if &nDataObs ne &nStartObs %then %do;
1637765   +           %let emexceptionstring = EMTOOL.BOOSTERRORNOBSCHANGED;
1637766   +           %goto doendtr;
1637767   +       %end;
1637768   +
1637769   +       %trainboost(groupid=&xgroupid);
1637770   +   %end;
1637771   +   %else
1637772   +   %if "&looptype" eq "BAGINFO" %then %do;
1637773   +       %trainbag(groupid=&xgroupid);
1637774   +   %end;
1637775   +   %else
1637776   +   %if "&looptype" eq "GROUPINFO" %then %do;
1637777   +       %traingroup(groupid=&xgroupid);
1637778   +   %end;
1637779   +   %else
1637780   +   %if "&looptype" eq "TARGETINFO" %then %do;
1637781   +       %traintarget(groupid=&xgroupid);
1637782   +   %end;
1637783   +
1637784   +   data &em_data_eminfo;
1637785   +      length TARGET KEY $32  DATA $43;
1637786   +      TARGET=''; KEY='ENDGROUP'; DATA="&em_nodeid"; output;
1637787   +   run;
1637788   +
1637789   +   %let EM_TOOLTYPE=MODEL;
1637790   +
1637791   +   %doendtr:
1637792   +
1637793   +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Neural3_EMINFO;
MPRINT(TRAIN):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(TRAIN):   call symput('XGROUPID', strip(data));
MPRINT(TRAIN):   call symput('LOOPTYPE', strip(key));
MPRINT(TRAIN):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL3_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp1;
MPRINT(TRAINGROUP):   set EMWS1.Grp11_eminfo;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.GRP11_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   set EMWS1.Neural3_EMINFO;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL3_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp1;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp2;
MPRINT(TRAINGROUP):   by TARGET DATA;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   merge _temp1(in=_a) _temp2(in=_b);
MPRINT(TRAINGROUP):   by TARGET DATA;
MPRINT(TRAINGROUP):   if ^_a and _b then output;
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _null_;
MPRINT(TRAINGROUP):   retain index 0;
MPRINT(TRAINGROUP):   set _temp2 end=eof;
MPRINT(TRAINGROUP):   index +1;
MPRINT(TRAINGROUP):   where key ='MODEL';
MPRINT(TRAINGROUP):   call symput('MODELID'!!strip(put(index, best.)), strip(data));
MPRINT(TRAINGROUP):   call symput('TARGET'!!strip(put(index, best.)), strip(target));
MPRINT(TRAINGROUP):   if eof then call symput('targetnum', strip(put(index, best.)));
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc datasets lib=work nolist;
MPRINT(TRAINGROUP):   delete _temp1 _temp2;
MPRINT(TRAINGROUP):   run;
 
NOTE: Deleting WORK._TEMP1 (memtype=DATA).
NOTE: Deleting WORK._TEMP2 (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(COPYMODELDS):   data EMWS1.EndGrp11_EMRANK;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural3";
MPRINT(COPYMODELDS):   set EMWS1.Neural3_EMRANK;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL3_EMRANK.
NOTE: The data set EMWS1.ENDGRP11_EMRANK has 20 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp11_EMSCOREDIST;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural3";
MPRINT(COPYMODELDS):   set EMWS1.Neural3_EMSCOREDIST;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL3_EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP11_EMSCOREDIST has 20 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp11_EMOUTFIT;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural3";
MPRINT(COPYMODELDS):   set EMWS1.Neural3_EMOUTFIT;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL3_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP11_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp11_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural3";
MPRINT(COPYMODELDS):   set EMWS1.Neural3_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL3_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP11_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   length DATA $65 TARGET $32 PREDICTED ASSESS DECSCORECODE FITSTATISTICS CLASSIFICATION RESIDUALS $1;
MPRINT(EM_MODEL):   data = "";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "N";
MPRINT(EM_MODEL):   decscorecode = "N";
MPRINT(EM_MODEL):   fitstatistics = "N";
MPRINT(EM_MODEL):   classification = "N";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   run;
 
NOTE: The data set WORK.EM_USER_MODEL has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.EndGrp11_EMINFO;
MPRINT(TRAIN):   length TARGET KEY $32 DATA $43;
MPRINT(TRAIN):   TARGET='';
MPRINT(TRAIN):   KEY='ENDGROUP';
MPRINT(TRAIN):   DATA="EndGrp11";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   run;
 
NOTE: The data set EMWS1.ENDGRP11_EMINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: EndGrp11;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1637794    *------------------------------------------------------------*;
1637795    * End TRAIN: EndGrp11;
1637796    *------------------------------------------------------------*;
1637797
 
1637798    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1637799    * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
1637800    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1637801    ;
MPRINT(EM_DIAGRAM):   ;
1637802    ;
MPRINT(EM_DIAGRAM):   ;
1637803    ;
MPRINT(EM_DIAGRAM):   ;
1637804    ;
MPRINT(EM_DIAGRAM):   ;
1637805    quit;
MPRINT(EM_DIAGRAM):   quit;
1637806    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1637807    * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
1637808    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1637809    /*; *"; *'; */
1637810    ;
MPRINT(EM_DIAGRAM):   ;
1637811    run;
MPRINT(EM_DIAGRAM):   run;
1637812    quit;
MPRINT(EM_DIAGRAM):   quit;
1637813    /* Reset EM Options */
1637814    options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
1637815    options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
1637816    goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:43:28 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                16:43:28 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2F9IZK4 "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp11\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2F9IZK4 new;
MPRINT(EM_DIAGRAM):   run;
1637918    %let EMEXCEPTIONSTRING=;
1637919    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1637920    * SCORE: EndGrp11;
MPRINT(EM_DIAGRAM):   * SCORE: EndGrp11;
1637921    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1637922    %let EM_ACTION = SCORE;
1637923    %let syscc = 0;
1637924    %macro main;
1637925       %if %upcase(&EM_ACTION) = TRAIN %then %do;
1637926
1637927           filename temp catalog 'sashelp.emutil.endgp_train.source';
1637928           %include temp;
1637929           filename temp;
1637930
1637931           %train;
1637932
1637933       %end;
1637934       %else
1637935          %if %upcase(&EM_ACTION) = SCORE %then %do;
1637936
1637937           filename temp catalog 'sashelp.emutil.endgp_score.source';
1637938           %include temp;
1637939           filename temp;
1637940
1637941           %score;
1637942       %end;
1637943       %else
1637944       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
1637945
1637946           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
1637947           %include temp;
1637948           filename temp;
1637949
1637950           %postloop;
1637951
1637952       %end;
1637953
1637954       %doendm:
1637955    %mend main;
1637956
1637957    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_SCORE.SOURCE.
1637958   +%macro scoreTables(data=, out=, scoreref=, prescore=);
1637960   +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW))) %then %do;
1637961   +       data &out / view=&out;
1637962   +          set &data
1637964   +          %if "&prescore" = "Y" %then %do;
1637965   +              (obs=1)
1637966   +          %end;
1637968   +          ;
1637970   +          %inc &scoreref;
1637972   +          %if "&prescore" eq "Y" %then %do;
1637973   +              drop I_: R_:;
1637974   +          %end;
1637976   +       run;
1637977   +   %end;
1637979   +%mend scoretables;
1637981   +%macro boostbagcode(groupid=, type=, EnsembleIndex=);
1637982   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
1637983   +   data _null_;
1637984   +      retain index 0;
1637985   +      set &infoDs;
1637986   +      call symput('targetname', strip(_target_));
1637987   +      call symput('endloopnum', strip(_loop_));
1637988   +   run;
1637990   +   %let endgrp_decmeta=;
1637991   +   %let endgrp_decdata=;
1637993   +   data _null_;
1637994   +      set &em_import_data_eminfo;
1637995   +      where key in('MODEL', 'DECMETA', 'DECDATA') and TARGET="&targetname";
1637996   +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
1637997   +      else
1637998   +      if key='DECDATA' then call symput('ENDGRP_DECDATA', strip(data));
1637999   +      else call symput('MODELID', strip(data));
1638000   +   run;
1638002   +   %let headerString= Boosting;
1638003   +   %let prefixString= _BoostVar;
1638005   +   %if "&type" = "BAGINFO" %then %do;
1638006   +        %let headerString = Bagging;
1638007   +        %let prefixString= _BagVar;
1638008   +   %end;
1638010   +   %let targetType=;
The SAS System
 
1638011   +   %let predictedVars=;
1638012   +   data _null_;
1638013   +      retain index;
1638014   +      set &endgrp_decmeta end=eof;
1638015   +      length tempvar $200;
1638016   +      if _TYPE_='TARGET' then call symput('TARGETTYPE', strip(level));
1638017   +      else
1638018   +      if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
1638019   +      else
1638020   +      if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
1638021   +      else
1638022   +      if _TYPE_ = 'PREDICTED' then do;
1638023   +         index+1;
1638024   +         call symput('predvars'!!strip(put(index, best.)), strip(variable));
1638025   +         tempvar = strip("&em_nodeid")!!'_'!!strip(variable);
1638026   +         if length(tempvar)<=32 then call symput('tempvars'!!strip(put(index, best.)), strip(tempvar));
1638027   +         else call symput('tempvars'!!strip(put(index, best.)), strip("&prefixString")!!strip(put(index, best.)));
1638028   +      end;
1638029   +      if eof then
1638030   +         call symput('prednum', strip(put(index, best.)));
1638031   +   run;
1638033   +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
1638034   +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
1638036   +   filename loopflow "&em_user_loopflowcode";
1638037   +   filename looppub "&em_user_looppubcode";
1638039   +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
1638040   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
1638042   +   %if "&emloopnumber" = "1" %then %do;
1638043   +       data _null_;
1638044   +          rc = fdelete('loopflow');
1638045   +          rc = fdelete('looppub');
1638046   +       run;
1638047   +       data _null_;
1638048   +          file loopflow;
1638049   +          put "&em_codebar;";
1638050   +          put "* &em_nodeid: ;" ;
1638051   +          put "* User: &sysuserid;";
1638052   +          put "* Date: &sysdate: &systime;";
1638053   +          put "&em_codebar ;";
1638054   +          put "* Ensemble Code;";
1638055   +          put "&em_codebar ;";
1638056   +          put "* &headerString: Loop=1;";
1638057   +          put "* Temporary Variables;";
1638058   +          %do i= 1 %to &prednum;
1638059   +              put "drop &&tempvars&i;";
1638060   +              put "&&tempvars&i = 0;";
1638061   +          %end;
1638062   +       run;
1638063   +       %em_copyfile(infref=loopflow, outfref=looppub);
1638064   +   %end;
1638066   +   %let j=&emloopnumber;
1638067   +   %do i = 1 %to &loopcodenum;
1638068   +       %let fsourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
1638069   +       %let psourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
1638071   +       %if (&&loopnode&i eq &em_nodeid ) or
1638072   +           ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex )) %then %do;
1638073   +           data _null_;
1638074   +              file loopflow mod;
1638075   +              put "&em_codebar;";
1638076   +              put "* &&loopnode&i: &&loopdesc&i;" ;
1638077   +              put "* User: &sysuserid;";
1638078   +              put "* Date: &sysdate: &systime;";
1638079   +              put "* &headerString: Loop=&j;";
1638080   +              put "&em_codebar;";
1638081   +           run;
1638082   +           data _null_;
1638083   +              file looppub mod;
1638084   +              put "&em_codebar;";
1638085   +              put "* &&loopnode&i: &&loopdesc&i;" ;
1638086   +              put "* User: &sysuserid;";
1638087   +              put "* Date: &sysdate: &systime;";
1638088   +              put "* &headerString: Loop=&j;";
1638089   +              put "&em_codebar;";
1638090   +           run;
1638091   +       %end;
1638093   +       %if &&loopnode&i ne &em_nodeid %then %do;
1638094   +           %if (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex ) %then %do;
1638095   +               filename x catalog "&fsourceEntry";
1638096   +               %em_copyfile(infref=x, outfref=loopflow, append=Y);
1638097   +               filename x;
1638099   +               filename y catalog "&psourceEntry";
1638100   +               %em_copyfile(infref=y, outfref=looppub, append=Y);
1638101   +               filename y;
1638102   +           %end;
1638103   +       %end;
1638104   +       %else %do;
1638105   +           %if "&j" ne "1" %then %do;
1638106   +               %let weight = %eval(&j-1);
1638107   +               data _null_;
1638108   +                  file loopflow mod;
1638109   +                  put "&em_codebar;";
1638110   +                  %if "&j" ne "&endloopnum" %then %do;
1638111   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
1638112   +                  %end;
1638113   +                  %else %do;
1638114   +                      put "* &headerString: accumulate final probabilities;";
1638115   +                  %end;
1638116   +                  put "&em_codebar;";
1638117   +                  %do k=1 %to &prednum;
1638118   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
1638119   +                  %end;
1638120   +               run;
1638121   +               data _null_;
1638122   +                  file looppub mod;
1638123   +                  put "&em_codebar;";
1638124   +                  %if "&j" ne "&endloopnum" %then %do;
1638125   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
1638126   +                  %end;
1638127   +                  %else %do;
1638128   +                      put "* &headerString: accumulate final probabilities;";
1638129   +                  %end;
1638130   +                  %do k=1 %to &prednum;
1638131   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
1638132   +                  %end;
1638133   +               run;
1638134   +           %end;
1638135   +           %if "&j" ne "&endloopnum" %then %do;
1638136   +               data _null_;
1638137   +                  file loopflow mod;
1638138   +                  put "&em_codebar;";
1638139   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
1638140   +                  put "&em_codebar;";
1638141   +               %do k=1 %to &prednum;
1638142   +                  put "&&tempvars&k = &&predvars&k;";
1638143   +               %end;
1638144   +               run;
1638145   +               data _null_;
1638146   +                  file looppub mod;
1638147   +                  put "&em_codebar;";
1638148   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
1638149   +                  put "&em_codebar;";
1638150   +               %do k=1 %to &prednum;
1638151   +                   put "&&tempvars&k = &&predvars&k;";
1638152   +               %end;
1638153   +               run;
1638154   +           %end;
1638156   +       %end;
1638157   +   %end;
1638159   +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
1638160   +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
1638162   +   filename loopflow;
1638163   +   filename looppub;
1638164   +   filename empub;
1638166   +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
1638167   +   %let gpTrain=;
1638168   +   %let gpValidate=;
1638169   +   %let gpTest=;
1638171   +   data _null_;
1638172   +      set &groupImportDs;
1638173   +      select(upcase(port));
1638174   +          when('DATA')     call symput('gpTrain',    strip(dataset));
1638175   +          when('VALIDATE') call symput('gpValidate', strip(dataset));
1638176   +          when('TEST')     call symput('gpTest',     strip(dataset));
1638177   +       otherwise;
1638178   +      end;
1638179   +   run;
1638181   +   %if "&gpTrain" ne "" %then %do;
1638183   +       %scoreTables(data=&em_lib..&gpTrain,     out=&em_export_train,    scoreref=emflow, prescore=Y);
1638185   +       %if &targetType ne INTERVAL %then %do;
1638186   +           %makeClassificationVars(target=&targetname, data=&em_export_train, decmeta=&endgrp_decmeta, publish=N, fref=emflow);
1638187   +       %end;
1638189   +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
1638191   +       %let decflow = %sysfunc(Pathname(WORK))&em_dsep._decflow.sas;
1638193   +       %em_decidecode(data=&em_export_train , decdata=&ENDGRP_DECDATA , decmeta=&ENDGRP_DECMETA ,
1638194   +                                                           noresfile=, resfile=%nrbquote(&decflow));
1638196   +       filename _decflow "&decflow";
1638197   +       %em_copyfile(infref=_decflow, outfref=emflow, append=Y);
1638198   +       filename _decflow;
1638200   +   %end;
1638202   +   %if "&gpTrain" ne "" %then
1638203   +        %scoreTables(data=&em_lib..%sysfunc(strip(&gpTrain)),     out=&em_export_train,    scoreref=emflow);
1638204   +   %if "&gpValidate" ne "" %then
1638205   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),  out=&em_export_validate, scoreref=emflow);
1638206   +   %if "&gpTest" ne "" %then
1638207   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),      out=&em_export_test,     scoreref=emflow);
1638209   +   filename emflow;
1638211   +%mend boostbagcode;
1638213   +%macro score;
1638215   +   filename _dec catalog "sashelp.emutil.em_decidecode.source";
1638216   +   %inc _dec;
1638217   +   filename _dec;
1638219   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %goto doendpl;
1638221   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
1638222   +       %let emexceptionstring = nomodeltarget;
1638223   +       %goto doendpl;
1638224   +   %end;
1638226   +   %LET GROUPID=;
1638227   +   %let LOOPTYPE=;
1638228   +   data _null_;
1638229   +      set &em_import_data_eminfo;
1638230   +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
1638231   +      call symput('GROUPID',   strip(data));
1638232   +      call symput('LOOPTYPE', strip(key));
1638233   +   run;
1638235   +   %em_getname(key=PATH, type=DATA);
1638237   +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
1638238   +   %include temp;
1638239   +   filename temp;
1638241   +   %em_gettrainpath(NODEID=&em_nodeid, OUTPATH= score_path);
1638243   +   %if &emloopnumber = 1 and %sysfunc(exist(&em_user_path)) %then %do;
1638244   +       %let deleteString = &em_nodeid._path;
1638245   +       proc datasets lib=&em_lib nolist;
1638246   +          delete &deleteString;
1638247   +       run;
1638248   +       quit;
1638249   +   %end;
1638251   +   %if ^%sysfunc(exist(WORK.score_path)) %then %goto doendpl;
1638253   +   data score_path;
1638254   +      retain LOOPID &emloopnumber;
1638255   +      set score_path;
1638256   +   run;
1638258   +   proc append base=&em_user_path  data=score_path;
1638259   +   run;
1638261   +   %let EnsembleIndex=0;
1638262   +   data _null_;
1638263   +      retain index 0 ensembleIndex 0;
1638264   +      set score_Path end=eof;
1638265   +      if nodelabel = "&groupid" or index then do;
1638266   +         index + 1;
1638267   +         call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
1638268   +         call symput('loopdesc'!!strip(put(index, best.)), strip(component));
1638269   +      end;
1638270   +      if component='Ensemble' then ensembleIndex = index;
1638271   +      if eof then do;
1638272   +         call symput('loopcodenum', strip(put(index, best.)));
1638273   +         call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
1638274   +      end;
1638275   +   run;
1638277   +   proc datasets lib=work nolist;
1638278   +      delete score_Path;
1638279   +   run;
1638280   +   quit;
1638282   +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
1638283   +       %boostbagcode(groupid=&groupid, type=&looptype, EnsembleIndex=&EnsembleIndex);
1638285   +   %doendpl:
1638287   +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):   filename _dec catalog "sashelp.emutil.em_decidecode.source";
NOTE: %INCLUDE (level 1) file _DEC is file SASHELP.EMUTIL.EM_DECIDECODE.SOURCE.
1638288   +/*
1638289   +       MACRO: EM_DECIDECODE
1638290   +
1638291   +       PURPOSE: Generate EM Decide Score Code for non-interval target.
1638292   +       SUPPORT: Taiyeong Lee
1638293   +
1638294   +       HISTORY: 01OCT04 Initial code
1638295   +       NOTE:    All parameters are optional, call %EM_DECIDECODE()
1638296   +                to add the corresponding decision code
1638297   +
1638298   +*/
1638299   +
1638300   +
1638301   +%macro  EM_DECIDECODE(data= , decdata= , decmeta= , noresfile=, resfile=);
1638302   + %global m_data    m_decdata   m_decmeta  m_noresfile  m_resfile ;
1638303   +
1638304   +    %do;
1638305   +    %let m_data      = &data;
1638306   +    %let m_decdata   = &decdata;
1638307   +    %let m_decmeta   = &decmeta;
1638308   +    %let m_noresfile = &noresfile;
1638309   +    %let m_resfile   = &resfile;
1638310   +    dm "afa c=sashelp.emutil.decidecode.scl";
1638311   +  %end;
1638312   +%mend EM_DECIDECODE;
1638313   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename _dec;
NOTE: Fileref _DEC has been deassigned.
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Neural3_EMINFO;
MPRINT(SCORE):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(SCORE):   call symput('GROUPID', strip(data));
MPRINT(SCORE):   call symput('LOOPTYPE', strip(key));
MPRINT(SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL3_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
1638314   +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
1638315   +   proc display c=sashelp.emcore.pathscorecode.scl;
1638316   +   run;
1638317   +%mend EM_GETTRAINPATH;
1638318   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
1638319    data score_path;
MPRINT(EM_GETTRAINPATH):   data score_path;
1638320    length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
1638321    nodelabel="FIMPORT";
MPRINT(EM_GETTRAINPATH):   nodelabel="FIMPORT";
1638322    parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
1638323    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
1638324    component="FileImport";
MPRINT(EM_GETTRAINPATH):   component="FileImport";
1638325    tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
1638326    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1638327    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1638328    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1638329    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1638330    output;
MPRINT(EM_GETTRAINPATH):   output;
1638331    nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
1638332    parent="FIMPORT";
MPRINT(EM_GETTRAINPATH):   parent="FIMPORT";
1638333    description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
1638334    component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
1638335    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
1638336    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1638337    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1638338    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1638339    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1638340    output;
MPRINT(EM_GETTRAINPATH):   output;
1638341    nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
1638342    parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
1638343    description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
1638344    component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
1638345    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
1638346    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1638347    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1638348    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1638349    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1638350    output;
MPRINT(EM_GETTRAINPATH):   output;
1638351    nodelabel="EMCODE2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE2";
1638352    parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
1638353    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
1638354    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
1638355    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
1638356    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1638357    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1638358    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1638359    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1638360    output;
MPRINT(EM_GETTRAINPATH):   output;
1638361    nodelabel="Meta2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta2";
1638362    parent="EMCODE2";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE2";
1638363    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
1638364    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
1638365    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
1638366    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1638367    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1638368    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1638369    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1638370    output;
MPRINT(EM_GETTRAINPATH):   output;
1638371    nodelabel="EMCODE3";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE3";
1638372    parent="Meta2";
MPRINT(EM_GETTRAINPATH):   parent="Meta2";
1638373    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
1638374    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
1638375    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
1638376    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1638377    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1638378    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1638379    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1638380    output;
MPRINT(EM_GETTRAINPATH):   output;
1638381    nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
1638382    parent="EMCODE3";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE3";
1638383    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
1638384    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
1638385    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
1638386    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1638387    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1638388    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1638389    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1638390    output;
MPRINT(EM_GETTRAINPATH):   output;
1638391    nodelabel="Meta";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta";
1638392    parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
1638393    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
1638394    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
1638395    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
1638396    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1638397    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1638398    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1638399    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1638400    output;
MPRINT(EM_GETTRAINPATH):   output;
1638401    nodelabel="Trans2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans2";
1638402    parent="Meta";
MPRINT(EM_GETTRAINPATH):   parent="Meta";
1638403    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
1638404    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
1638405    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
1638406    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1638407    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1638408    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1638409    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1638410    output;
MPRINT(EM_GETTRAINPATH):   output;
1638411    nodelabel="Grp11";
MPRINT(EM_GETTRAINPATH):   nodelabel="Grp11";
1638412    parent="Trans2";
MPRINT(EM_GETTRAINPATH):   parent="Trans2";
1638413    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
1638414    component="StartGroup";
MPRINT(EM_GETTRAINPATH):   component="StartGroup";
1638415    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
1638416    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1638417    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1638418    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1638419    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1638420    output;
MPRINT(EM_GETTRAINPATH):   output;
1638421    nodelabel="Neural3";
MPRINT(EM_GETTRAINPATH):   nodelabel="Neural3";
1638422    parent="Grp11";
MPRINT(EM_GETTRAINPATH):   parent="Grp11";
1638423    description="Neural";
MPRINT(EM_GETTRAINPATH):   description="Neural";
1638424    component="NeuralNetwork";
MPRINT(EM_GETTRAINPATH):   component="NeuralNetwork";
1638425    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
1638426    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1638427    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1638428    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1638429    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1638430    output;
MPRINT(EM_GETTRAINPATH):   output;
1638431    nodelabel="EndGrp11";
MPRINT(EM_GETTRAINPATH):   nodelabel="EndGrp11";
1638432    parent="Neural3";
MPRINT(EM_GETTRAINPATH):   parent="Neural3";
1638433    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
1638434    component="EndGroup";
MPRINT(EM_GETTRAINPATH):   component="EndGroup";
1638435    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
1638436    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1638437    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1638438    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1638439    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1638440    output;
MPRINT(EM_GETTRAINPATH):   output;
1638441    run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK.SCORE_PATH has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(SCORE):  ;
MPRINT(SCORE):   data score_path;
MPRINT(SCORE):   retain LOOPID 5;
MPRINT(SCORE):   set score_path;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set WORK.SCORE_PATH has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):   proc append base=EMWS1.EndGrp11_PATH data=score_path;
MPRINT(SCORE):   run;
 
NOTE: Appending WORK.SCORE_PATH to EMWS1.ENDGRP11_PATH.
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: 12 observations added.
NOTE: The data set EMWS1.ENDGRP11_PATH has 60 observations and 10 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   retain index 0 ensembleIndex 0;
MPRINT(SCORE):   set score_Path end=eof;
MPRINT(SCORE):   if nodelabel = "Grp11" or index then do;
MPRINT(SCORE):   index + 1;
MPRINT(SCORE):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(SCORE):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(SCORE):   end;
MPRINT(SCORE):   if component='Ensemble' then ensembleIndex = index;
MPRINT(SCORE):   if eof then do;
MPRINT(SCORE):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(SCORE):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(SCORE):   end;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc datasets lib=work nolist;
MPRINT(SCORE):   delete score_Path;
MPRINT(SCORE):   run;
 
NOTE: Deleting WORK.SCORE_PATH (memtype=DATA).
MPRINT(SCORE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: EndGrp11;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1638442    *------------------------------------------------------------*;
1638443    * End SCORE: EndGrp11;
1638444    *------------------------------------------------------------*;
1638445
 
1638446    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1638447    * EndGrp11: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * EndGrp11: Scoring DATA data;
1638448    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1638449    data EMWS1.EndGrp11_TRAIN
1638450    / view=EMWS1.EndGrp11_TRAIN
1638451    ;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp11_TRAIN / view=EMWS1.EndGrp11_TRAIN ;
1638452    set EMWS1.Neural3_TRAIN
1638453    ;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural3_TRAIN ;
1638454    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.ENDGRP11_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.NEURAL3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1638455    quit;
 
1638457    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
1638458    * EndGrp11: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp11: Computing metadata for TRAIN data;
1638459    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.ENDGRP11_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp11\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp11_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp11_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp11_TRAIN out=WORK.M2UISS60 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2UISS60;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2UISS60(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2UISS60;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2UISS60;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2NW0PN7 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NW0PN7;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NW0PN7;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2YZSOCC(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NW0PN7;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NW0PN7;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NW0PN7;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NW0PN7;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NW0PN7;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Neural3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp11_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp11";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp11";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp11";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp11: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1638805    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1638806    set EMWS1.EndGrp11_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_EMINFO;
1638807    where DATA='EndGrp11' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp11' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
1638808    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP11_EMINFO.
      WHERE (DATA='EndGrp11') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1638809    data EMWS1.EndGrp11_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp11_EMINFO;
1638810    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1638811    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1638812    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.ENDGRP11_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
1638816    run;
1638817    data EMWS1.EndGrp11_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp11_EMINFO;
1638818    set EMWS1.EndGrp11_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_EMINFO WORK.MODELTEMP_INFO;
1638819    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP11_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP11_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1638820    proc sort data = EMWS1.EndGrp11_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp11_EMINFO NOTHREADS;
1638821    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1638822    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP11_EMINFO.
NOTE: The data set EMWS1.ENDGRP11_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1638823    proc sort data = EMWS1.Neural3_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Neural3_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1638824    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1638825    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL3_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1638826    proc sort data = EMWS1.EndGrp11_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp11_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1638827    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1638828    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP11_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1638829    data EMWS1.EndGrp11_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp11_EMINFO;
1638830    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1638831    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1638832    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP11_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1638833    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1638834    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1638835    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1638836    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS1.ENDGRP11_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:43:30 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                02 June 2018
Time:                16:43:30 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3Q6NDK_ "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp11\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3Q6NDK_ new;
MPRINT(EM_DIAGRAM):   run;
1638860    data EMWS1.EndGrp11_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp11_EMOUTFIT;
1638861    set EMWS1.EndGrp11_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_EMOUTFIT;
1638862    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
1638863    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
1638864    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
1638865    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP11_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP11_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1638866    proc sort data=EMWS1.EndGrp11_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp11_EMREPORTFIT nothreads;
1638867    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
1638868    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP11_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP11_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1638869    %let _EMwarndup = 0;
1638870    %let _EMtargetdup =;
1638871    %let _EMASEtargetdup =;
1638872    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1638873    set EMWS1.EndGrp11_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_EMOUTFIT;
1638874    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
1638875    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
1638876    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
1638877    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
1638878    end;
MPRINT(EM_DIAGRAM):   end;
1638879    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP11_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1638880    proc sort data=EMWS1.Neural3_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural3_CMeta_TRAIN out=WORK.SUBSETINMETA;
1638881    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1638882    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL3_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 20 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1638883    proc sort data=EMWS1.EndGrp11_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp11_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
1638884    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1638885    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP11_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 20 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1638886    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
1638887    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
1638888    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1638889    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 20 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1638890    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1638891    set EMWS1.EndGrp11_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_CMeta_TRAIN;
1638892    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
1638893    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP11_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1638894    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1638895    set EMWS1.EndGrp11_TRAIN(keep=
1638896    F_DepVar
1638897    I_DepVar
1638898    P_DepVar0
1638899    P_DepVar1
1638900    R_DepVar0
1638901    R_DepVar1
1638902    U_DepVar
1638903    _WARN_
1638904    DepVar
1638905    );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1638906    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2203 observations read from the data set EMWS1.GRP11_TRAIN.
NOTE: View EMWS1.ENDGRP11_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2203 observations read from the data set EMWS1.NEURAL3_TRAIN.
NOTE: There were 2203 observations read from the data set EMWS1.ENDGRP11_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2203 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
1643093    %let _cn = %sysfunc(getoption(CENTER));
1643094    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1643095    proc print data=EMWS1.EndGrp11_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp11_EMREPORTFIT noobs label;
1643096    var STAT LABEL TRAIN
1643097    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
1643098    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
1643099    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1643100    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
1643101    run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP11_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 1097.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1643102    title10;
MPRINT(EM_DIAGRAM):   title10;
1643103    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1643104    proc sort data=EMWS1.EndGrp11_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp11_EMCLASSIFICATION nothreads;
1643105    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1643106    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP11_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP11_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1643107    %let _cn = %sysfunc(getoption(CENTER));
1643108    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1643109    proc print data=EMWS1.EndGrp11_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp11_EMCLASSIFICATION noobs label;
1643110    var from into pct_row pct_col count percent
1643111    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
1643112    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1643113    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
1643114    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
1643115    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
1643116    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
1643117    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
1643118    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
1643119    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
1643120    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1643121    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
1643122    run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP11_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 1098.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1643123    title9;
MPRINT(EM_DIAGRAM):   title9;
1643124    title10;
MPRINT(EM_DIAGRAM):   title10;
1643125    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1643126    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
1643127    modify EndGrp11_EMRANK;
MPRINT(EM_DIAGRAM):   modify EndGrp11_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1643128    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1643129    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
1643130    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP11_EMRANK.DATA.
1643131    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
1643132    %let _cn = %sysfunc(getoption(CENTER));
1643133    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1643134    proc print data=EMWS1.EndGrp11_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp11_EMRANK label noobs;
1643135    var
1643136    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
1643137    by
1643138    notsorted DATAROLE
1643139    notsorted TARGET
1643140    notsorted TARGETLABEL
1643141    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
1643142    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1643143    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
1643144    run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP11_EMRANK.
NOTE: The PROCEDURE PRINT printed page 1099.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1643145    title10;
MPRINT(EM_DIAGRAM):   title10;
1643146    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1643147    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
1643148    modify EndGrp11_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify EndGrp11_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1643149    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1643150    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
1643151    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP11_EMSCOREDIST.DATA.
1643152    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
1643153    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1643154    set EMWS1.Grp11_GROUPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp11_GROUPINFO;
1643155    where _LOOP_=5;
MPRINT(EM_DIAGRAM):   where _LOOP_=5;
1643156    call symput('LOOP_WHERE', strip(_wheredesc_));
MPRINT(EM_DIAGRAM):   call symput('LOOP_WHERE', strip(_wheredesc_));
1643157    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP11_GROUPINFO.
      WHERE _LOOP_=5;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1643158    data temp;
MPRINT(EM_DIAGRAM):    data temp;
1643159    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
1643160    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
1643161    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
1643162    set EMWS1.EndGrp11_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_EMRANK;
1643163    _LOOP_ =5;
MPRINT(EM_DIAGRAM):   _LOOP_ =5;
1643164    _WHERE_ ="^(cv_var =5)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =5)";
1643165    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP11_EMRANK.
NOTE: The data set WORK.TEMP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1643166    data EMWS1.EndGrp11_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp11_EMRANK_LOOP;
1643167    set EMWS1.EndGrp11_EMRANK_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_EMRANK_LOOP temp;
1643168    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 80 observations read from the data set EMWS1.ENDGRP11_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP11_EMRANK_LOOP has 100 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1643169    data temp;
MPRINT(EM_DIAGRAM):    data temp;
1643170    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
1643171    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
1643172    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
1643173    set EMWS1.EndGrp11_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_EMSCOREDIST;
1643174    _LOOP_ =5;
MPRINT(EM_DIAGRAM):   _LOOP_ =5;
1643175    _WHERE_ ="^(cv_var =5)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =5)";
1643176    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP11_EMSCOREDIST.
NOTE: The data set WORK.TEMP has 20 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1643177    data EMWS1.EndGrp11_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp11_EMSCOREDIST_LOOP;
1643178    set EMWS1.EndGrp11_EMSCOREDIST_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_EMSCOREDIST_LOOP temp;
1643179    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 80 observations read from the data set EMWS1.ENDGRP11_EMSCOREDIST_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP11_EMSCOREDIST_LOOP has 100 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1643180    data temp;
MPRINT(EM_DIAGRAM):    data temp;
1643181    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
1643182    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
1643183    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
1643184    set EMWS1.EndGrp11_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_EMOUTFIT;
1643185    _LOOP_ =5;
MPRINT(EM_DIAGRAM):   _LOOP_ =5;
1643186    _WHERE_ ="^(cv_var =5)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =5)";
1643187    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP11_EMOUTFIT.
NOTE: The data set WORK.TEMP has 1 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1643188    data EMWS1.EndGrp11_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp11_EMOUTFIT_LOOP;
1643189    set EMWS1.EndGrp11_EMOUTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_EMOUTFIT_LOOP temp;
1643190    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP11_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP11_EMOUTFIT_LOOP has 5 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1643191    data temp;
MPRINT(EM_DIAGRAM):    data temp;
1643192    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
1643193    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
1643194    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
1643195    set EMWS1.EndGrp11_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_EMREPORTFIT;
1643196    _LOOP_ =5;
MPRINT(EM_DIAGRAM):   _LOOP_ =5;
1643197    _WHERE_ ="^(cv_var =5)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =5)";
1643198    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP11_EMREPORTFIT.
NOTE: The data set WORK.TEMP has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1643199    data EMWS1.EndGrp11_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp11_EMREPORTFIT_LOOP;
1643200    set EMWS1.EndGrp11_EMREPORTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_EMREPORTFIT_LOOP temp;
1643201    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 84 observations read from the data set EMWS1.ENDGRP11_EMREPORTFIT_LOOP.
NOTE: There were 21 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP11_EMREPORTFIT_LOOP has 105 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1643202    data temp;
MPRINT(EM_DIAGRAM):    data temp;
1643203    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
1643204    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
1643205    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
1643206    set EMWS1.EndGrp11_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_EMCLASSIFICATION;
1643207    _LOOP_ =5;
MPRINT(EM_DIAGRAM):   _LOOP_ =5;
1643208    _WHERE_ ="^(cv_var =5)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =5)";
1643209    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP11_EMCLASSIFICATION.
NOTE: The data set WORK.TEMP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1643210    data EMWS1.EndGrp11_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp11_EMCLASSIFICATION_LOOP;
1643211    set EMWS1.EndGrp11_EMCLASSIFICATION_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_EMCLASSIFICATION_LOOP temp;
1643212    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set EMWS1.ENDGRP11_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP11_EMCLASSIFICATION_LOOP has 20 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
