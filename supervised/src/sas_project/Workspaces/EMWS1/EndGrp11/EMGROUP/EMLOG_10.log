*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                17:03:38 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:03:32 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                17:03:32 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2G5VE8O "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp11\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2G5VE8O new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp11\EMGROUP\EMLOG_10.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:03:32 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp11\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp11\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp11\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp11\EMGROUP\EMOUTPUT_10.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:03:32 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp11\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp11\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp11\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp11\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp11\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
3306530    proc freq data=EMWS1.EndGrp11_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.EndGrp11_VariableSet noprint;
3306531    table ROLE*LEVEL/out=WORK.EndGrp11META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.EndGrp11META;
3306532    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP11_VARIABLESET.
NOTE: The data set WORK.ENDGRP11META has 8 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.00 seconds
 
 
3306533    proc print data=WORK.EndGrp11META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp11META label noobs;
3306534    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
3306535    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
3306536    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3306537    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
3306538    run;
 
NOTE: There were 8 observations read from the data set WORK.ENDGRP11META.
NOTE: The PROCEDURE PRINT printed page 2236.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3306539    title10;
MPRINT(EM_DIAGRAM):   title10;
3306540    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Neural3_TRAIN EMWS1.Neural3_TRAIN
EMWS1.Neural3_TRAIN EMWS1.Neural3_TRAIN EMWS1 Neural3_TRAIN
EMWS1.Neural3_TRAIN EMWS1.Neural3_TRAIN
EMWS1.Neural3_TRAIN EMWS1.Neural3_TRAIN EMWS1 Neural3_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Neural3_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural3_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
3306569    data WORK.EndGrp11_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp11_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
3306570    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
3306571    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
3306572       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
3306573    set EMWS1.NEURAL3_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.NEURAL3_DEPVAR_DM( where=(_TYPE_="TARGET"));
3306574    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
3306575    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
3306576    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
3306577    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
3306578    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
3306579    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
3306580    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
3306581    end;
MPRINT(EM_DIAGRAM):   end;
3306582    output;
MPRINT(EM_DIAGRAM):   output;
3306583    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL3_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP11_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
3306584    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3306585    proc print data=WORK.EndGrp11_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp11_EVENT noobs label;
3306586    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
3306587    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3306588    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
3306589    run;
 
NOTE: There were 1 observations read from the data set WORK.ENDGRP11_EVENT.
NOTE: The PROCEDURE PRINT printed page 2237.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3306590    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
3306591    proc print data = EMWS1.Neural3_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Neural3_DepVar_DM noobs label;
3306592    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
3306593    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
3306594    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
3306595    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3306596    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
3306597    run;
 
NOTE: There were 7 observations read from the data set EMWS1.NEURAL3_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 2238.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3306598    title10;
MPRINT(EM_DIAGRAM):   title10;
3306599    %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp11: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp11: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp11: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=301;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13782051282051;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=1883;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86217948717948;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural3_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Neural3_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Neural3_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Neural3_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Neural3_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
3307073    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3307074    * EndGrp11: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * EndGrp11: Generation of macros and macro variables;
3307075    * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
3307076    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
3307077    %let EMEXCEPTIONSTRING=;
3307078    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3307079    * TRAIN: EndGrp11;
MPRINT(EM_DIAGRAM):   * TRAIN: EndGrp11;
3307080    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3307081    %let EM_ACTION = TRAIN;
3307082    %let syscc = 0;
3307083    %macro main;
3307084       %if %upcase(&EM_ACTION) = TRAIN %then %do;
3307085
3307086           filename temp catalog 'sashelp.emutil.endgp_train.source';
3307087           %include temp;
3307088           filename temp;
3307089
3307090           %train;
3307091
3307092       %end;
3307093       %else
3307094          %if %upcase(&EM_ACTION) = SCORE %then %do;
3307095
3307096           filename temp catalog 'sashelp.emutil.endgp_score.source';
3307097           %include temp;
3307098           filename temp;
3307099
3307100           %score;
3307101       %end;
3307102       %else
3307103       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
3307104
3307105           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
3307106           %include temp;
3307107           filename temp;
3307108
3307109           %postloop;
3307110
3307111       %end;
3307112
3307113       %doendm:
3307114    %mend main;
3307115
3307116    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_TRAIN.SOURCE.
3307117   +%macro copyModelDs(model=, key=);
3307118   +   %let modelDs  = &em_lib..&model._&key;
3307119   +   %let reportDs = &em_lib..&em_nodeid._&key;
3307120   +   %if %sysfunc(exist(&modelDs)) %then %do;
3307121   +       data &reportDs;
3307122   +          length ModelId $16;
3307123   +          retain ModelId "&model";
3307124   +          set &modelDs;
3307125   +       run;
3307126   +   %end;
3307127   +%mend copyModelDs;
3307128   +
3307129   +%macro traintarget(groupid=);
3307130   +   %em_getname(key=emoutfit, type=DATA);
3307131   +   %let targetname=;
3307132   +   data _null_;
3307133   +     set &em_lib..&groupid._&looptype;
3307134   +     where _LOOP_ = &EMLOOPNUMBER;
3307135   +     call symput('targetname', strip(_TARGET_));
3307136   +   run;
3307137   +   %let modelId =;
3307138   +   data _null_;
3307139   +      set &em_import_data_eminfo;
3307140   +      where key = 'MODEL' and TARGET = "&targetname";
3307141   +      call symput('modelId',   strip(data));
3307142   +   run;
3307143   +   %if "&modelId" ne "" %then %do;
3307144   +       %copyModelDs(model=&modelid, key=EMRANK);
3307145   +       %copyModelDs(model=&modelid, key=EMSCOREDIST);
3307146   +       %copyModelDs(model=&modelid, key=EMOUTFIT);
3307147   +       %copyModelDs(model=&modelid, key=EMCLASSIFICATION);
3307148   +       %copyModelDs(model=&modelid, key=EMEVENREPORT);
3307149   +       %copyModelDs(model=&modelid, key=EMRESIDUALS);
3307150   +       %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
3307151   +   %end;
3307152   +
3307153   +   %doendtgp:
3307154   +%mend;
3307155   +
3307156   +%macro trainboost(groupid=);
3307157   +
3307158   +   %let boostinfoDs  = &em_lib..%sysfunc(strip(&groupid))_boostinfo;
3307159   +   %let boostscoreDs = &em_lib..%sysfunc(strip(&groupid))_boostscore;
3307160   +
3307161   +   data _null_;
3307162   +      retain index 0;
3307163   +      set &boostinfoDs;
3307164   +      call symput('targetname', strip(_target_));
3307165   +   run;
3307166   +
3307167   +   %if "&em_import_data_eminfo" ne "" and %sysfunc(exist(&em_import_data_eminfo)) %then %do;
3307168   +       %let decmeta = ;
3307169   +       data _null_;
3307170   +          set &em_import_data_eminfo;
3307171   +          where (key='DECMETA' and TARGET="&targetname");
3307172   +          call symput('DECMETA', strip(data));
3307173   +       run;
3307174   +       %if "&decmeta" eq "" %then %do;
3307175   +           %let emexceptionstring = EMTOOL.NOTARGETMODELED;
3307176   +           %goto doendtb;
3307177   +       %end;
3307178   +
3307179   +       %let predictedVars=;
3307180   +       data _null_;
3307181   +          set &decmeta;
3307182   +          if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
3307183   +          else
3307184   +          if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
3307185   +          else
3307186   +          if _TYPE_ = 'PREDICTED' then call symput('predictedvars', strip(symget('predictedVars'))!!' '!!strip(variable));
3307187   +       run;
3307188   +       %if %index(&EM_DEBUG, _ALL_) %then %do;
3307189   +           %put GROUPID: &GROUPID DECMETA: &DECMETA FROMVAR: &FROMVAR INTO: &INTOVAR PREDICTED: &PREDICTEDVARS;
3307190   +       %end;
3307191   +   %end;
3307192   +
3307193   +   * ;
3307194   +   * ENDGROUP &NODEID : Boosting scoring ;
3307195   +   * ;
3307196   +   data &em_lib..&groupid._boostscore;
3307197   +      set &em_import_data;
3307198   +      keep _WARN_ &targetname &fromvar &intovar &predictedvars;
3307199   +      %if "%em_freq" ne "" %then %do ;
3307200   +          keep %em_freq ;
3307201   +      %end ;
3307202   +   run;
3307203   +   %em_model(TARGET=&targetname , ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
3307204   +
3307205   +   %doendtb:
3307206   +
3307207   +%mend trainboost;
3307208   +
3307209   +%macro trainbag(groupid=);
3307210   +   %let baginfoDs  = &em_lib..%sysfunc(strip(&groupid))_baginfo;
3307211   +   data _null_;
3307212   +      retain index 0;
3307213   +      set &baginfoDs;
3307214   +      call symput('targetname', strip(_target_));
3307215   +   run;
3307216   +
3307217   +   %let decmeta = ;
3307218   +   data _null_;
3307219   +       set &em_import_data_eminfo;
3307220   +       where (key='DECMETA' and TARGET="&targetname");
3307221   +       call symput('DECMETA', strip(data));
3307222   +   run;
3307223   +   %if "&decmeta" eq "" %then %do;
3307224   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
3307225   +       %goto doendtg;
3307226   +   %end;
3307227   +
3307228   +   %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
3307229   +
3307230   +   %doendtg:
3307231   +%mend trainbag;
3307232   +
3307233   +%macro traingroup(groupid=);
3307234   +   %let targetNum = 0;
3307235   +
3307236   +   data _temp1;
3307237   +      set &em_lib..&groupid._eminfo;
3307238   +      where key='MODEL';
3307239   +   run;
3307240   +   data _temp2;
3307241   +      set &em_import_data_eminfo;
3307242   +      where key='MODEL';
3307243   +   run;
3307244   +   proc sort data=_temp1; by TARGET DATA;
3307245   +   proc sort data=_temp2; by TARGET DATA;
3307246   +   data _temp2;
3307247   +      merge _temp1(in=_a) _temp2(in=_b);
3307248   +      by TARGET DATA;
3307249   +      if ^_a and _b then output;
3307250   +   run;
3307251   +   data _null_;
3307252   +      retain index 0;
3307253   +      set _temp2 end=eof;
3307254   +      index +1;
3307255   +      where key ='MODEL';
3307256   +      call symput('MODELID'!!strip(put(index, best.)), strip(data));
3307257   +      call symput('TARGET'!!strip(put(index, best.)), strip(target));
3307258   +      if eof then
3307259   +         call symput('targetnum', strip(put(index, best.)));
3307260   +   run;
3307261   +   proc datasets lib=work nolist;
3307262   +      delete _temp1 _temp2;
3307263   +   run;
3307264   +   %if "&targetNum" eq "0" %then %goto doendtgp;
3307265   +
3307266   +   %let modelString =;
3307267   +   %do i=1 %to &targetnum;
3307268   +        %if ^%sysfunc(indexw(&modelString, &&modelid&i)) %then %do;
3307269   +            %copyModelDs(model=&&modelid&i, key=EMRANK);
3307270   +            %copyModelDs(model=&&modelid&i, key=EMSCOREDIST);
3307271   +            %copyModelDs(model=&&modelid&i, key=EMOUTFIT);
3307272   +            %copyModelDs(model=&&modelid&i, key=EMCLASSIFICATION);
3307273   +            %copyModelDs(model=&&modelid&i, key=EMEVENREPORT);
3307274   +            %copyModelDs(model=&&modelid&i, key=EMRESIDUALS);
3307275   +            %let modelString = &modelString &&modelid&i;
3307276   +       %end;
3307277   +       %em_model(TARGET=&&target&i, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
3307278   +   %end;
3307279   +
3307280   +   %doendtgp:
3307281   +
3307282   +%mend traingroup;
3307283   +
3307284   +%macro getSize(data=, nobsvar=);
3307285   +
3307286   +   %if %sysfunc(exist(&data, DATA)) %then %do;
3307287   +       %let dsid = %sysfunc(open(&data));
3307288   +       %if &dsid %then %do;
3307289   +           %let &&nobsvar = %sysfunc(attrn(&dsid, NLOBS));
3307290   +           %let dsid = %sysfunc(close(&dsid));
3307291   +       %end;
3307292   +   %end;
3307293   +    %if %sysfunc(exist(&data, VIEW)) %then %do;
3307294   +        proc sql;
3307295   +           reset noprint;
3307296   +           select count(*) into :&nobsvar from &data;
3307297   +        quit;
3307298   +   %end;
3307299   +
3307300   +%mend getsize;
3307301   +
3307302   +%macro train;
3307303   +
3307304   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %do;
3307305   +      %let EM_TOOLTYPE=UTILITY;
3307306   +      %if %sysfunc(exist(&em_data_eminfo)) %then %do;
3307307   +          proc delete data=&em_data_eminfo;
3307308   +          run;
3307309   +      %end;
3307310   +      %goto doendtr;
3307311   +   %end;
3307312   +
3307313   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
3307314   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
3307315   +       %goto doendtr;
3307316   +   %end;
3307317   +
3307318   +   %let xgroupid = ;
3307319   +   data _null_;
3307320   +      set &em_import_data_eminfo;
3307321   +      where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
3307322   +      call symput('XGROUPID',  strip(data));
3307323   +      call symput('LOOPTYPE', strip(key));
3307324   +   run;
3307325   +
3307326   +   %if "&looptype" eq "BOOSTINFO" %then %do;
3307327   +       %let nDataObs=0;
3307328   +       %getSize(data=&em_import_data, nobsvar=nDataObs);
3307329   +
3307330   +       %let nStartObs=0;
3307331   +       %getsize(data=&em_lib..&xgroupid._train, nobsvar=nStartObs);
3307332   +
3307333   +       %if &nDataObs ne &nStartObs %then %do;
3307334   +           %let emexceptionstring = EMTOOL.BOOSTERRORNOBSCHANGED;
3307335   +           %goto doendtr;
3307336   +       %end;
3307337   +
3307338   +       %trainboost(groupid=&xgroupid);
3307339   +   %end;
3307340   +   %else
3307341   +   %if "&looptype" eq "BAGINFO" %then %do;
3307342   +       %trainbag(groupid=&xgroupid);
3307343   +   %end;
3307344   +   %else
3307345   +   %if "&looptype" eq "GROUPINFO" %then %do;
3307346   +       %traingroup(groupid=&xgroupid);
3307347   +   %end;
3307348   +   %else
3307349   +   %if "&looptype" eq "TARGETINFO" %then %do;
3307350   +       %traintarget(groupid=&xgroupid);
3307351   +   %end;
3307352   +
3307353   +   data &em_data_eminfo;
3307354   +      length TARGET KEY $32  DATA $43;
3307355   +      TARGET=''; KEY='ENDGROUP'; DATA="&em_nodeid"; output;
3307356   +   run;
3307357   +
3307358   +   %let EM_TOOLTYPE=MODEL;
3307359   +
3307360   +   %doendtr:
3307361   +
3307362   +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Neural3_EMINFO;
MPRINT(TRAIN):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(TRAIN):   call symput('XGROUPID', strip(data));
MPRINT(TRAIN):   call symput('LOOPTYPE', strip(key));
MPRINT(TRAIN):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL3_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   data _temp1;
MPRINT(TRAINGROUP):   set EMWS1.Grp11_eminfo;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.GRP11_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   set EMWS1.Neural3_EMINFO;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL3_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp1;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp2;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   merge _temp1(in=_a) _temp2(in=_b);
MPRINT(TRAINGROUP):   by TARGET DATA;
MPRINT(TRAINGROUP):   if ^_a and _b then output;
MPRINT(TRAINGROUP):   run;
NOTE: There were 0 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _null_;
MPRINT(TRAINGROUP):   retain index 0;
MPRINT(TRAINGROUP):   set _temp2 end=eof;
MPRINT(TRAINGROUP):   index +1;
MPRINT(TRAINGROUP):   where key ='MODEL';
MPRINT(TRAINGROUP):   call symput('MODELID'!!strip(put(index, best.)), strip(data));
MPRINT(TRAINGROUP):   call symput('TARGET'!!strip(put(index, best.)), strip(target));
MPRINT(TRAINGROUP):   if eof then call symput('targetnum', strip(put(index, best.)));
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc datasets lib=work nolist;
MPRINT(TRAINGROUP):   delete _temp1 _temp2;
MPRINT(TRAINGROUP):   run;
 
NOTE: Deleting WORK._TEMP1 (memtype=DATA).
NOTE: Deleting WORK._TEMP2 (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(COPYMODELDS):   data EMWS1.EndGrp11_EMRANK;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural3";
MPRINT(COPYMODELDS):   set EMWS1.Neural3_EMRANK;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL3_EMRANK.
NOTE: The data set EMWS1.ENDGRP11_EMRANK has 20 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp11_EMSCOREDIST;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural3";
MPRINT(COPYMODELDS):   set EMWS1.Neural3_EMSCOREDIST;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL3_EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP11_EMSCOREDIST has 20 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp11_EMOUTFIT;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural3";
MPRINT(COPYMODELDS):   set EMWS1.Neural3_EMOUTFIT;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL3_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP11_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp11_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural3";
MPRINT(COPYMODELDS):   set EMWS1.Neural3_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL3_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP11_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   length DATA $65 TARGET $32 PREDICTED ASSESS DECSCORECODE FITSTATISTICS CLASSIFICATION RESIDUALS $1;
MPRINT(EM_MODEL):   data = "";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "N";
MPRINT(EM_MODEL):   decscorecode = "N";
MPRINT(EM_MODEL):   fitstatistics = "N";
MPRINT(EM_MODEL):   classification = "N";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   run;
 
NOTE: The data set WORK.EM_USER_MODEL has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.EndGrp11_EMINFO;
MPRINT(TRAIN):   length TARGET KEY $32 DATA $43;
MPRINT(TRAIN):   TARGET='';
MPRINT(TRAIN):   KEY='ENDGROUP';
MPRINT(TRAIN):   DATA="EndGrp11";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   run;
 
NOTE: The data set EMWS1.ENDGRP11_EMINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: EndGrp11;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3307363    *------------------------------------------------------------*;
3307364    * End TRAIN: EndGrp11;
3307365    *------------------------------------------------------------*;
3307366
 
3307367    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3307368    * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
3307369    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3307370    ;
MPRINT(EM_DIAGRAM):   ;
3307371    ;
MPRINT(EM_DIAGRAM):   ;
3307372    ;
MPRINT(EM_DIAGRAM):   ;
3307373    ;
MPRINT(EM_DIAGRAM):   ;
3307374    quit;
MPRINT(EM_DIAGRAM):   quit;
3307375    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3307376    * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
3307377    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3307378    /*; *"; *'; */
3307379    ;
MPRINT(EM_DIAGRAM):   ;
3307380    run;
MPRINT(EM_DIAGRAM):   run;
3307381    quit;
MPRINT(EM_DIAGRAM):   quit;
3307382    /* Reset EM Options */
3307383    options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
3307384    options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
3307385    goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:03:35 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                17:03:35 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3F8_3PC "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp11\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3F8_3PC new;
MPRINT(EM_DIAGRAM):   run;
3307487    %let EMEXCEPTIONSTRING=;
3307488    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3307489    * SCORE: EndGrp11;
MPRINT(EM_DIAGRAM):   * SCORE: EndGrp11;
3307490    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3307491    %let EM_ACTION = SCORE;
3307492    %let syscc = 0;
3307493    %macro main;
3307494       %if %upcase(&EM_ACTION) = TRAIN %then %do;
3307495
3307496           filename temp catalog 'sashelp.emutil.endgp_train.source';
3307497           %include temp;
3307498           filename temp;
3307499
3307500           %train;
3307501
3307502       %end;
3307503       %else
3307504          %if %upcase(&EM_ACTION) = SCORE %then %do;
3307505
3307506           filename temp catalog 'sashelp.emutil.endgp_score.source';
3307507           %include temp;
3307508           filename temp;
3307509
3307510           %score;
3307511       %end;
3307512       %else
3307513       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
3307514
3307515           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
3307516           %include temp;
3307517           filename temp;
3307518
3307519           %postloop;
3307520
3307521       %end;
3307522
3307523       %doendm:
3307524    %mend main;
3307525
3307526    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_SCORE.SOURCE.
3307527   +%macro scoreTables(data=, out=, scoreref=, prescore=);
3307529   +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW))) %then %do;
3307530   +       data &out / view=&out;
3307531   +          set &data
3307533   +          %if "&prescore" = "Y" %then %do;
3307534   +              (obs=1)
3307535   +          %end;
3307537   +          ;
3307539   +          %inc &scoreref;
3307541   +          %if "&prescore" eq "Y" %then %do;
3307542   +              drop I_: R_:;
3307543   +          %end;
3307545   +       run;
3307546   +   %end;
3307548   +%mend scoretables;
3307550   +%macro boostbagcode(groupid=, type=, EnsembleIndex=);
3307551   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
3307552   +   data _null_;
3307553   +      retain index 0;
3307554   +      set &infoDs;
3307555   +      call symput('targetname', strip(_target_));
3307556   +      call symput('endloopnum', strip(_loop_));
3307557   +   run;
3307559   +   %let endgrp_decmeta=;
3307560   +   %let endgrp_decdata=;
3307562   +   data _null_;
3307563   +      set &em_import_data_eminfo;
3307564   +      where key in('MODEL', 'DECMETA', 'DECDATA') and TARGET="&targetname";
3307565   +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
3307566   +      else
3307567   +      if key='DECDATA' then call symput('ENDGRP_DECDATA', strip(data));
3307568   +      else call symput('MODELID', strip(data));
3307569   +   run;
3307571   +   %let headerString= Boosting;
3307572   +   %let prefixString= _BoostVar;
3307574   +   %if "&type" = "BAGINFO" %then %do;
3307575   +        %let headerString = Bagging;
3307576   +        %let prefixString= _BagVar;
3307577   +   %end;
3307579   +   %let targetType=;
3307580   +   %let predictedVars=;
3307581   +   data _null_;
3307582   +      retain index;
3307583   +      set &endgrp_decmeta end=eof;
3307584   +      length tempvar $200;
3307585   +      if _TYPE_='TARGET' then call symput('TARGETTYPE', strip(level));
3307586   +      else
3307587   +      if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
3307588   +      else
3307589   +      if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
3307590   +      else
3307591   +      if _TYPE_ = 'PREDICTED' then do;
3307592   +         index+1;
3307593   +         call symput('predvars'!!strip(put(index, best.)), strip(variable));
3307594   +         tempvar = strip("&em_nodeid")!!'_'!!strip(variable);
3307595   +         if length(tempvar)<=32 then call symput('tempvars'!!strip(put(index, best.)), strip(tempvar));
3307596   +         else call symput('tempvars'!!strip(put(index, best.)), strip("&prefixString")!!strip(put(index, best.)));
3307597   +      end;
3307598   +      if eof then
3307599   +         call symput('prednum', strip(put(index, best.)));
3307600   +   run;
3307602   +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
3307603   +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
3307605   +   filename loopflow "&em_user_loopflowcode";
3307606   +   filename looppub "&em_user_looppubcode";
3307608   +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
3307609   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
3307611   +   %if "&emloopnumber" = "1" %then %do;
3307612   +       data _null_;
3307613   +          rc = fdelete('loopflow');
3307614   +          rc = fdelete('looppub');
3307615   +       run;
3307616   +       data _null_;
3307617   +          file loopflow;
3307618   +          put "&em_codebar;";
3307619   +          put "* &em_nodeid: ;" ;
3307620   +          put "* User: &sysuserid;";
3307621   +          put "* Date: &sysdate: &systime;";
3307622   +          put "&em_codebar ;";
3307623   +          put "* Ensemble Code;";
3307624   +          put "&em_codebar ;";
3307625   +          put "* &headerString: Loop=1;";
3307626   +          put "* Temporary Variables;";
3307627   +          %do i= 1 %to &prednum;
3307628   +              put "drop &&tempvars&i;";
3307629   +              put "&&tempvars&i = 0;";
3307630   +          %end;
3307631   +       run;
3307632   +       %em_copyfile(infref=loopflow, outfref=looppub);
3307633   +   %end;
3307635   +   %let j=&emloopnumber;
3307636   +   %do i = 1 %to &loopcodenum;
3307637   +       %let fsourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
3307638   +       %let psourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
3307640   +       %if (&&loopnode&i eq &em_nodeid ) or
3307641   +           ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex )) %then %do;
3307642   +           data _null_;
3307643   +              file loopflow mod;
3307644   +              put "&em_codebar;";
3307645   +              put "* &&loopnode&i: &&loopdesc&i;" ;
3307646   +              put "* User: &sysuserid;";
3307647   +              put "* Date: &sysdate: &systime;";
3307648   +              put "* &headerString: Loop=&j;";
3307649   +              put "&em_codebar;";
3307650   +           run;
3307651   +           data _null_;
3307652   +              file looppub mod;
3307653   +              put "&em_codebar;";
3307654   +              put "* &&loopnode&i: &&loopdesc&i;" ;
3307655   +              put "* User: &sysuserid;";
3307656   +              put "* Date: &sysdate: &systime;";
3307657   +              put "* &headerString: Loop=&j;";
3307658   +              put "&em_codebar;";
3307659   +           run;
3307660   +       %end;
3307662   +       %if &&loopnode&i ne &em_nodeid %then %do;
3307663   +           %if (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex ) %then %do;
3307664   +               filename x catalog "&fsourceEntry";
3307665   +               %em_copyfile(infref=x, outfref=loopflow, append=Y);
3307666   +               filename x;
3307668   +               filename y catalog "&psourceEntry";
3307669   +               %em_copyfile(infref=y, outfref=looppub, append=Y);
3307670   +               filename y;
3307671   +           %end;
3307672   +       %end;
3307673   +       %else %do;
3307674   +           %if "&j" ne "1" %then %do;
3307675   +               %let weight = %eval(&j-1);
3307676   +               data _null_;
3307677   +                  file loopflow mod;
3307678   +                  put "&em_codebar;";
3307679   +                  %if "&j" ne "&endloopnum" %then %do;
3307680   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
3307681   +                  %end;
3307682   +                  %else %do;
3307683   +                      put "* &headerString: accumulate final probabilities;";
3307684   +                  %end;
3307685   +                  put "&em_codebar;";
3307686   +                  %do k=1 %to &prednum;
3307687   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
3307688   +                  %end;
3307689   +               run;
3307690   +               data _null_;
3307691   +                  file looppub mod;
3307692   +                  put "&em_codebar;";
3307693   +                  %if "&j" ne "&endloopnum" %then %do;
3307694   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
3307695   +                  %end;
3307696   +                  %else %do;
3307697   +                      put "* &headerString: accumulate final probabilities;";
3307698   +                  %end;
3307699   +                  %do k=1 %to &prednum;
3307700   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
3307701   +                  %end;
3307702   +               run;
3307703   +           %end;
3307704   +           %if "&j" ne "&endloopnum" %then %do;
3307705   +               data _null_;
3307706   +                  file loopflow mod;
3307707   +                  put "&em_codebar;";
3307708   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
3307709   +                  put "&em_codebar;";
3307710   +               %do k=1 %to &prednum;
3307711   +                  put "&&tempvars&k = &&predvars&k;";
3307712   +               %end;
3307713   +               run;
3307714   +               data _null_;
3307715   +                  file looppub mod;
3307716   +                  put "&em_codebar;";
3307717   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
3307718   +                  put "&em_codebar;";
3307719   +               %do k=1 %to &prednum;
3307720   +                   put "&&tempvars&k = &&predvars&k;";
3307721   +               %end;
3307722   +               run;
3307723   +           %end;
3307725   +       %end;
3307726   +   %end;
3307728   +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
3307729   +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
3307731   +   filename loopflow;
3307732   +   filename looppub;
3307733   +   filename empub;
3307735   +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
3307736   +   %let gpTrain=;
3307737   +   %let gpValidate=;
3307738   +   %let gpTest=;
3307740   +   data _null_;
3307741   +      set &groupImportDs;
3307742   +      select(upcase(port));
3307743   +          when('DATA')     call symput('gpTrain',    strip(dataset));
3307744   +          when('VALIDATE') call symput('gpValidate', strip(dataset));
3307745   +          when('TEST')     call symput('gpTest',     strip(dataset));
3307746   +       otherwise;
3307747   +      end;
3307748   +   run;
3307750   +   %if "&gpTrain" ne "" %then %do;
3307752   +       %scoreTables(data=&em_lib..&gpTrain,     out=&em_export_train,    scoreref=emflow, prescore=Y);
3307754   +       %if &targetType ne INTERVAL %then %do;
3307755   +           %makeClassificationVars(target=&targetname, data=&em_export_train, decmeta=&endgrp_decmeta, publish=N, fref=emflow);
3307756   +       %end;
3307758   +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
3307760   +       %let decflow = %sysfunc(Pathname(WORK))&em_dsep._decflow.sas;
3307762   +       %em_decidecode(data=&em_export_train , decdata=&ENDGRP_DECDATA , decmeta=&ENDGRP_DECMETA ,
3307763   +                                                           noresfile=, resfile=%nrbquote(&decflow));
3307765   +       filename _decflow "&decflow";
3307766   +       %em_copyfile(infref=_decflow, outfref=emflow, append=Y);
3307767   +       filename _decflow;
3307769   +   %end;
3307771   +   %if "&gpTrain" ne "" %then
3307772   +        %scoreTables(data=&em_lib..%sysfunc(strip(&gpTrain)),     out=&em_export_train,    scoreref=emflow);
3307773   +   %if "&gpValidate" ne "" %then
3307774   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),  out=&em_export_validate, scoreref=emflow);
3307775   +   %if "&gpTest" ne "" %then
3307776   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),      out=&em_export_test,     scoreref=emflow);
3307778   +   filename emflow;
3307780   +%mend boostbagcode;
3307782   +%macro score;
3307784   +   filename _dec catalog "sashelp.emutil.em_decidecode.source";
3307785   +   %inc _dec;
3307786   +   filename _dec;
3307788   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %goto doendpl;
3307790   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
3307791   +       %let emexceptionstring = nomodeltarget;
3307792   +       %goto doendpl;
3307793   +   %end;
3307795   +   %LET GROUPID=;
3307796   +   %let LOOPTYPE=;
3307797   +   data _null_;
3307798   +      set &em_import_data_eminfo;
3307799   +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
3307800   +      call symput('GROUPID',   strip(data));
3307801   +      call symput('LOOPTYPE', strip(key));
3307802   +   run;
3307804   +   %em_getname(key=PATH, type=DATA);
3307806   +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
3307807   +   %include temp;
3307808   +   filename temp;
3307810   +   %em_gettrainpath(NODEID=&em_nodeid, OUTPATH= score_path);
3307812   +   %if &emloopnumber = 1 and %sysfunc(exist(&em_user_path)) %then %do;
3307813   +       %let deleteString = &em_nodeid._path;
3307814   +       proc datasets lib=&em_lib nolist;
3307815   +          delete &deleteString;
3307816   +       run;
3307817   +       quit;
3307818   +   %end;
3307820   +   %if ^%sysfunc(exist(WORK.score_path)) %then %goto doendpl;
3307822   +   data score_path;
3307823   +      retain LOOPID &emloopnumber;
3307824   +      set score_path;
3307825   +   run;
3307827   +   proc append base=&em_user_path  data=score_path;
3307828   +   run;
3307830   +   %let EnsembleIndex=0;
3307831   +   data _null_;
3307832   +      retain index 0 ensembleIndex 0;
3307833   +      set score_Path end=eof;
3307834   +      if nodelabel = "&groupid" or index then do;
3307835   +         index + 1;
3307836   +         call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
3307837   +         call symput('loopdesc'!!strip(put(index, best.)), strip(component));
3307838   +      end;
3307839   +      if component='Ensemble' then ensembleIndex = index;
3307840   +      if eof then do;
3307841   +         call symput('loopcodenum', strip(put(index, best.)));
3307842   +         call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
3307843   +      end;
3307844   +   run;
3307846   +   proc datasets lib=work nolist;
3307847   +      delete score_Path;
3307848   +   run;
3307849   +   quit;
3307851   +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
3307852   +       %boostbagcode(groupid=&groupid, type=&looptype, EnsembleIndex=&EnsembleIndex);
3307854   +   %doendpl:
3307856   +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):   filename _dec catalog "sashelp.emutil.em_decidecode.source";
NOTE: %INCLUDE (level 1) file _DEC is file SASHELP.EMUTIL.EM_DECIDECODE.SOURCE.
3307857   +/*
3307858   +       MACRO: EM_DECIDECODE
3307859   +
3307860   +       PURPOSE: Generate EM Decide Score Code for non-interval target.
3307861   +       SUPPORT: Taiyeong Lee
3307862   +
3307863   +       HISTORY: 01OCT04 Initial code
3307864   +       NOTE:    All parameters are optional, call %EM_DECIDECODE()
3307865   +                to add the corresponding decision code
3307866   +
3307867   +*/
3307868   +
3307869   +
3307870   +%macro  EM_DECIDECODE(data= , decdata= , decmeta= , noresfile=, resfile=);
3307871   + %global m_data    m_decdata   m_decmeta  m_noresfile  m_resfile ;
3307872   +
3307873   +    %do;
3307874   +    %let m_data      = &data;
3307875   +    %let m_decdata   = &decdata;
3307876   +    %let m_decmeta   = &decmeta;
3307877   +    %let m_noresfile = &noresfile;
3307878   +    %let m_resfile   = &resfile;
3307879   +    dm "afa c=sashelp.emutil.decidecode.scl";
3307880   +  %end;
3307881   +%mend EM_DECIDECODE;
3307882   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename _dec;
NOTE: Fileref _DEC has been deassigned.
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Neural3_EMINFO;
MPRINT(SCORE):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(SCORE):   call symput('GROUPID', strip(data));
MPRINT(SCORE):   call symput('LOOPTYPE', strip(key));
MPRINT(SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL3_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
3307883   +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
3307884   +   proc display c=sashelp.emcore.pathscorecode.scl;
3307885   +   run;
3307886   +%mend EM_GETTRAINPATH;
3307887   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
3307888    data score_path;
MPRINT(EM_GETTRAINPATH):   data score_path;
3307889    length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
3307890    nodelabel="FIMPORT";
MPRINT(EM_GETTRAINPATH):   nodelabel="FIMPORT";
3307891    parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
3307892    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
3307893    component="FileImport";
MPRINT(EM_GETTRAINPATH):   component="FileImport";
3307894    tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
3307895    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3307896    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3307897    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3307898    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3307899    output;
MPRINT(EM_GETTRAINPATH):   output;
3307900    nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
3307901    parent="FIMPORT";
MPRINT(EM_GETTRAINPATH):   parent="FIMPORT";
3307902    description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
3307903    component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
3307904    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
3307905    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3307906    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3307907    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3307908    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3307909    output;
MPRINT(EM_GETTRAINPATH):   output;
3307910    nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
3307911    parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
3307912    description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
3307913    component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
3307914    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
3307915    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3307916    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3307917    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3307918    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3307919    output;
MPRINT(EM_GETTRAINPATH):   output;
3307920    nodelabel="EMCODE2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE2";
3307921    parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
3307922    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
3307923    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
3307924    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3307925    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3307926    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3307927    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3307928    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3307929    output;
MPRINT(EM_GETTRAINPATH):   output;
3307930    nodelabel="Meta2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta2";
3307931    parent="EMCODE2";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE2";
3307932    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
3307933    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
3307934    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3307935    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3307936    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3307937    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3307938    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3307939    output;
MPRINT(EM_GETTRAINPATH):   output;
3307940    nodelabel="EMCODE3";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE3";
3307941    parent="Meta2";
MPRINT(EM_GETTRAINPATH):   parent="Meta2";
3307942    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
3307943    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
3307944    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3307945    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3307946    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3307947    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3307948    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3307949    output;
MPRINT(EM_GETTRAINPATH):   output;
3307950    nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
3307951    parent="EMCODE3";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE3";
3307952    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
3307953    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
3307954    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
3307955    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3307956    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3307957    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3307958    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3307959    output;
MPRINT(EM_GETTRAINPATH):   output;
3307960    nodelabel="Meta";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta";
3307961    parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
3307962    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
3307963    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
3307964    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3307965    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3307966    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3307967    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3307968    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3307969    output;
MPRINT(EM_GETTRAINPATH):   output;
3307970    nodelabel="Trans2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans2";
3307971    parent="Meta";
MPRINT(EM_GETTRAINPATH):   parent="Meta";
3307972    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
3307973    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
3307974    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
3307975    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3307976    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3307977    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3307978    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3307979    output;
MPRINT(EM_GETTRAINPATH):   output;
3307980    nodelabel="Grp11";
MPRINT(EM_GETTRAINPATH):   nodelabel="Grp11";
3307981    parent="Trans2";
MPRINT(EM_GETTRAINPATH):   parent="Trans2";
3307982    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
3307983    component="StartGroup";
MPRINT(EM_GETTRAINPATH):   component="StartGroup";
3307984    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3307985    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3307986    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3307987    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3307988    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3307989    output;
MPRINT(EM_GETTRAINPATH):   output;
3307990    nodelabel="Neural3";
MPRINT(EM_GETTRAINPATH):   nodelabel="Neural3";
3307991    parent="Grp11";
MPRINT(EM_GETTRAINPATH):   parent="Grp11";
3307992    description="Neural";
MPRINT(EM_GETTRAINPATH):   description="Neural";
3307993    component="NeuralNetwork";
MPRINT(EM_GETTRAINPATH):   component="NeuralNetwork";
3307994    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
3307995    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3307996    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3307997    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3307998    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3307999    output;
MPRINT(EM_GETTRAINPATH):   output;
3308000    nodelabel="EndGrp11";
MPRINT(EM_GETTRAINPATH):   nodelabel="EndGrp11";
3308001    parent="Neural3";
MPRINT(EM_GETTRAINPATH):   parent="Neural3";
3308002    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
3308003    component="EndGroup";
MPRINT(EM_GETTRAINPATH):   component="EndGroup";
3308004    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
3308005    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3308006    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3308007    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3308008    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3308009    output;
MPRINT(EM_GETTRAINPATH):   output;
3308010    run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK.SCORE_PATH has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(SCORE):  ;
MPRINT(SCORE):   data score_path;
MPRINT(SCORE):   retain LOOPID 10;
MPRINT(SCORE):   set score_path;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set WORK.SCORE_PATH has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):   proc append base=EMWS1.EndGrp11_PATH data=score_path;
MPRINT(SCORE):   run;
 
NOTE: Appending WORK.SCORE_PATH to EMWS1.ENDGRP11_PATH.
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: 12 observations added.
NOTE: The data set EMWS1.ENDGRP11_PATH has 120 observations and 10 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   retain index 0 ensembleIndex 0;
MPRINT(SCORE):   set score_Path end=eof;
MPRINT(SCORE):   if nodelabel = "Grp11" or index then do;
MPRINT(SCORE):   index + 1;
MPRINT(SCORE):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(SCORE):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(SCORE):   end;
MPRINT(SCORE):   if component='Ensemble' then ensembleIndex = index;
MPRINT(SCORE):   if eof then do;
MPRINT(SCORE):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(SCORE):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(SCORE):   end;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc datasets lib=work nolist;
MPRINT(SCORE):   delete score_Path;
MPRINT(SCORE):   run;
 
NOTE: Deleting WORK.SCORE_PATH (memtype=DATA).
MPRINT(SCORE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: EndGrp11;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3308011    *------------------------------------------------------------*;
3308012    * End SCORE: EndGrp11;
3308013    *------------------------------------------------------------*;
3308014
 
3308015    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3308016    * EndGrp11: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * EndGrp11: Scoring DATA data;
3308017    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3308018    data EMWS1.EndGrp11_TRAIN
3308019    / view=EMWS1.EndGrp11_TRAIN
3308020    ;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp11_TRAIN / view=EMWS1.EndGrp11_TRAIN ;
3308021    set EMWS1.Neural3_TRAIN
3308022    ;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural3_TRAIN ;
3308023    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.ENDGRP11_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.NEURAL3_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
3308024    quit;
 
3308026    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
3308027    * EndGrp11: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp11: Computing metadata for TRAIN data;
3308028    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.ENDGRP11_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp11\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp11_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp11_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp11_TRAIN out=WORK.M2HNO7WG noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2HNO7WG;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2HNO7WG(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2HNO7WG;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2HNO7WG;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3UN583W NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3UN583W;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3UN583W;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1HQ6KKX(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3UN583W;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3UN583W;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3UN583W;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3UN583W;
MPRINT(EMADVISECOLUMNS):   set WORK.M3UN583W;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Neural3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp11_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp11";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp11";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp11";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp11: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
3308374    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
3308375    set EMWS1.EndGrp11_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_EMINFO;
3308376    where DATA='EndGrp11' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp11' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
3308377    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP11_EMINFO.
      WHERE (DATA='EndGrp11') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3308378    data EMWS1.EndGrp11_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp11_EMINFO;
3308379    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
3308380    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
3308381    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.ENDGRP11_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
3308385    run;
3308386    data EMWS1.EndGrp11_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp11_EMINFO;
3308387    set EMWS1.EndGrp11_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_EMINFO WORK.MODELTEMP_INFO;
3308388    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP11_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP11_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3308389    proc sort data = EMWS1.EndGrp11_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp11_EMINFO NOTHREADS;
3308390    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3308391    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP11_EMINFO.
NOTE: The data set EMWS1.ENDGRP11_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3308392    proc sort data = EMWS1.Neural3_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Neural3_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
3308393    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3308394    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL3_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3308395    proc sort data = EMWS1.EndGrp11_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp11_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
3308396    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3308397    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP11_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3308398    data EMWS1.EndGrp11_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp11_EMINFO;
3308399    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
3308400    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3308401    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP11_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3308402    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
3308403    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
3308404    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
3308405    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS1.ENDGRP11_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:03:37 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                02 June 2018
Time:                17:03:37 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2RAKG8F "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp11\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2RAKG8F new;
MPRINT(EM_DIAGRAM):   run;
3308429    data EMWS1.EndGrp11_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp11_EMOUTFIT;
3308430    set EMWS1.EndGrp11_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_EMOUTFIT;
3308431    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
3308432    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
3308433    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
3308434    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP11_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP11_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3308435    proc sort data=EMWS1.EndGrp11_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp11_EMREPORTFIT nothreads;
3308436    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
3308437    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP11_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP11_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3308438    %let _EMwarndup = 0;
3308439    %let _EMtargetdup =;
3308440    %let _EMASEtargetdup =;
3308441    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3308442    set EMWS1.EndGrp11_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_EMOUTFIT;
3308443    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
3308444    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
3308445    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
3308446    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
3308447    end;
MPRINT(EM_DIAGRAM):   end;
3308448    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP11_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3308449    proc sort data=EMWS1.Neural3_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural3_CMeta_TRAIN out=WORK.SUBSETINMETA;
3308450    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3308451    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL3_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 20 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3308452    proc sort data=EMWS1.EndGrp11_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp11_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
3308453    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3308454    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP11_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 20 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3308455    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
3308456    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
3308457    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3308458    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 20 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3308459    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
3308460    set EMWS1.EndGrp11_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_CMeta_TRAIN;
3308461    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
3308462    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP11_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3308463    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
3308464    set EMWS1.EndGrp11_TRAIN(keep=
3308465    F_DepVar
3308466    I_DepVar
3308467    P_DepVar0
3308468    P_DepVar1
3308469    R_DepVar0
3308470    R_DepVar1
3308471    U_DepVar
3308472    _WARN_
3308473    DepVar
3308474    );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
3308475    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2184 observations read from the data set EMWS1.GRP11_TRAIN.
NOTE: View EMWS1.ENDGRP11_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2184 observations read from the data set EMWS1.NEURAL3_TRAIN.
NOTE: There were 2184 observations read from the data set EMWS1.ENDGRP11_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2184 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
3312662    %let _cn = %sysfunc(getoption(CENTER));
3312663    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3312664    proc print data=EMWS1.EndGrp11_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp11_EMREPORTFIT noobs label;
3312665    var STAT LABEL TRAIN
3312666    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
3312667    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
3312668    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3312669    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
3312670    run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP11_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 2239.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3312671    title10;
MPRINT(EM_DIAGRAM):   title10;
3312672    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3312673    proc sort data=EMWS1.EndGrp11_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp11_EMCLASSIFICATION nothreads;
3312674    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
3312675    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP11_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP11_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3312676    %let _cn = %sysfunc(getoption(CENTER));
3312677    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
3312678    proc print data=EMWS1.EndGrp11_EMCLASSIFICATION noobs label;
The SAS System
 
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp11_EMCLASSIFICATION noobs label;
3312679    var from into pct_row pct_col count percent
3312680    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
3312681    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
3312682    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
3312683    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
3312684    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
3312685    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
3312686    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
3312687    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
3312688    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
3312689    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3312690    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
3312691    run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP11_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 2240.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3312692    title9;
MPRINT(EM_DIAGRAM):   title9;
3312693    title10;
MPRINT(EM_DIAGRAM):   title10;
3312694    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3312695    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3312696    modify EndGrp11_EMRANK;
MPRINT(EM_DIAGRAM):   modify EndGrp11_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3312697    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3312698    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
3312699    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP11_EMRANK.DATA.
3312700    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
 
3312701    %let _cn = %sysfunc(getoption(CENTER));
3312702    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3312703    proc print data=EMWS1.EndGrp11_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp11_EMRANK label noobs;
3312704    var
3312705    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
3312706    by
3312707    notsorted DATAROLE
3312708    notsorted TARGET
3312709    notsorted TARGETLABEL
3312710    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
3312711    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3312712    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
3312713    run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP11_EMRANK.
NOTE: The PROCEDURE PRINT printed page 2241.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3312714    title10;
MPRINT(EM_DIAGRAM):   title10;
3312715    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3312716    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3312717    modify EndGrp11_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify EndGrp11_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3312718    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3312719    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
3312720    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP11_EMSCOREDIST.DATA.
3312721    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
3312722    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3312723    set EMWS1.Grp11_GROUPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp11_GROUPINFO;
3312724    where _LOOP_=10;
MPRINT(EM_DIAGRAM):   where _LOOP_=10;
3312725    call symput('LOOP_WHERE', strip(_wheredesc_));
MPRINT(EM_DIAGRAM):   call symput('LOOP_WHERE', strip(_wheredesc_));
3312726    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP11_GROUPINFO.
      WHERE _LOOP_=10;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3312727    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3312728    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3312729    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3312730    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3312731    set EMWS1.EndGrp11_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_EMRANK;
3312732    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3312733    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3312734    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP11_EMRANK.
NOTE: The data set WORK.TEMP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3312735    data EMWS1.EndGrp11_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp11_EMRANK_LOOP;
3312736    set EMWS1.EndGrp11_EMRANK_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_EMRANK_LOOP temp;
3312737    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 180 observations read from the data set EMWS1.ENDGRP11_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP11_EMRANK_LOOP has 200 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3312738    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3312739    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3312740    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3312741    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3312742    set EMWS1.EndGrp11_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_EMSCOREDIST;
3312743    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3312744    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3312745    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP11_EMSCOREDIST.
NOTE: The data set WORK.TEMP has 20 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3312746    data EMWS1.EndGrp11_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp11_EMSCOREDIST_LOOP;
3312747    set EMWS1.EndGrp11_EMSCOREDIST_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_EMSCOREDIST_LOOP temp;
3312748    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 180 observations read from the data set EMWS1.ENDGRP11_EMSCOREDIST_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP11_EMSCOREDIST_LOOP has 200 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3312749    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3312750    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3312751    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3312752    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3312753    set EMWS1.EndGrp11_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_EMOUTFIT;
3312754    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3312755    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3312756    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP11_EMOUTFIT.
NOTE: The data set WORK.TEMP has 1 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3312757    data EMWS1.EndGrp11_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp11_EMOUTFIT_LOOP;
3312758    set EMWS1.EndGrp11_EMOUTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_EMOUTFIT_LOOP temp;
3312759    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.ENDGRP11_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP11_EMOUTFIT_LOOP has 10 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3312760    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3312761    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3312762    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3312763    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3312764    set EMWS1.EndGrp11_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_EMREPORTFIT;
3312765    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3312766    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3312767    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP11_EMREPORTFIT.
NOTE: The data set WORK.TEMP has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3312768    data EMWS1.EndGrp11_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp11_EMREPORTFIT_LOOP;
3312769    set EMWS1.EndGrp11_EMREPORTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_EMREPORTFIT_LOOP temp;
3312770    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 189 observations read from the data set EMWS1.ENDGRP11_EMREPORTFIT_LOOP.
NOTE: There were 21 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP11_EMREPORTFIT_LOOP has 210 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3312771    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3312772    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3312773    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3312774    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3312775    set EMWS1.EndGrp11_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_EMCLASSIFICATION;
3312776    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3312777    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3312778    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP11_EMCLASSIFICATION.
NOTE: The data set WORK.TEMP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3312779    data EMWS1.EndGrp11_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp11_EMCLASSIFICATION_LOOP;
3312780    set EMWS1.EndGrp11_EMCLASSIFICATION_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp11_EMCLASSIFICATION_LOOP temp;
3312781    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS1.ENDGRP11_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP11_EMCLASSIFICATION_LOOP has 40 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
