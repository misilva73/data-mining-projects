*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                17:05:18 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:05:15 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                17:05:15 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2CCFZ08 "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Grp3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2CCFZ08 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Grp3\EMGROUP\EMLOG_11.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:05:15 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Grp3\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Grp3\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Grp3\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Grp3\EMGROUP\EMOUTPUT_11.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:05:15 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Grp3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Grp3\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Grp3\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Grp3\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
3456615    proc freq data=EMWS1.Grp3_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Grp3_VariableSet noprint;
3456616    table ROLE*LEVEL/out=WORK.Grp3META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Grp3META;
3456617    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.GRP3_VARIABLESET.
NOTE: The data set WORK.GRP3META has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.00 seconds
 
 
3456618    proc print data=WORK.Grp3META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Grp3META label noobs;
3456619    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
3456620    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
3456621    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3456622    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
3456623    run;
 
NOTE: There were 4 observations read from the data set WORK.GRP3META.
NOTE: The PROCEDURE PRINT printed page 2300.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3456624    title10;
MPRINT(EM_DIAGRAM):   title10;
3456625    %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Grp3: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Grp3: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3456948    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3456949    * Grp3: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * Grp3: Generation of macros and macro variables;
3456950    * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
3456951    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
3456952    %let EMEXCEPTIONSTRING=;
3456953    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3456954    * TRAIN: Grp3;
MPRINT(EM_DIAGRAM):   * TRAIN: Grp3;
3456955    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3456956    %let EM_ACTION = TRAIN;
3456957    %let syscc = 0;
3456958    %macro main;
3456959
3456960       filename temp catalog 'sashelp.emutil.gp_macros.source';
3456961       %include temp;
3456962       filename temp;
3456963
3456964       %SetProperties;
3456965
3456966       %if %upcase(&EM_ACTION) = CREATE %then %do;
3456967
3456968           filename temp catalog 'sashelp.emutil.gp_create.source';
3456969           %include temp;
3456970           filename temp;
3456971
3456972           %create;
3456973       %end;
3456974       %else
3456975       %if %upcase(&EM_ACTION) = TRAIN %then %do;
3456976
3456977           filename temp catalog 'sashelp.emutil.gp_train.source';
3456978           %include temp;
3456979           filename temp;
3456980
3456981           %train;
3456982       %end;
3456983       %else
3456984       %if %upcase(&EM_ACTION) = SCORE %then %do;
3456985
3456986           filename temp catalog 'sashelp.emutil.gp_score.source';
3456987           %include temp;
3456988           filename temp;
3456989
3456990           %score;
3456991       %end;
3456992       %else
3456993       %if %upcase(&EM_ACTION) = REPORT %then %do;
3456994
3456995           filename temp catalog 'sashelp.emutil.gp_report.source';
3456996           %include temp;
3456997           filename temp;
3456998
3456999           %report;
3457000
3457001       %end;
3457002       %else
3457003       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
3457004
3457005           filename temp catalog 'sashelp.emutil.gp_postloop.source';
3457006           %include temp;
3457007           filename temp;
3457008
3457009           %postloop;
3457010
3457011       %end;
3457012
3457013       %doendm:
3457014    %mend main;
3457015
3457016    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.gp_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.GP_MACROS.SOURCE.
3457017   +%macro SetProperties;
3457018   +   %em_checkmacro(name=EM_PROPERTY_MODE,            global=Y, value=STRATIFY);
3457019   +   %em_checkmacro(name=EM_PROPERTY_TARGETGROUP,     global=Y, value=Y);
3457020   +   %em_checkmacro(name=EM_PROPERTY_INDEXCOUNT,      global=Y, value=10);
3457021   +   %em_checkmacro(name=EM_PROPERTY_MINIMUMOBS,      global=Y, value=10);
3457022   +   %em_checkmacro(name=EM_PROPERTY_SIZETYPE,        global=Y, value=PERCENT);
3457023   +   %em_checkmacro(name=EM_PROPERTY_SIZEOBS,         global=Y, value=.);
3457024   +   %em_checkmacro(name=EM_PROPERTY_SIZEPERCENT,     global=Y, value=10);
3457025   +%mend SetProperties;
3457026   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.gp_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.GP_TRAIN.SOURCE.
3457027   +%macro scoreValidTest(data=, out=);
3457029   +   %if ("&data" ne "") and (%sysfunc(exist(&data, VIEW)) or %sysfunc(exist(&data))) %then %do;
3457030   +       data &out / view = &out;
3457031   +          retain _RESAMP_ 1;
3457032   +          set &data;
3457033   +       run;
3457034   +   %end;
3457036   +%mend scoreValidTest;
3457038   +%macro getVariables;
3457039   +   %if "&emloopnumber" = "1" %then %do;
3457040   +       data _null_;
3457041   +          retain numgoup 0;
3457042   +          set &em_data_variableset end=eof;
3457043   +          %if &em_num_target = 1 %then %do;
3457044   +              %if &EM_PROPERTY_MODE = BOOSTING %then %do;
3457045   +                  where (role = 'TARGET' and level ^= 'INTERVAL' and grouprole in('BOOST', 'DEFAULT'));
3457046   +                  if role eq 'TARGET' then call symput('emboostvar', strip(NAME));
3457047   +              %end;
3457048   +              %else
3457049   +              %if &EM_PROPERTY_MODE = BAGGING %then %do;
3457050   +                  where (role = 'TARGET' and grouprole in('BAG', 'DEFAULT'));
3457051   +                  if role eq 'TARGET' then call symput('embagvar', strip(NAME));
3457052   +              %end;
3457053   +          %end;
3457054   +          %else %do;
3457055   +              where (grouprole= 'GROUP' or (role = 'TARGET' and grouprole in('BAG', 'BOOST')) or (role = 'SEGMENT' and grouprole = 'DEFAULT'));
3457056   +              if grouprole eq 'BAG' then call symput('embagvar', strip(NAME));
3457057   +              else
3457058   +              if grouprole eq 'BOOST' then call symput('emboostvar', strip(NAME));
3457059   +          %end;
3457060   +          if grouprole = 'GROUP' or (role = 'SEGMENT' and grouprole = 'DEFAULT') then do;
3457061   +             call symput('emgroupvar', strip(symget('emgroupvar'))!!' '!!strip(NAME));
3457062   +             numgroup + 1;
3457063   +          end;
3457064   +          if eof then call symput('emnumgroupvar', strip(put(numgroup, best.)));
3457065   +       run;
3457066   +    %end;
3457067   +    %else %do;
3457068   +          %if "&EM_PROPERTY_MODE" = "STRATIFY" or "&EM_PROPERTY_MODE" = "CROSSVALIDATION"  %then %do;
3457069   +            data _null_;
3457070   +               retain numgoup 0;
3457071   +               set &em_data_variableset end=eof;
3457072   +               where (grouprole= 'GROUP' or (role = 'SEGMENT' and grouprole = 'DEFAULT'));
3457073   +               call symput('emgroupvar', strip(symget('emgroupvar'))!!' '!!strip(NAME));
3457074   +               numgroup + 1;
3457075   +               if eof then call symput('emnumgroupvar', strip(put(numgroup, best.)));
3457076   +            run;
3457077   +          %end;
3457078   +            %else
3457079   +        %if &EM_PROPERTY_MODE = BOOSTING %then %do;
3457080   +            %em_getName(key=BOOSTINFO,   type=DATA);
3457081   +            %if %sysfunc(exist(&em_user_boostinfo)) %then %do;
3457082   +                data _null_;
3457083   +                   set &em_user_boostinfo;
3457084   +                   call symput('emboostvar', strip(_TARGET_));
3457085   +                run;
3457086   +            %end;
3457087   +        %end;
3457088   +        %else
3457089   +            %if &EM_PROPERTY_MODE = BAGGING %then %do;
3457090   +                %em_getName(key=BAGINFO,   type=DATA);
3457091   +                %if %sysfunc(exist(&em_user_baginfo)) %then %do;
3457092   +                    data _null_;
3457093   +                       set &em_user_baginfo;
3457094   +                      call symput('embagvar', strip(_TARGET_));
3457095   +                    run;
3457096   +                %end;
3457097   +            %end;
3457098   +    %end;
3457099   +%mend getVariables;
3457101   +%macro gp_bag(targetname=);
3457102   +   %if %index(&EM_DEBUG, _ALL_) %then %do;
3457103   +        %put LOOP MODE:   &emloopmode ;
3457104   +        %put LOOP NUMBER: &emloopnumber;
3457105   +        %put BAGGING TARGET: &targetname;
3457106   +   %end;
3457108   +   filename temp catalog 'sashelp.emutil.gp_boostmacros.source';
3457109   +   %include temp;
3457110   +   filename temp;
3457112   +   %em_getName(key=BAGINFO,    type=DATA);
3457113   +   %em_getName(key=EMLOOPINFO, type=DATA);
3457115   +   %if &emloopnumber = 1 %then %do;
3457116   +       filename gpDelta "&EM_FILE_CDELTA_TRAIN";
3457117   +       data _null_;
3457118   +          file gpdelta;
3457119   +          put "if ROLE = 'TARGET' and NAME ne '&targetName' then delete;";
3457120   +          put "else if upcase(NAME) eq '_RESAMP_' then do;";
3457121   +          put "     LABEL='Bootstrap Frequency'; LEVEL='INTERVAL'; ROLE='FREQ';";
3457122   +          put "end;";
3457123   +       run;
3457124   +       filename gpdelta;
3457126   +       %if %sysfunc(exist(&em_user_baginfo)) %then %do;
3457127   +           proc datasets lib=&em_lib nolist;
3457128   +              delete &em_nodeid._baginfo;
3457129   +           run;
3457130   +       %end;
3457132   +       %if "%em_freq" ne "" %then %do;
3457133   +           proc means data=&em_import_data sum;
3457134   +              var %em_freq;
3457135   +              output out = _tempds sum=sumfreq;
3457136   +           run;
3457137   +           quit;
3457138   +           data _null_;
3457139   +              set _tempDs;
3457140   +              call symput('_sumfreq', put(sumfreq, best12.));
3457141   +           run;
3457142   +       %end;
3457143   +       %else %do;
3457144   +           proc sql noprint;
3457145   +              select count(*) into :_sumfreq
3457146   +              from &em_import_data;
3457147   +           quit;
3457148   +       %end;
3457150   +       %if "&em_property_SizeType" eq "PERCENT" %then %do;
3457151   +           data _null_;
3457152   +              call symput('_size', put(round(&_sumfreq*&em_property_sizepercent/100), best12.));
3457153   +           run;
3457154   +       %end;
3457155   +       %else
3457156   +           %let _size = &em_property_sizeobs;
3457158   +       data &em_user_baginfo;
3457159   +          length _LOOP_ 8 _TARGET_ $32 _SUMFREQ_ 8 _SIZE_ 8;
3457160   +          _LOOP_     =&EM_PROPERTY_INDEXCOUNT;
3457161   +          _TARGET_   ="&targetname";
3457162   +          _SUMFREQ_  =&_sumfreq;
3457163   +           _SIZE_    = &_size;
3457164   +          output;
3457165   +       run;
3457166   +       data &em_user_emloopinfo;
3457167   +          length MODE $8;
3457168   +          label MODE     = "%sysfunc(sasmsg(sashelp.dmine, rpt_mode_vlabel,       NOQUOTE))"
3457169   +                _LOOP_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_groupIndex_vlabel, NOQUOTE))"
3457170   +               _TARGET_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,     NOQUOTE))";
3457171   +           set &em_user_baginfo(keep=_LOOP_ _TARGET_);
3457172   +           MODE='Bagging';
3457173   +       run;
3457175   +       data &em_data_eminfo;
3457176   +          length TARGET KEY $32  DATA $43;
3457177   +          TARGET=''; KEY='BAGINFO'; DATA="&em_nodeid"; output;
3457178   +       run;
3457179   +   %end;
3457180   +   %else %do;
3457181   +      data _null_;
3457182   +         set &em_user_baginfo;
3457183   +         call symput('_sumfreq', put(_sumfreq_, best12.));
3457184   +         call symput('_size', put(_size_, best12.));
3457185   +      run;
3457186   +   %end;
3457188   +   %let bagsumFreq  = &_sumFreq;
3457189   +   %let bagSize     = &_Size;
3457191   +   %embag( _tra=&em_export_train, _train=&em_import_data, _seed=&em_property_randomseed, _freq=%em_freq,
3457192   +           _sumfreq=&bagsumfreq, _size=&bagsize, _loop=&emloopnumber);
3457194   +   %scoreValidTest(data=&em_import_validate, out=em_export_validate);
3457195   +   %scoreValidTest(data=&em_import_test,     out=em_export_test);
3457197   +   %doendbg:
3457199   +%mend gp_bag;
3457202   +%macro gp_boost(targetname=);
3457203   +   %if %index(&EM_DEBUG, _ALL_) %then %do;
3457204   +       %put LOOP MODE:   &emloopmode ;
3457205   +       %put LOOP NUMBER: &emloopnumber;
3457206   +        %put BAGGING TARGET: &targetname;
3457207   +   %end;
3457209   +   filename temp catalog 'sashelp.emutil.gp_boostmacros.source';
3457210   +   %include temp;
3457211   +   filename temp;
3457213   +   %em_getname(key=EMLOOPINFO, type=DATA);
3457214   +   %em_getname(key=BOOSTWEIGHT, type=DATA);
3457215   +   %em_getname(key=BOOSTSCORE,  type=DATA);
3457216   +   %em_getName(key=BOOSTINFO,   type=DATA);
3457218   +   %if &emloopnumber = 1 %then %do;
3457219   +       filename gpDelta "&EM_FILE_CDELTA_TRAIN";
3457220   +       data _null_;
3457221   +          file gpdelta;
3457222   +          put "if ROLE = 'TARGET' and NAME ne '&targetName' then delete;";
3457223   +          put "else if upcase(NAME) eq '_RESAMP_' then do;";
3457224   +          put "     LABEL='Arcing Frequency'; LEVEL='INTERVAL'; ROLE='FREQ';";
3457225   +          put "end;";
3457226   +       run;
3457227   +       filename gpdelta;
3457229   +       %let deleteString =;
3457230   +       %if %sysfunc(exist(&em_user_boostweight)) %then %let deleteString = &deleteString &em_nodeid._boostweight;
3457231   +       %if %sysfunc(exist(&em_user_boostscore))  %then %let deleteString = &deleteString &em_nodeid._boostscore;
3457232   +       %if "&deleteString" ne "" %then %do;
3457233   +           proc datasets lib=&em_lib nolist;
3457234   +              delete &deleteString;
3457235   +           run;
3457236   +       %end;
3457238   +       %emboost0( _train=&em_import_data, _dmboods=&em_user_boostweight, _target=&targetname, _freq=%em_freq);
3457240   +       data &em_user_boostinfo;
3457241   +          length _LOOP_ 8 _TARGET_ $32 _DMBOOST_DIVISOR_ 8 _SUMFREQ_ 8;
3457242   +          _LOOP_            =&EM_PROPERTY_INDEXCOUNT;
3457243   +          _TARGET_          ="&targetname";
3457244   +          _DMBOOST_DIVISOR_ =&_dmboodiv;
3457245   +          _SUMFREQ_         =&_sumfreq;
3457246   +       run;
3457247   +       data &em_user_emloopinfo;
3457248   +          length MODE $8;
3457249   +          label MODE     = "%sysfunc(sasmsg(sashelp.dmine, rpt_mode_vlabel,       NOQUOTE))"
3457250   +                _LOOP_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_groupIndex_vlabel, NOQUOTE))"
3457251   +               _TARGET_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,     NOQUOTE))";
3457252   +           set &em_user_boostinfo(keep=_LOOP_ _TARGET_);
3457253   +           MODE='Boosting';
3457254   +       run;
3457256   +       data &em_data_eminfo;
3457257   +          length TARGET KEY $32  DATA $43;
3457258   +          TARGET=''; KEY='BOOSTINFO'; DATA="&em_nodeid"; output;
3457259   +       run;
3457261   +   %end;
3457262   +   %else %do;
3457263   +       %global _dmboodiv;
3457264   +       %let dmboosf = %upcase(&targetname);
3457265   +       %if %sysfunc(length(&targetname))> 30 %then
3457266   +           %let dmboosf =  %substr(&targetname, 1, 30);
3457268   +       data _null_;
3457269   +          set &em_user_boostinfo;
3457270   +          call symput('_SUMFREQ',  strip(put(_sumfreq_,best12.)));
3457271   +       run;
3457273   +       %emboost2(_freq=%em_freq, _dmboods=&em_user_boostweight, _dmensds=&em_user_boostscore, _dmboosf=&dmboosf, _sumfreq=&_sumfreq);
3457275   +       data &em_user_boostinfo;
3457276   +          set &em_user_boostinfo;
3457277   +          _DMBOOST_DIVISOR_ =&_dmboodiv;
3457278   +       run;
3457280   +       %emboost1(_tra=&em_export_train, _TRAIN=&em_import_data, _FREQ=%em_freq, _dmboods=&em_user_boostweight, _dmboodiv=&_dmboodiv);
3457282   +   %end;
3457284   +    %scoreValidTest(data=&em_import_validate, out=em_export_validate);
3457285   +    %scoreValidTest(data=&em_import_test,     out=em_export_test);
3457287   +   %doendbst:
3457289   +%mend gp_boost;
3457291   +%macro gp_group(numgroupvar=, groupvar=);
3457292   +   %em_getname(key=GROUPINFO, type=DATA);
3457293   +   %em_getName(key=LOOPINFO,  type=DATA);
3457294   +   %em_getName(key=EMGROUPINFO, type=DATA);
3457296   +   %if &emloopnumber=1 or ^%sysfunc(exist(&em_user_groupinfo)) %then %do;
3457297   +       ods listing close;
3457298   +       %if &numgroupvar = 1 %then %do;
3457299   +           ods output onewayfreqs=temp;
3457300   +       %end;
3457301   +       %else %do;
3457302   +           ods output crosstabfreqs=temp;
3457303   +       %end;
3457304   +       proc freq data=&em_import_data;
3457305   +          table
3457307   +          %let tableString =;
3457308   +          %let freqString  =;
3457309   +          %do i=1 %to &numgroupvar;
3457310   +              %let tableString = &tableString %scan(&groupvar, &i, %str( ));
3457311   +              %if &i<&numgroupvar %then %let tableString = &tableString *;
3457312   +              %let freqString = &freqString.1;
3457313   +          %end;
3457314   +          &tableString / missing;
3457315   +       run;
3457316   +       ods listing;
3457317   +       %if &numgroupvar = 1 %then %do;
3457318   +           data _null_;
3457319   +              retain totalobs 0;
3457320   +              set temp end=eof;
3457321   +              totalobs + frequency;
3457322   +              if eof then
3457323   +                 call symput('_totalObs_', put(totalobs, best.));
3457324   +           run;
3457326   +           proc sort data=temp out=loopinfo nodupkey;
3457327   +              by &groupvar;
3457328   +              where frequency>=&em_property_minimumObs;
3457329   +           run;
3457330   +       %end;
3457331   +       %else %do;
3457332   +           data _null_;
3457333   +              set temp;
3457334   +              where _type_='00';
3457335   +              call symput('_totalObs_', put(frequency, best.));
3457336   +           run;
3457337   +           proc sort data=temp(drop=rowpercent colpercent) out=loopinfo nodupkey;
3457338   +              by &groupvar;
3457339   +              where _type_="&freqString" and frequency>=&em_property_minimumObs;
3457340   +           run;
3457341   +       %end;
3457343   +       %em_getname(key=PRECODE, type=FILE, extension=sas);
3457344   +       filename _pregrp "&em_user_precode";
3457346   +       %let dsid = %sysfunc(open(loopinfo));
3457347   +       %do i=1 %to &numgroupvar;
3457348   +           %let varname = %scan(&groupvar, &i, %str( ));
3457349   +           %let varnum  = %sysfunc(varnum(&dsid, &varname));
3457350   +           %let varfmt  = %sysfunc(varfmt(&dsid, &varnum));
3457351   +           %if %index(&varfmt, -) %then %do;
3457352   +               %let varfmt = %sysfunc(scan(&varfmt, 1,-)).;
3457353   +           %end;
3457355   +           %let vartype = %sysfunc(vartype(&dsid, &varnum));
3457356   +           %let varlen  = %sysfunc(varlen(&dsid, &varnum));
3457357   +           %let fmttype&i = &vartype;
3457358   +           %let fmtlen&i  = &varlen;
3457360   +           %let fmtvar&i =;
3457361   +           %let fmt&i    =;
3457362   +           %if "&varfmt" ne "" %then %do;
3457363   +              %let fmtvar&i  = _FORMAT&i._;
3457364   +              %let fmt&i     = &varfmt;
3457365   +           %end;
3457366   +       %end;
3457367   +       %let dsid = %sysfunc(close(&dsid));
3457369   +       data _null_;
3457370   +          %do i=1 %to &numgroupvar;
3457371   +              %if "&&fmt&i" ne "" %then %do;
3457372   +                  retain len_&i 0;
3457373   +              %end;
3457374   +          %end;
3457376   +          set loopinfo end=eof;
3457377   +          file _pregrp;
3457379   +          %do i=1 %to &numgroupvar;
3457380   +              %let varname = %scan(&groupvar, &i, %str( ));
3457381   +              %if "&&fmt&i" ne "" %then %do;
3457382   +                 if length(put(&varname, &&fmt&i)) > len_&i then
3457383   +                    len_&i = length(put(&varname, &&fmt&i));
3457384   +              %end;
3457385   +          %end;
3457387   +          if eof then do;
3457388   +             %do i=1 %to &numgroupvar;
3457389   +                 %let varname = %scan(&groupvar, &i, %str( ));
3457390   +                 %if "&&fmt&i" ne "" %then %do;
3457391   +                     put "length  &&fmtvar&i" len_&i "$" len_&i ";";
3457392   +                     put "drop &&fmtvar&i" len_&i ";";
3457393   +                     put "&&fmtvar&i" len_&i "= strip(put(&varname, &&fmt&i));";
3457394   +                     call symput('fmtnewlen'!!"&i", put(len_&i, best.));
3457395   +                     call symput('fmtnewvar'!!"&i", "&&fmtvar&i"!!strip(put(len_&i, best.)));
3457396   +                 %end;
3457397   +              %end;
3457398   +          end;
3457399   +      run;
3457401   +      data loopinfo;
3457402   +         set loopinfo;
3457403   +         %do i=1 %to &numgroupvar;
3457404   +             %let varname = %scan(&groupvar, &i, %str( ));
3457405   +             %if "&&fmt&i" ne "" %then %do;
3457406   +                 length  &&fmtnewvar&i $&&fmtnewlen&i;
3457407   +                 &&fmtnewvar&i = strip(put(&varname, &&fmt&i));
3457408   +             %end;
3457409   +         %end;
3457410   +      run;
3457411   +      filename _pregrp;
3457413   +      %if (&EM_PROPERTY_TARGETGROUP= Y and &EM_NUM_TARGET>1) %then %do;
3457414   +          data temp;
3457415   +             length _LOOP_ 8 _WHERE_  _WHEREDESC_ $2000;
3457416   +             keep _LOOP_ _WHERE_ _WHEREDESC_ FREQUENCY;
3457417   +      %end;
3457418   +      %else %do;
3457419   +          data &em_user_groupinfo;
3457420   +             length _LOOP_ 8 _TARGET_ $32 _WHERE_  _WHEREDESC_ $2000;
3457421   +             keep _LOOP_ _TARGET_  _WHERE_ _WHEREDESC_ FREQUENCY;
3457422   +             retain _TARGET_ '';
3457423   +      %end;
3457425   +          set loopinfo;
3457426   +          _LOOP_= _N_;
3457427   +          _WHERE_ = '';
3457428   +          _WHEREDESC_  = '';
3457429   +          %do i=1 %to &numgroupvar;
3457430   +              %let varname = %scan(&groupvar, &i, %str( ));
3457431   +              %if "&&fmt&i" eq "" %then %do;
3457432   +                  %if "&&fmtType&i" eq "N" %then %do;
3457433   +                      _WHERE_     = strip(_WHERE_)!!" &Varname ="!!strip(put(&varname, best12.));
3457434   +                      _WHEREDESC_ = strip(_WHEREDESC_)!!" &Varname ="!!strip(put(&varname, best12.));
3457435   +                   %end;
3457436   +                  %else %do;
3457437   +                       _WHERE_ = strip(_WHERE_)!!" &Varname ='"!!tranwrd(strip(&varname), "'", "''")!!"'";
3457438   +                       _WHEREDESC_ = strip(_WHEREDESC_)!!" &Varname ="!!strip(&varname);
3457439   +                  %end;
3457440   +              %end;
3457441   +              %else %do;
3457442   +                       _WHERE_ = strip(_WHERE_)!!" &&fmtnewvar&i ='"!!tranwrd(strip(&&fmtnewvar&i), "'", "''")!!"'";
3457443   +                       _WHEREDESC_ = strip(_WHEREDESC_)!!" &VarName = "!!strip(&&fmtnewvar&i);
3457444   +              %end;
3457445   +              %if &i < &numgroupvar %then %do;
3457446   +                  _WHERE_ = strip(_WHERE_)!!' and ';
3457447   +                  _WHEREDESC_ = strip(_WHEREDESC_)!!' and ';
3457448   +              %end;
3457449   +          %end;
3457450   +          %if "&EM_PROPERTY_MODE" = "CROSSVALIDATION"  %then %do;
3457451   +              _WHERE_ = '^('!!strip(_WHERE_)!!')';
3457452   +              _WHEREDESC_ = '^('!!strip(_WHEREDESC_)!!')';
3457453   +              FREQUENCY = &_totalobs_ - FREQUENCY;
3457454   +          %end;
3457455   +      run;
3457457   +      %if (&EM_PROPERTY_TARGETGROUP= Y and &EM_NUM_TARGET>1) %then %do;
3457458   +          data target;
3457459   +             length _TARGET_ $32;
3457460   +              %do i=1 %to &em_num_target;
3457461   +                  %let varname = %scan(%em_target, &i, %str( ));
3457462   +                  _TARGET_ = "&varname";
3457463   +                  output;
3457464   +              %end;
3457465   +          run;
3457466   +          proc sql;
3457467   +             create table &em_user_groupinfo as select * from  work.temp, work.target;
3457468   +          quit;
3457469   +          data &em_user_groupinfo;
3457470   +             set &em_user_groupinfo;
3457471   +             _LOOP_=_N_;
3457472   +          run;
3457473   +      %end;
3457475   +      data &em_data_eminfo;
3457476   +         length TARGET KEY $32  DATA $43;
3457477   +         TARGET=''; KEY='GROUPINFO'; DATA="&em_nodeid"; output;
3457478   +      run;
3457480   +      data &em_user_emloopinfo;
3457481   +         set &em_user_groupinfo;
3457482   +         %if (&EM_PROPERTY_TARGETGROUP= Y and &EM_NUM_TARGET>1) %then %do;
3457483   +             label _LOOP_      = "%sysfunc(sasmsg(sashelp.dmine, rpt_groupIndex_vlabel, NOQUOTE))"
3457484   +                   _TARGET_    = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,     NOQUOTE))"
3457485   +                   _WHEREDESC_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel,      NOQUOTE))"
3457486   +                   FREQUENCY   = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,      NOQUOTE))";
3457487   +             keep _LOOP_ _TARGET_ _WHEREDESC_ FREQUENCY;
3457488   +         %end;
3457489   +         %else %do;
3457490   +             label _LOOP_      = "%sysfunc(sasmsg(sashelp.dmine, rpt_groupIndex_vlabel, NOQUOTE))"
3457491   +                   _TARGET_    = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,     NOQUOTE))"
3457492   +                   _WHEREDESC_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel,      NOQUOTE))"
3457493   +                   FREQUENCY   = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,      NOQUOTE))";
3457494   +             keep _LOOP_ _WHEREDESC_ FREQUENCY;
3457495   +         %end;
3457496   +      run;
3457498   +      proc datasets lib=work nolist;
3457499   +          delete temp loopinfo
3457500   +          %if (&EM_PROPERTY_TARGETGROUP= Y and &EM_NUM_TARGET>1) %then %do;
3457501   +              target
3457502   +          %end;
3457503   +          ;
3457504   +      run;
3457506   +   %end;
3457508   +   filename gpDelta "&EM_FILE_CDELTA_TRAIN";
3457509   +   %if (&EM_PROPERTY_TARGETGROUP= Y and &EM_NUM_TARGET>1) %then %do;
3457510   +       data _null_;
3457511   +          length quotedTarget $32;
3457512   +          set &em_user_groupinfo;
3457513   +          file gpdelta;
3457514   +          if _N_ = &emloopnumber then do;
3457515   +             quotedTarget = "'"!!strip(_TARGET_)!!"'";
3457516   +             put "if ROLE = 'TARGET' and NAME ne " quotedTarget " then delete;";
3457518   +             %do i=1 %to &numgroupvar;
3457519   +                 %let gvar = %upcase(%scan(&groupvar, &i, %str( )));
3457520   +                 put "if upcase(NAME)= '&gvar' then delete;";
3457521   +             %end;
3457522   +          end;
3457523   +       run;
3457524   +   %end;
3457525   +   %else %do;
3457526   +       data _null_;
3457527   +          set &em_user_groupinfo;
3457528   +          file gpdelta;
3457529   +          if _N_ = &emloopnumber then do;
3457530   +             %do i=1 %to &numgroupvar;
3457531   +              %let gvar = %upcase(%scan(&groupvar, &i, %str( )));
3457532   +                 put "if upcase(NAME)= '&gvar' then delete;";
3457533   +             %end;
3457534   +          end;
3457535   +       run;
3457536   +   %end;
3457537   +   filename gpdelta;
3457539   +   %let nobs=0;
3457540   +   %let dsid = %sysfunc(open(&em_user_groupinfo));
3457541   +   %if &dsid>0 %then %do;
3457542   +       %let nobs = %sysfunc(attrn(&dsid, NOBS));
3457543   +       %let dsid = %sysfunc(close(&dsid));
3457544   +   %end;
3457546   +   %if ^&nobs  %then
3457547   +       %let emloopmode =;
3457548   +   %else
3457549   +       %if &nobs< &emloopnumber %then
3457550   +           %let emloopmode = POSTLOOP;
3457551   +        %else
3457552   +        %let emloopmode = LOOP;
3457553   +%mend gp_group;
3457555   +%macro gp_Index;
3457557   +   %em_getName(key=INDEXINFO,  type=DATA);
3457558   +   %em_getName(key=EMLOOPINFO, type=DATA);
3457560   +   %if &emloopnumber=1 or ^%sysfunc(exist(&em_user_indexinfo)) %then %do;
3457561   +       data &em_user_indexinfo;
3457562   +          length _LOOP_ 8 _TARGET_ $32 _WHERE_ $8;
3457563   +          _LOOP_     =&EM_PROPERTY_INDEXCOUNT;
3457564   +          _TARGET_   ="";
3457565   +          _WHERE_    ="";
3457566   +          output;
3457567   +       run;
3457568   +       data &em_data_eminfo;
3457569   +          length TARGET KEY $32  DATA $43;
3457570   +          TARGET=''; KEY='INDEXINFO'; DATA="&em_nodeid"; output;
3457571   +       run;
3457573   +       data &em_user_emloopinfo;
3457574   +          length MODE $8;
3457575   +          label MODE     = "%sysfunc(sasmsg(sashelp.dmine, rpt_mode_vlabel,       NOQUOTE))"
3457576   +                _LOOP_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_groupIndex_vlabel, NOQUOTE))"
3457577   +          set &em_user_indexinfo(keep=_LOOP_ );
3457578   +          MODE='Index';
3457579   +       run;
3457580   +   %end;
3457582   +%mend gp_index;
3457584   +%macro gp_Target;
3457585   +   %let TargetName = %scan(%em_target, &emloopnumber);
3457586   +   %if "&targetName" eq "" %then %do;
3457587   +       %goto doendgpt;
3457588   +   %end;
3457590   +   %if %index(&EM_DEBUG, _ALL_) %then %do;
3457591   +       %put GP_TARGET;
3457592   +       %put &emLoopnumber &TargetName;
3457593   +   %end;
3457595   +   filename gpDelta "&EM_FILE_CDELTA_TRAIN";
3457596   +   data _null_;
3457597   +      file gpdelta;
3457598   +      put "if ROLE = 'TARGET' and NAME ne '&targetName' then delete;";
3457599   +   run;
3457600   +   filename gpdelta;
3457602   +   %if &emloopnumber eq 1 %then %do;
3457603   +       %em_getName(key=TARGETINFO,  type=DATA);
3457604   +       %em_getName(key=EMLOOPINFO,  type=DATA);
3457606   +       data &em_user_targetinfo;
3457607   +          length _LOOP_ 8 _TARGET_ $32 _WHERE_ $2000;
3457608   +          retain _LOOP_;
3457609   +          _WHERE_ = '';
3457610   +          %do i=1 %to &em_num_target;
3457611   +              %let varname = %scan(%em_target, &i, ' ');
3457612   +              _TARGET_ = "&varname";
3457613   +              _LOOP_+1;
3457614   +              output;
3457615   +           %end;
3457616   +       run;
3457617   +       data &em_user_emloopinfo;
3457618   +         set &em_user_targetinfo(keep=_LOOP_ _TARGET_);
3457619   +         label _LOOP_      = "%sysfunc(sasmsg(sashelp.dmine, rpt_groupIndex_vlabel, NOQUOTE))"
3457620   +               _TARGET_    = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,     NOQUOTE))";
3457621   +      run;
3457623   +       data &em_data_eminfo;
3457624   +          length TARGET KEY $32  DATA $43;
3457625   +          TARGET=''; KEY='TARGETINFO'; DATA="&em_nodeid"; output;
3457626   +       run;
3457627   +   %end;
3457629   +   %doendgpt:
3457630   +%mend gp_target;
3457632   +%macro train;
3457633   +   %if %index(&EM_DEBUG, _ALL_) %then %do;
3457634   +       %put LOOP MODE:   &emloopmode ;
3457635   +       %put LOOP NUMBER: &emloopnumber;
3457636   +   %end;
3457638   +   %if &emloopmode eq 'POSTLOOP' %then %goto doendmain;
3457640   +   %if ("&EM_PROPERTY_MODE" = "BOOSTING") or ("&EM_PROPERTY_MODE" = "BAGGING") %then %do;
3457642   +       %let hpdmFlag = 0;
3457643   +       %if %symexist(em_import_DATA_eminfo) %then %do;
3457644   +            data _null_;
3457645   +               set &em_import_DATA_eminfo;
3457646   +               where KEY = "HPDMSAMPLE";
3457647   +               call symput('hpdmFlag', '1');
3457648   +            run;
3457649   +       %end;
3457650   +       %if &hpdmFlag %then %do;
3457651   +           %let emexceptionstring = exception.server.EMTOOL.HPNOBOOSTBAG;
3457652   +           %goto doendmain;
3457653   +       %end;
3457654   +   %end;
3457656   +   %em_getname(key=EMLOOPINFO,  type=DATA);
3457657   +   %em_getname(key=GROUPINFO,  type=DATA);
3457658   +   %em_getname(key=BOOSTINFO,  type=DATA);
3457659   +   %em_getname(key=BAGINFO,    type=DATA);
3457660   +   %em_getname(key=TARGETINFO, type=DATA);
3457661   +   %em_getname(key=INDEXINFO,  type=DATA);
3457662   +   %em_getname(key=EMINFO,  type=DATA);
3457664   +   %if "&emloopnumber" = "1" %then %do;
3457665   +       %em_getname(key=PRECODE, type=FILE, extension=sas);
3457666   +       filename _pregrp "&em_user_precode";
3457667   +       data _null_;
3457668   +         rc = fdelete('_pregrp');
3457669   +       run;
3457670   +       filename _pregrp;
3457672   +       %let members =;
3457673   +       %if %sysfunc(exist(&em_user_emloopinfo)) %then %let members = &members %scan(&EM_USER_EMLOOPINFO,   2, .);
3457674   +       %if %sysfunc(exist(&em_user_groupinfo))  %then %let members = &members %scan(&EM_USER_GROUPINFO,  2, .);
3457675   +       %if %sysfunc(exist(&em_user_targetinfo)) %then %let members = &members %scan(&EM_USER_TARGETINFO, 2, .);
3457676   +       %if %sysfunc(exist(&em_user_boostinfo))  %then %let members = &members %scan(&EM_USER_BOOSTINFO,  2, .);
3457677   +       %if %sysfunc(exist(&em_user_baginfo))    %then %let members = &members %scan(&EM_USER_BAGINFO,    2, .);
3457678   +       %if %sysfunc(exist(&em_user_indexinfo))  %then %let members = &members %scan(&EM_USER_INDEXINFO,  2, .);
3457679   +       %if %sysfunc(exist(&em_user_eminfo))     %then %let members = &members %scan(&EM_USER_EMINFO,  2, .);
3457681   +       %if "&members" ne "" %then %do;
3457682   +           proc datasets lib=&em_lib nolist;
3457683   +              delete &members;
3457684   +           run;
3457685   +      %end;
3457686   +   %end;
3457688   +   %let emboostvar    =;
3457689   +   %let embagvar      =;
3457690   +   %let emgroupvar    =;
3457691   +   %let emnumgroupvar =;
3457692   +   %getVariables;
3457694   +   %if &EM_PROPERTY_MODE = TARGET %then %do;
3457695   +       %if &EM_NUM_TARGET>=1 %then %do;
3457696   +           %gp_target;
3457697   +           %if &emLoopNumber <= &EM_NUM_TARGET %then
3457698   +               %let emloopmode= LOOP;
3457699   +           %else
3457700   +              %let emloopmode = POSTLOOP;
3457701   +       %end;
3457702   +       %else %do;
3457703   +           %let emloopmode = ;
3457704   +           %let emexceptionstring = exception.server.METADATA.USE1TARGET;
3457705   +           %goto doendmain;
3457706   +       %end;
3457707   +   %end;
3457708   +   %else
3457709   +   %if &EM_PROPERTY_MODE = NOGROUP %then %do;
3457710   +       %let emloopmode=;
3457711   +       %if %sysfunc(exist(&em_data_eminfo)) %then %do;
3457712   +           proc delete data=&em_data_eminfo;
3457713   +           run;
3457714   +       %end;
3457715   +   %end;
3457716   +   %else
3457717   +   %if &EM_PROPERTY_MODE = INDEX %then %do;
3457718   +       %gp_index;
3457719   +       %if  &emLoopNumber <= &EM_PROPERTY_INDEXCOUNT %then
3457720   +           %let emloopmode= LOOP;
3457721   +       %else
3457722   +           %let emloopmode= POSTLOOP;
3457723   +   %end;
3457724   +   %else
3457725   +   %if "&EM_PROPERTY_MODE" = "STRATIFY" or "&EM_PROPERTY_MODE" = "CROSSVALIDATION"  %then %do;
3457726   +       %if "&emloopnumber"="1" and "&emgroupvar" eq "" %then %do;
3457727   +           %let emloopmode = ;
3457728   +           %let emexceptionstring = exception.server.METADATA.USE1GROUPVAR;
3457729   +           %goto doendmain;
3457730   +       %end;
3457732   +       %gp_group(numgroupvar=&emnumgroupvar, groupvar=&emgroupvar);
3457733   +   %end;
3457734   +   %else
3457735   +   %if &EM_PROPERTY_MODE = BOOSTING %then %do;
3457736   +       %if "&emboostvar" eq "" %then %do;
3457737   +           %let emloopmode = ;
3457738   +           %let emexceptionstring = exception.server.METADATA.USE1BOOSTVAR;
3457739   +           %goto doendmain;
3457740   +       %end;
3457742   +       %if  &emLoopNumber <= &EM_PROPERTY_INDEXCOUNT %then %do;
3457743   +           %let emloopmode= LOOP;
3457744   +           %gp_boost(targetname=&emboostvar);
3457746   +       %end;
3457747   +       %else
3457748   +           %let emloopmode= POSTLOOP;
3457749   +   %end;
3457750   +   %else
3457751   +   %if &EM_PROPERTY_MODE = BAGGING %then %do;
3457752   +       %if "&embagvar" eq "" %then %do;
3457753   +           %let emloopmode = ;
3457754   +           %let emexceptionstring = exception.server.METADATA.USE1BAGVAR;
3457755   +           %goto doendmain;
3457756   +       %end;
3457758   +        %if  &emLoopNumber <= &EM_PROPERTY_INDEXCOUNT %then %do;
3457759   +           %let emloopmode= LOOP;
3457760   +           %gp_bag(targetname=&embagvar);
3457761   +       %end;
3457762   +       %else
3457763   +           %let emloopmode= POSTLOOP;
3457764   +   %end;
3457767   +   %if &emloopmode eq "" %then %do;
3457768   +       %let lib    = %scan(&em_data_eminfo, 1, .);
3457769   +       %let member = %scan(&em_data_eminfo, 2, .);
3457770   +       proc datasets lib=&lib nolist;
3457771   +          delete &member;
3457772   +       run;
3457773   +   %end;
3457775   +   %doendmain:
3457777   +   %if %index(&EM_DEBUG, _ALL_) %then %do;
3457778   +       %put NEW LOOP MODE: &emloopmode;
3457779   +   %end;
3457781   +   %if "&emloopmode" eq "POSTLOOP" %then %do;
3457782   +       filename temp catalog 'sashelp.emutil.gp_postloop.source';
3457783   +       %include temp;
3457784   +       filename temp;
3457786   +       %postloop;
3457787   +   %end;
3457789   +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(GETVARIABLES):   data _null_;
MPRINT(GETVARIABLES):   retain numgoup 0;
MPRINT(GETVARIABLES):   set EMWS1.Grp3_VariableSet end=eof;
MPRINT(GETVARIABLES):   where (grouprole= 'GROUP' or (role = 'SEGMENT' and grouprole = 'DEFAULT'));
MPRINT(GETVARIABLES):   call symput('emgroupvar', strip(symget('emgroupvar'))!!' '!!strip(NAME));
MPRINT(GETVARIABLES):   numgroup + 1;
MPRINT(GETVARIABLES):   if eof then call symput('emnumgroupvar', strip(put(numgroup, best.)));
MPRINT(GETVARIABLES):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP3_VARIABLESET.
      WHERE (grouprole='GROUP') or ((role='SEGMENT') and (grouprole='DEFAULT'));
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAIN):  ;
MPRINT(GP_GROUP):  ;
MPRINT(GP_GROUP):  ;
MPRINT(GP_GROUP):  ;
MPRINT(GP_GROUP):   filename gpDelta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Grp3\CDELTA_TRAIN.sas";
MPRINT(GP_GROUP):   data _null_;
MPRINT(GP_GROUP):   set EMWS1.Grp3_GROUPINFO;
MPRINT(GP_GROUP):   file gpdelta;
MPRINT(GP_GROUP):   if _N_ = 11 then do;
MPRINT(GP_GROUP):   put "if upcase(NAME)= 'CV_VAR' then delete;";
MPRINT(GP_GROUP):   end;
MPRINT(GP_GROUP):   run;
 
NOTE: The file GPDELTA is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Grp3\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=02 June 2018 17:05:16 o'clock,
      Create Time=02 June 2018 16:26:32 o'clock
 
NOTE: 0 records were written to the file GPDELTA.
NOTE: There were 10 observations read from the data set EMWS1.GRP3_GROUPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(GP_GROUP):   filename gpdelta;
NOTE: Fileref GPDELTA has been deassigned.
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   filename temp catalog 'sashelp.emutil.gp_postloop.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.GP_POSTLOOP.SOURCE.
3457791   +%macro postloop;
3457792   +   %let deleteString =;
3457793   +
3457794   +   %em_getname(key=boostweight, type=DATA);
3457795   +   %em_getname(key=boostscore,  type=DATA);
3457796   +
3457797   +   %if %sysfunc(exist(&em_user_boostweight)) %then %let deleteString = &deleteString &em_nodeid._boostweight;
3457798   +   %if %sysfunc(exist(&em_user_boostscore))  %then %let deleteString = &deleteString &em_nodeid._boostscore;
3457799   +   %if "&deleteString" ne "" %then %do;
3457800   +       proc datasets lib=&em_lib nolist;
3457801   +          delete &deleteString;
3457802   +       run;
3457803   +   %end;
3457804   +
3457805   +   %em_register(key=EMLOOPINFO,    type=DATA);
3457806   +   %em_getname(key=EMLOOPINFO,    type=DATA);
3457807   +    proc print data=&em_user_emloopinfo noobs label;
3457808   +       title9 'Group Summary';
3457809   +    run;
3457810   +    title9;
3457811   +
3457812   +   %em_report(key=EMLOOPINFO, VIEWTYPE=DATA, AUTODISPLAY=Y, DESCRIPTION=miningresult, BLOCK=Gp);
3457813   +
3457814   +%mend postloop;
3457815   +
3457816   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(TRAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(POSTLOOP):  ;
MPRINT(POSTLOOP):  ;
MPRINT(EM_REGISTER):   data WORK.EM_USER_KEY;
MPRINT(EM_REGISTER):   length KEY $32 TYPE $10 FILE $200 FOLDER $32 EXTENSION $8 AUTODELETE $1 property $1 action $8 cas $1;
MPRINT(EM_REGISTER):   key = upcase("EMLOOPINFO");
MPRINT(EM_REGISTER):   type = upcase("DATA");
MPRINT(EM_REGISTER):   file = "Grp3_EMLOOPINFO";
MPRINT(EM_REGISTER):   folder = "";
MPRINT(EM_REGISTER):   extension = "";
MPRINT(EM_REGISTER):   AUTODELETE = "Y";
MPRINT(EM_REGISTER):   property = "N";
MPRINT(EM_REGISTER):   action = "";
MPRINT(EM_REGISTER):   cas = "N";
MPRINT(EM_REGISTER):   run;
 
NOTE: The data set WORK.EM_USER_KEY has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTLOOP):  ;
MPRINT(POSTLOOP):  ;
MPRINT(POSTLOOP):   proc print data=EMWS1.Grp3_EMLOOPINFO noobs label;
MPRINT(POSTLOOP):   title9 'Group Summary';
MPRINT(POSTLOOP):   run;
NOTE: There were 10 observations read from the data set EMWS1.GRP3_EMLOOPINFO.
NOTE: The PROCEDURE PRINT printed page 2301.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTLOOP):   title9;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   retain id 0;
MPRINT(EM_REPORT):   id + 1;
MPRINT(EM_REPORT):   length VIEW 8 NAME $32 VALUE $400;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "EMLOOPINFO";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "miningresult";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Gp";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.23351868113201;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   run;
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
MPRINT(POSTLOOP):  ;
MPRINT(TRAIN):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: Grp3;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3457817    *------------------------------------------------------------*;
3457818    * End TRAIN: Grp3;
3457819    *------------------------------------------------------------*;
3457820
 
3457821    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3457822    * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
3457823    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3457824    ;
MPRINT(EM_DIAGRAM):   ;
3457825    ;
MPRINT(EM_DIAGRAM):   ;
3457826    ;
MPRINT(EM_DIAGRAM):   ;
3457827    ;
MPRINT(EM_DIAGRAM):   ;
3457828    quit;
MPRINT(EM_DIAGRAM):   quit;
3457829    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3457830    * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
3457831    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3457832    /*; *"; *'; */
3457833    ;
MPRINT(EM_DIAGRAM):   ;
3457834    run;
MPRINT(EM_DIAGRAM):   run;
3457835    quit;
MPRINT(EM_DIAGRAM):   quit;
3457836    /* Reset EM Options */
3457837    options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
3457838    options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
3457839    goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
3457840    proc sort data=WORK.EM_USER_REPORT;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.EM_USER_REPORT;
3457841    by ID VIEW;
MPRINT(EM_DIAGRAM):   by ID VIEW;
3457842    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
