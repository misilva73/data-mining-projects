*------------------------------------------------------------*
User:                misil
Date:                20 April 2018
Time:                23:14:48 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20 April 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "23:14:42 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                20 April 2018
Time:                23:14:42 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O10ZPIFM "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Impt\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O10ZPIFM new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Impt\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20 April 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "23:14:42 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Impt\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Impt\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Impt\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Impt\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20 April 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "23:14:42 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Impt\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Impt\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Impt\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Impt\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
22452      proc freq data=EMWS1.Impt_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Impt_VariableSet noprint;
22453      table ROLE*LEVEL/out=WORK.ImptMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.ImptMETA;
22454      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS1.IMPT_VARIABLESET.
NOTE: The data set WORK.IMPTMETA has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
 
 
22455      proc print data=WORK.ImptMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.ImptMETA label noobs;
22456      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
22457      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
22458      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
22459      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
22460      run;
 
NOTE: There were 6 observations read from the data set WORK.IMPTMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22461      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Preparing metadata for training;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M0Q0GGDR;
MPRINT(EM_DIAGRAM):   set WORK.M0Q0GGDR;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (ROLE ne 'REJECTED' and USE = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role = 'INPUT' and METHOD='DEFAULT' then do;
MPRINT(EM_DIAGRAM):   if level ne 'INTERVAL' then METHOD = "NONE";
MPRINT(EM_DIAGRAM):   else METHOD = "TREE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if role = 'TARGET' and METHOD='DEFAULT' then do;
MPRINT(EM_DIAGRAM):   if level ne 'INTERVAL' then METHOD = "NONE";
MPRINT(EM_DIAGRAM):   else METHOD = "NONE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
22479      data WORK.Impt_TREEINPUTS;
MPRINT(EM_DIAGRAM):    data WORK.Impt_TREEINPUTS;
22480      set WORK.M3TYNYK7;
MPRINT(EM_DIAGRAM):   set WORK.M3TYNYK7;
22481      if ROLE ne 'FREQ' then do;
MPRINT(EM_DIAGRAM):   if ROLE ne 'FREQ' then do;
22482      if ((ROLE in('TARGET','REJECTED') and useTree='D') or useTree='N') then delete;
MPRINT(EM_DIAGRAM):   if ((ROLE in('TARGET','REJECTED') and useTree='D') or useTree='N') then delete;
22483      ROLE = 'INPUT';
MPRINT(EM_DIAGRAM):   ROLE = 'INPUT';
22484      end;
MPRINT(EM_DIAGRAM):   end;
22485      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK.M3TYNYK7.
NOTE: The data set WORK.IMPT_TREEINPUTS has 25 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22486      data WORK.M3TYNYK7;
MPRINT(EM_DIAGRAM):   data WORK.M3TYNYK7;
22487      set WORK.M3TYNYK7;
MPRINT(EM_DIAGRAM):   set WORK.M3TYNYK7;
22488      if METHOD in("TREE", "TREESURR") then role = 'TARGET';
MPRINT(EM_DIAGRAM):   if METHOD in("TREE", "TREESURR") then role = 'TARGET';
22489      else if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   else if (role = 'REJECTED') then role = 'INPUT';
22490      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK.M3TYNYK7.
NOTE: The data set WORK.M3TYNYK7 has 26 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22491      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
22492      * Impt: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Impt: DMDBClass Macro ;
22493      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22494      %macro DMDBClass;
22495          AcceptedCmp1(ASC) AcceptedCmp2(ASC) AcceptedCmp3(ASC) AcceptedCmp4(ASC)
22496         AcceptedCmp5(ASC) Complain(ASC) DepVar(DESC) Education(ASC) Marital_Status(ASC)
22497      %mend DMDBClass;
22498      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22499      * Impt: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Impt: DMDBVar Macro ;
22500      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22501      %macro DMDBVar;
22502          Dt_Customer Income Kidhome MntBrandA__Material MntCard_Games MntMagazines
22503         MntMiniatures MntPainting_Material MntScenario NumCatalogPurchases
22504         NumDealsPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth Recency
22505         Teenhome Year_Birth
22506      %mend DMDBVar;
22507      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22508      * Impt: Create DMDB;
MPRINT(EM_DIAGRAM):   * Impt: Create DMDB;
22509      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22510      proc dmdb batch data=EMWS1.Filter_TRAIN
22511      dmdbcat=WORK.Impt_DMDB
22512      classout=WORK.Impt_DMDBCLASSOUT
22513      varout=WORK.IMPUTE_3RHH0TG_DMDBVAROUT
22514      maxlevel = 513
22515      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.Filter_TRAIN dmdbcat=WORK.Impt_DMDB classout=WORK.Impt_DMDBCLASSOUT varout=WORK.IMPUTE_3RHH0TG_DMDBVAROUT maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
22516      class %DMDBClass;
MPRINT(DMDBCLASS):   AcceptedCmp1(ASC) AcceptedCmp2(ASC) AcceptedCmp3(ASC) AcceptedCmp4(ASC) AcceptedCmp5(ASC) Complain(ASC) DepVar(DESC) Education(ASC) Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
22517      var %DMDBVar;
MPRINT(DMDBVAR):   Dt_Customer Income Kidhome MntBrandA__Material MntCard_Games MntMagazines MntMiniatures MntPainting_Material MntScenario NumCatalogPurchases NumDealsPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth Recency Teenhome
Year_Birth
MPRINT(EM_DIAGRAM):  ;
22518      target
22519      DepVar
22520      Dt_Customer
22521      Income
22522      Kidhome
22523      MntBrandA__Material
22524      MntCard_Games
22525      MntMagazines
22526      MntMiniatures
22527      MntPainting_Material
22528      MntScenario
22529      NumCatalogPurchases
22530      NumDealsPurchases
22531      NumStorePurchases
22532      NumWebPurchases
22533      NumWebVisitsMonth
22534      Recency
22535      Teenhome
22536      Year_Birth
22537      ;
MPRINT(EM_DIAGRAM):   target DepVar Dt_Customer Income Kidhome MntBrandA__Material MntCard_Games MntMagazines MntMiniatures MntPainting_Material MntScenario NumCatalogPurchases NumDealsPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth Recency
Teenhome Year_Birth ;
22538      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2438   Memory used = 511K.
NOTE: There were 2500 observations read from the data set EMWS1.FIMPORT_DATA.
NOTE: View EMWS1.FILTER_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2500 observations read from the data set EMWS1.FIMPORT_TRAIN.
NOTE: There were 2438 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: The data set WORK.IMPT_DMDBCLASSOUT has 24 observations and 9 variables.
NOTE: The data set WORK.IMPUTE_3RHH0TG_DMDBVAROUT has 17 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
22539      quit;
22540      *--- end code ---*;
 
22541      proc sort data=WORK.Impt_DMDBCLASSOUT;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.Impt_DMDBCLASSOUT;
22542      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22543      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 24 observations read from the data set WORK.IMPT_DMDBCLASSOUT.
NOTE: The data set WORK.IMPT_DMDBCLASSOUT has 24 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22544      data WORK.Impt_DMDBCLASSOUT;
MPRINT(EM_DIAGRAM):   data WORK.Impt_DMDBCLASSOUT;
22545      retain missFlag;
MPRINT(EM_DIAGRAM):   retain missFlag;
22546      set WORK.Impt_DMDBCLASSOUT;
MPRINT(EM_DIAGRAM):   set WORK.Impt_DMDBCLASSOUT;
22547      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22548      output;
MPRINT(EM_DIAGRAM):   output;
22549      if first.name then missflag = 0;
MPRINT(EM_DIAGRAM):   if first.name then missflag = 0;
22550      if (TYPE='C' and CRAW='') or (TYPE='N' and NRAW=.) then missflag = 1;
MPRINT(EM_DIAGRAM):   if (TYPE='C' and CRAW='') or (TYPE='N' and NRAW=.) then missflag = 1;
22551      if last.name and ^missFlag then do;
MPRINT(EM_DIAGRAM):   if last.name and ^missFlag then do;
22552      if type = 'C' then do;
MPRINT(EM_DIAGRAM):   if type = 'C' then do;
22553      LEVEL= '';
MPRINT(EM_DIAGRAM):   LEVEL= '';
22554      CRAW = '';
MPRINT(EM_DIAGRAM):   CRAW = '';
22555      NRAW = .;
MPRINT(EM_DIAGRAM):   NRAW = .;
22556      end;
MPRINT(EM_DIAGRAM):   end;
22557      else do;
MPRINT(EM_DIAGRAM):   else do;
22558      LEVEL='.';
MPRINT(EM_DIAGRAM):   LEVEL='.';
22559      CRAW = '.';
MPRINT(EM_DIAGRAM):   CRAW = '.';
22560      NRAW= .;
MPRINT(EM_DIAGRAM):   NRAW= .;
22561      end;
MPRINT(EM_DIAGRAM):   end;
22562      FREQUENCY = 0;
MPRINT(EM_DIAGRAM):   FREQUENCY = 0;
22563      FREQPERCENT = 0;
MPRINT(EM_DIAGRAM):   FREQPERCENT = 0;
22564      NMISSPERCENT = 0;
MPRINT(EM_DIAGRAM):   NMISSPERCENT = 0;
22565      output;
MPRINT(EM_DIAGRAM):   output;
22566      end;
MPRINT(EM_DIAGRAM):   end;
22567      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 24 observations read from the data set WORK.IMPT_DMDBCLASSOUT.
NOTE: The data set WORK.IMPT_DMDBCLASSOUT has 33 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22568      data WORK.Impt_MISS(KEEP=NAME NMISS PERCENTMISS);
MPRINT(EM_DIAGRAM):    data WORK.Impt_MISS(KEEP=NAME NMISS PERCENTMISS);
22569      length NAME $32;
MPRINT(EM_DIAGRAM):   length NAME $32;
22570      set
22571      WORK.Impt_DMDBCLASSOUT(rename=(freqpercent=PERCENTMISS frequency=NMISS) where=((TYPE='C' and CRAW='') or (TYPE='N' and NRAW=.)))
22572      WORK.IMPUTE_3RHH0TG_DMDBVAROUT
22573      ;
MPRINT(EM_DIAGRAM):   set WORK.Impt_DMDBCLASSOUT(rename=(freqpercent=PERCENTMISS frequency=NMISS) where=((TYPE='C' and CRAW='') or (TYPE='N' and NRAW=.))) WORK.IMPUTE_3RHH0TG_DMDBVAROUT ;
22574      if (NMISS ne . and N ne .) then PERCENTMISS = (NMISS/(NMISS+N))*100;
MPRINT(EM_DIAGRAM):   if (NMISS ne . and N ne .) then PERCENTMISS = (NMISS/(NMISS+N))*100;
22575      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.IMPT_DMDBCLASSOUT.
      WHERE ((TYPE='C') and (CRAW=' ')) or ((TYPE='N') and (NRAW=.));
NOTE: There were 17 observations read from the data set WORK.IMPUTE_3RHH0TG_DMDBVAROUT.
NOTE: The data set WORK.IMPT_MISS has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22576      proc sort data=WORK.M0Q0GGDR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M0Q0GGDR NOTHREADS;
22577      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22578      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK.M0Q0GGDR.
NOTE: The data set WORK.M0Q0GGDR has 26 observations and 23 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22579      proc sort data=WORK.Impt_MISS NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Impt_MISS NOTHREADS;
22580      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22581      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK.IMPT_MISS.
NOTE: The data set WORK.IMPT_MISS has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22582      data WORK.M0Q0GGDR;
MPRINT(EM_DIAGRAM):   data WORK.M0Q0GGDR;
22583      merge WORK.M0Q0GGDR WORK.Impt_MISS(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.M0Q0GGDR WORK.Impt_MISS(in=_b);
22584      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22585      if _b then output;
MPRINT(EM_DIAGRAM):   if _b then output;
22586      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK.M0Q0GGDR.
NOTE: There were 26 observations read from the data set WORK.IMPT_MISS.
NOTE: The data set WORK.M0Q0GGDR has 26 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22587      data WORK.M0Q0GGDR;
MPRINT(EM_DIAGRAM):   data WORK.M0Q0GGDR;
22588      set WORK.M0Q0GGDR;
MPRINT(EM_DIAGRAM):   set WORK.M0Q0GGDR;
22589      if 0<PERCENTMISS<50 and method ne 'NONE' then IMPUTE = 1;
MPRINT(EM_DIAGRAM):   if 0<PERCENTMISS<50 and method ne 'NONE' then IMPUTE = 1;
22590      else IMPUTE = 0;
MPRINT(EM_DIAGRAM):   else IMPUTE = 0;
22591      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK.M0Q0GGDR.
NOTE: The data set WORK.M0Q0GGDR has 26 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22592      proc dmdb data=WORK.M0Q0GGDR outtable=WORK.NEWNAMES nameserver;
MPRINT(EM_DIAGRAM):    proc dmdb data=WORK.M0Q0GGDR outtable=WORK.NEWNAMES nameserver;
22593      names NAME;
MPRINT(EM_DIAGRAM):   names NAME;
22594      prefix M_ IMP_;
MPRINT(EM_DIAGRAM):   prefix M_ IMP_;
22595      where IMPUTE=1;
MPRINT(EM_DIAGRAM):   where IMPUTE=1;
22596      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.M0Q0GGDR.
      WHERE IMPUTE=1;
NOTE: The data set WORK.NEWNAMES has 3 observations and 3 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
22597      data WORK.M0Q0GGDR;
MPRINT(EM_DIAGRAM):   data WORK.M0Q0GGDR;
22598      merge WORK.M0Q0GGDR WORK.NEWNAMES;
MPRINT(EM_DIAGRAM):   merge WORK.M0Q0GGDR WORK.NEWNAMES;
22599      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22600      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK.M0Q0GGDR.
NOTE: There were 3 observations read from the data set WORK.NEWNAMES.
NOTE: The data set WORK.M0Q0GGDR has 26 observations and 28 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22601      proc dmdb data=WORK.M0Q0GGDR outtable=WORK.NEWNAMES nameserver;
MPRINT(EM_DIAGRAM):   proc dmdb data=WORK.M0Q0GGDR outtable=WORK.NEWNAMES nameserver;
22602      names NAME;
MPRINT(EM_DIAGRAM):   names NAME;
22603      prefix M_;
MPRINT(EM_DIAGRAM):   prefix M_;
22604      where IMPUTE=0;
MPRINT(EM_DIAGRAM):   where IMPUTE=0;
22605      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK.M0Q0GGDR.
      WHERE IMPUTE=0;
NOTE: The data set WORK.NEWNAMES has 23 observations and 2 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22606      data WORK.M0Q0GGDR;
MPRINT(EM_DIAGRAM):   data WORK.M0Q0GGDR;
22607      merge WORK.M0Q0GGDR WORK.NEWNAMES;
MPRINT(EM_DIAGRAM):   merge WORK.M0Q0GGDR WORK.NEWNAMES;
22608      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22609      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK.M0Q0GGDR.
NOTE: There were 23 observations read from the data set WORK.NEWNAMES.
NOTE: The data set WORK.M0Q0GGDR has 26 observations and 28 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22610      data WORK.Impt;
MPRINT(EM_DIAGRAM):    data WORK.Impt;
22611      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.IMPT has 1 observations and 0 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Preparing metadata for Tree Imputation;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M2GDP7XY;
MPRINT(EM_DIAGRAM):   retain found 0;
MPRINT(EM_DIAGRAM):   set WORK.M2GDP7XY end=eof;
MPRINT(EM_DIAGRAM):   length USE $1;
MPRINT(EM_DIAGRAM):   if NAME = 'Income' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   found = 1;
MPRINT(EM_DIAGRAM):   USE='Y';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   if eof and ^found then do;
MPRINT(EM_DIAGRAM):   NAME = 'Income';
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   LABEL = 'Income';
MPRINT(EM_DIAGRAM):   TYPE = 'N';
MPRINT(EM_DIAGRAM):   LENGTH = length;
MPRINT(EM_DIAGRAM):   FORMAT = 'BEST.';
MPRINT(EM_DIAGRAM):   ORDER = '';
MPRINT(EM_DIAGRAM):   LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   USE='Y';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Create Decision Tree using Target Income;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Create decision matrix;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Tree Variables Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Tree Targets Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data WORK.EM_Impt / view=WORK.EM_Impt;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_TRAIN(keep
MPRINT(EM_DIAGRAM):  =AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4 AcceptedCmp5 Complain Dt_Customer Education Kidhome Marital_Status MntBrandA__Material MntCard_Games MntMagazines MntMiniatures MntPainting_Material MntScenario NumCatalogPurchases
NumDealsPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth Recency Teenhome Year_Birth Income);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Binary and Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Run ARBOR procedure;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    proc arbor data=WORK.EM_Impt Leafsize=5 Mincatsize = 5 Maxbranch=2 Maxdepth=6 alpha = 0.02 Padjust= CHAIDBEFORE DEPTH MAXRULES=5 Missing=USEINSEARCH ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   input
MPRINT(INTINPUTS):   Dt_Customer Kidhome MntBrandA__Material MntCard_Games MntMagazines MntMiniatures MntPainting_Material MntScenario NumCatalogPurchases NumDealsPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):   / level = interval;
MPRINT(EM_DIAGRAM):   input
MPRINT(NOMINPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4 AcceptedCmp5 Complain Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal;
MPRINT(EM_DIAGRAM):   target Income / level=INTERVAL Criterion=PROBF ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   Performance DISK ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   MAKEMACRO NLEAVES=nleaves;
MPRINT(EM_DIAGRAM):   save MODEL=WORK.OUTTREE_TREE_0FG56GI SEQUENCE=WORK.OUTSEQ_TREE_0FG56GI IMPORTANCE=WORK.OUTIMPORT_TREE_0FG56GI NODESTAT=WORK.OUTNODES_TREE_0FG56GI SUMMARY=WORK.OUTSUMMARY_TREE_0FG56GI STATSBYNODE=WORK.OUTSTATS_TREE_0FG56GI
Pathlistnonmissing = WORK.OUTPATH_TREE_0FG56GI Rules = WORK.OUTRULES_TREE_0FG56GI ;
MPRINT(EM_DIAGRAM):   code metabase=WORK.TREE_0FG56GI.SCORECODE.SOURCE group=Impt NOLEAFID;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   code metabase=WORK.TREE_0FG56GI.RESIDUALSCORECODE.SOURCE group=Impt residual NOLEAFID;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   score data=WORK.EM_Impt out=_NULL_ outfit=WORK.OUTFIT_TREE_0FG56GI role=TRAIN ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    data WORK.OUTIMPORT_TREE_0FG56GI;
MPRINT(EM_DIAGRAM):   set WORK.OUTIMPORT_TREE_0FG56GI;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of Splitting Rules" IMPORTANCE = "Importance" NSURROGATES = "Number of Surrogate Rules" ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename x "C:\Users\misil\AppData\Local\Temp\SAS Temporary Files\_TD4328_DESKTOP-61HCQ9U_\Prc2\DESCRIBE.SOURCE" encoding='utf-8' NOBOM;
MPRINT(EM_DIAGRAM):    data temp;
MPRINT(EM_DIAGRAM):   length varname $20;
MPRINT(EM_DIAGRAM):   retain varname;
MPRINT(EM_DIAGRAM):   set WORK.OUTPATH_TREE_0FG56GI;
MPRINT(EM_DIAGRAM):   if ^missing(variable) then varname=variable;
MPRINT(EM_DIAGRAM):   else if ^missing(var_name) then varname=var_name;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.OUTNODES_TREE_0FG56GI out=outnodes;
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data temp;
MPRINT(EM_DIAGRAM):   merge temp(in=_a) outnodes(keep= node N P_Income );
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   if _a;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
MPRINT(EM_DIAGRAM):   by node descending varname descending numeric_value;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file x;
MPRINT(EM_DIAGRAM):   set temp;
MPRINT(EM_DIAGRAM):   by node descending varname;
MPRINT(EM_DIAGRAM):   retain origvar oldnode string;
MPRINT(EM_DIAGRAM):   length origvar $32 oldnode 8 string $200;
MPRINT(EM_DIAGRAM):   if _n_ = 1 then do;
MPRINT(EM_DIAGRAM):   origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode = node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if first.node then do;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put " Node = " node;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if first.varname then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals Missing";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals Missing";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals All Values";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals All Values";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   string = strip(string)||", "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if last.varname then do;
MPRINT(EM_DIAGRAM):   if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.varname then do;
MPRINT(EM_DIAGRAM):   string = strip(string) || " or MISSING";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if last.node then do;
MPRINT(EM_DIAGRAM):   put "then ";
MPRINT(EM_DIAGRAM):   put " Tree Node Identifier   = " node;
MPRINT(EM_DIAGRAM):   put " Number of Observations = " N;
MPRINT(EM_DIAGRAM):   put " Predicted: Income  = " P_Income;
MPRINT(EM_DIAGRAM):   put " ";
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename x;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Preparing metadata for Tree Imputation;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M2Y6B2ZS;
MPRINT(EM_DIAGRAM):   retain found 0;
MPRINT(EM_DIAGRAM):   set WORK.M2Y6B2ZS end=eof;
MPRINT(EM_DIAGRAM):   length USE $1;
MPRINT(EM_DIAGRAM):   if NAME = 'MntBrandA__Material' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   found = 1;
MPRINT(EM_DIAGRAM):   USE='Y';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   if eof and ^found then do;
MPRINT(EM_DIAGRAM):   NAME = 'MntBrandA__Material';
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   LABEL = 'MntBrandA _Material';
MPRINT(EM_DIAGRAM):   TYPE = 'N';
MPRINT(EM_DIAGRAM):   LENGTH = length;
MPRINT(EM_DIAGRAM):   FORMAT = '';
MPRINT(EM_DIAGRAM):   ORDER = '';
MPRINT(EM_DIAGRAM):   LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   USE='Y';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Create Decision Tree using Target MntBrandA__Material;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Create decision matrix;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Tree Variables Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Tree Targets Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data WORK.EM_Impt / view=WORK.EM_Impt;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_TRAIN(keep
MPRINT(EM_DIAGRAM):  =AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4 AcceptedCmp5 Complain Dt_Customer Education Income Kidhome Marital_Status MntCard_Games MntMagazines MntMiniatures MntPainting_Material MntScenario NumCatalogPurchases
NumDealsPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth Recency Teenhome Year_Birth MntBrandA__Material);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Binary and Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Run ARBOR procedure;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    proc arbor data=WORK.EM_Impt Leafsize=5 Mincatsize = 5 Maxbranch=2 Maxdepth=6 alpha = 0.02 Padjust= CHAIDBEFORE DEPTH MAXRULES=5 Missing=USEINSEARCH ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   input
MPRINT(INTINPUTS):   Dt_Customer Income Kidhome MntCard_Games MntMagazines MntMiniatures MntPainting_Material MntScenario NumCatalogPurchases NumDealsPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):   / level = interval;
MPRINT(EM_DIAGRAM):   input
MPRINT(NOMINPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4 AcceptedCmp5 Complain Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal;
MPRINT(EM_DIAGRAM):   target MntBrandA__Material / level=INTERVAL Criterion=PROBF ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   Performance DISK ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   MAKEMACRO NLEAVES=nleaves;
MPRINT(EM_DIAGRAM):   save MODEL=WORK.OUTTREE_TREE_1FKC_QQ SEQUENCE=WORK.OUTSEQ_TREE_1FKC_QQ IMPORTANCE=WORK.OUTIMPORT_TREE_1FKC_QQ NODESTAT=WORK.OUTNODES_TREE_1FKC_QQ SUMMARY=WORK.OUTSUMMARY_TREE_1FKC_QQ STATSBYNODE=WORK.OUTSTATS_TREE_1FKC_QQ
Pathlistnonmissing = WORK.OUTPATH_TREE_1FKC_QQ Rules = WORK.OUTRULES_TREE_1FKC_QQ ;
MPRINT(EM_DIAGRAM):   code metabase=WORK.TREE_1FKC_QQ.SCORECODE.SOURCE group=Impt NOLEAFID;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   code metabase=WORK.TREE_1FKC_QQ.RESIDUALSCORECODE.SOURCE group=Impt residual NOLEAFID;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   score data=WORK.EM_Impt out=_NULL_ outfit=WORK.OUTFIT_TREE_1FKC_QQ role=TRAIN ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    data WORK.OUTIMPORT_TREE_1FKC_QQ;
MPRINT(EM_DIAGRAM):   set WORK.OUTIMPORT_TREE_1FKC_QQ;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of Splitting Rules" IMPORTANCE = "Importance" NSURROGATES = "Number of Surrogate Rules" ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename x "C:\Users\misil\AppData\Local\Temp\SAS Temporary Files\_TD4328_DESKTOP-61HCQ9U_\Prc2\DESCRIBE.SOURCE" encoding='utf-8' NOBOM;
MPRINT(EM_DIAGRAM):    data temp;
MPRINT(EM_DIAGRAM):   length varname $20;
MPRINT(EM_DIAGRAM):   retain varname;
MPRINT(EM_DIAGRAM):   set WORK.OUTPATH_TREE_1FKC_QQ;
MPRINT(EM_DIAGRAM):   if ^missing(variable) then varname=variable;
MPRINT(EM_DIAGRAM):   else if ^missing(var_name) then varname=var_name;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.OUTNODES_TREE_1FKC_QQ out=outnodes;
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data temp;
MPRINT(EM_DIAGRAM):   merge temp(in=_a) outnodes(keep= node N P_MntBrandA__Material );
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   if _a;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
MPRINT(EM_DIAGRAM):   by node descending varname descending numeric_value;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file x;
MPRINT(EM_DIAGRAM):   set temp;
MPRINT(EM_DIAGRAM):   by node descending varname;
MPRINT(EM_DIAGRAM):   retain origvar oldnode string;
MPRINT(EM_DIAGRAM):   length origvar $32 oldnode 8 string $200;
MPRINT(EM_DIAGRAM):   if _n_ = 1 then do;
MPRINT(EM_DIAGRAM):   origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode = node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if first.node then do;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put " Node = " node;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if first.varname then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals Missing";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals Missing";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals All Values";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals All Values";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   string = strip(string)||", "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if last.varname then do;
MPRINT(EM_DIAGRAM):   if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.varname then do;
MPRINT(EM_DIAGRAM):   string = strip(string) || " or MISSING";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if last.node then do;
MPRINT(EM_DIAGRAM):   put "then ";
MPRINT(EM_DIAGRAM):   put " Tree Node Identifier   = " node;
MPRINT(EM_DIAGRAM):   put " Number of Observations = " N;
MPRINT(EM_DIAGRAM):   put " Predicted: MntBrandA__Material  = " P_MntBrandA__Material;
MPRINT(EM_DIAGRAM):   put " ";
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename x;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Preparing metadata for Tree Imputation;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M2BOF3U6;
MPRINT(EM_DIAGRAM):   retain found 0;
MPRINT(EM_DIAGRAM):   set WORK.M2BOF3U6 end=eof;
MPRINT(EM_DIAGRAM):   length USE $1;
MPRINT(EM_DIAGRAM):   if NAME = 'MntScenario' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   found = 1;
MPRINT(EM_DIAGRAM):   USE='Y';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   if eof and ^found then do;
MPRINT(EM_DIAGRAM):   NAME = 'MntScenario';
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   LABEL = 'MntScenario';
MPRINT(EM_DIAGRAM):   TYPE = 'N';
MPRINT(EM_DIAGRAM):   LENGTH = length;
MPRINT(EM_DIAGRAM):   FORMAT = 'BEST.';
MPRINT(EM_DIAGRAM):   ORDER = '';
MPRINT(EM_DIAGRAM):   LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   USE='Y';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Create Decision Tree using Target MntScenario;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Create decision matrix;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Tree Variables Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Tree Targets Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data WORK.EM_Impt / view=WORK.EM_Impt;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_TRAIN(keep
MPRINT(EM_DIAGRAM):  =AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4 AcceptedCmp5 Complain Dt_Customer Education Income Kidhome Marital_Status MntBrandA__Material MntCard_Games MntMagazines MntMiniatures MntPainting_Material NumCatalogPurchases
NumDealsPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth Recency Teenhome Year_Birth MntScenario);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Binary and Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Run ARBOR procedure;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    proc arbor data=WORK.EM_Impt Leafsize=5 Mincatsize = 5 Maxbranch=2 Maxdepth=6 alpha = 0.02 Padjust= CHAIDBEFORE DEPTH MAXRULES=5 Missing=USEINSEARCH ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   input
MPRINT(INTINPUTS):   Dt_Customer Income Kidhome MntBrandA__Material MntCard_Games MntMagazines MntMiniatures MntPainting_Material NumCatalogPurchases NumDealsPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):   / level = interval;
MPRINT(EM_DIAGRAM):   input
MPRINT(NOMINPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4 AcceptedCmp5 Complain Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal;
MPRINT(EM_DIAGRAM):   target MntScenario / level=INTERVAL Criterion=PROBF ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   Performance DISK ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   MAKEMACRO NLEAVES=nleaves;
MPRINT(EM_DIAGRAM):   save MODEL=WORK.OUTTREE_TREE_0L1HN3U SEQUENCE=WORK.OUTSEQ_TREE_0L1HN3U IMPORTANCE=WORK.OUTIMPORT_TREE_0L1HN3U NODESTAT=WORK.OUTNODES_TREE_0L1HN3U SUMMARY=WORK.OUTSUMMARY_TREE_0L1HN3U STATSBYNODE=WORK.OUTSTATS_TREE_0L1HN3U
Pathlistnonmissing = WORK.OUTPATH_TREE_0L1HN3U Rules = WORK.OUTRULES_TREE_0L1HN3U ;
MPRINT(EM_DIAGRAM):   code metabase=WORK.TREE_0L1HN3U.SCORECODE.SOURCE group=Impt NOLEAFID;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   code metabase=WORK.TREE_0L1HN3U.RESIDUALSCORECODE.SOURCE group=Impt residual NOLEAFID;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   score data=WORK.EM_Impt out=_NULL_ outfit=WORK.OUTFIT_TREE_0L1HN3U role=TRAIN ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    data WORK.OUTIMPORT_TREE_0L1HN3U;
MPRINT(EM_DIAGRAM):   set WORK.OUTIMPORT_TREE_0L1HN3U;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of Splitting Rules" IMPORTANCE = "Importance" NSURROGATES = "Number of Surrogate Rules" ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename x "C:\Users\misil\AppData\Local\Temp\SAS Temporary Files\_TD4328_DESKTOP-61HCQ9U_\Prc2\DESCRIBE.SOURCE" encoding='utf-8' NOBOM;
MPRINT(EM_DIAGRAM):    data temp;
MPRINT(EM_DIAGRAM):   length varname $20;
MPRINT(EM_DIAGRAM):   retain varname;
MPRINT(EM_DIAGRAM):   set WORK.OUTPATH_TREE_0L1HN3U;
MPRINT(EM_DIAGRAM):   if ^missing(variable) then varname=variable;
MPRINT(EM_DIAGRAM):   else if ^missing(var_name) then varname=var_name;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.OUTNODES_TREE_0L1HN3U out=outnodes;
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data temp;
MPRINT(EM_DIAGRAM):   merge temp(in=_a) outnodes(keep= node N P_MntScenario );
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   if _a;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
MPRINT(EM_DIAGRAM):   by node descending varname descending numeric_value;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file x;
MPRINT(EM_DIAGRAM):   set temp;
MPRINT(EM_DIAGRAM):   by node descending varname;
MPRINT(EM_DIAGRAM):   retain origvar oldnode string;
MPRINT(EM_DIAGRAM):   length origvar $32 oldnode 8 string $200;
MPRINT(EM_DIAGRAM):   if _n_ = 1 then do;
MPRINT(EM_DIAGRAM):   origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode = node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if first.node then do;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put " Node = " node;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if first.varname then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals Missing";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals Missing";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals All Values";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals All Values";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   string = strip(string)||", "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if last.varname then do;
MPRINT(EM_DIAGRAM):   if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.varname then do;
MPRINT(EM_DIAGRAM):   string = strip(string) || " or MISSING";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if last.node then do;
MPRINT(EM_DIAGRAM):   put "then ";
MPRINT(EM_DIAGRAM):   put " Tree Node Identifier   = " node;
MPRINT(EM_DIAGRAM):   put " Number of Observations = " N;
MPRINT(EM_DIAGRAM):   put " Predicted: MntScenario  = " P_MntScenario;
MPRINT(EM_DIAGRAM):   put " ";
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename x;
NOTE: View EMWS1.FILTER_TRAIN.VIEW used (Total process time):
      real time           3.18 seconds
      cpu time            2.03 seconds
 
NOTE: View EMWS1.FILTER_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
23399      data EMWS1.Impt_META;
MPRINT(EM_DIAGRAM):    data EMWS1.Impt_META;
23400      set WORK.M0Q0GGDR;
MPRINT(EM_DIAGRAM):   set WORK.M0Q0GGDR;
23401      VALUE = .;
MPRINT(EM_DIAGRAM):   VALUE = .;
23402      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK.M0Q0GGDR.
NOTE: The data set EMWS1.IMPT_META has 26 observations and 29 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
23403      proc print data=EMWS1.Impt_META(obs=500) label noobs;
MPRINT(EM_DIAGRAM):    proc print data=EMWS1.Impt_META(obs=500) label noobs;
23404      label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,          NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,         NOQUOTE))" PERCENTMISS = "%sysfunc(sasmsg(sashelp.dmine, rpt_percentmissing_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" LABEL = "Label" PERCENTMISS = "Percent Missing";
23405      var NAME LABEL PERCENTMISS;
MPRINT(EM_DIAGRAM):   var NAME LABEL PERCENTMISS;
23406      where IMP eq '' and PERCENTMISS>50;
MPRINT(EM_DIAGRAM):   where IMP eq '' and PERCENTMISS>50;
23407      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_rejectedsummary_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Rejected Variables Summary";
23408      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_numberobs_title,         NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Number Of Observations";
MPRINT(EM_DIAGRAM):   run;
23409      run;
 
NOTE: No observations were selected from data set EMWS1.IMPT_META.
NOTE: There were 0 observations read from the data set EMWS1.IMPT_META.
      WHERE (IMP=' ') and (PERCENTMISS>50);
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20 April 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "23:14:47 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20 April 2018
Time:                23:14:47 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3K2U31Y "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Impt\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3K2U31Y new;
MPRINT(EM_DIAGRAM):   run;
NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
23511      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
23512      set EMWS1.Impt_META end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Impt_META end=eof;
23513      length string $34;
MPRINT(EM_DIAGRAM):   length string $34;
23514      retain missTotal;
MPRINT(EM_DIAGRAM):   retain missTotal;
23515      file #LN00275;
MPRINT(EM_DIAGRAM):   file #LN00275;
23516      if _n_=1 then misstotal = percentmiss;
MPRINT(EM_DIAGRAM):   if _n_=1 then misstotal = percentmiss;
23517      missTotal = percentmiss+misstotal;
MPRINT(EM_DIAGRAM):   missTotal = percentmiss+misstotal;
23518      if IMP ne '' and METHOD ne 'NONE' then do;
MPRINT(EM_DIAGRAM):   if IMP ne '' and METHOD ne 'NONE' then do;
23519      string = '"'!!strip(NAME)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(NAME)!!'"';
23520      put 'if NAME = ' string 'then delete;';
MPRINT(EM_DIAGRAM):   put 'if NAME = ' string 'then delete;';
23521      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23522      string = '"'!!strip(IMP)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(IMP)!!'"';
23523      put 'if NAME    = ' string ' then do;';
MPRINT(EM_DIAGRAM):   put 'if NAME    = ' string ' then do;';
23524      string = '"'!!strip(ROLE)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(ROLE)!!'"';
23525      put '   ROLE    = ' string ';';
MPRINT(EM_DIAGRAM):   put '   ROLE    = ' string ';';
23526      string = '"'!!strip(FAMILY)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(FAMILY)!!'"';
23527      put '   FAMILY  = ' string ';';
MPRINT(EM_DIAGRAM):   put '   FAMILY  = ' string ';';
23528      string = '"'!!strip(REPORT)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(REPORT)!!'"';
23529      put '   REPORT  = ' string ';';
MPRINT(EM_DIAGRAM):   put '   REPORT  = ' string ';';
23530      string = '"'!!strip(LEVEL)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(LEVEL)!!'"';
23531      put '   LEVEL   = ' string ';';
MPRINT(EM_DIAGRAM):   put '   LEVEL   = ' string ';';
23532      string = '"'!!strip(ORDER)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(ORDER)!!'"';
23533      put '   ORDER   = ' string ';';
MPRINT(EM_DIAGRAM):   put '   ORDER   = ' string ';';
23534      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23535      end;
MPRINT(EM_DIAGRAM):   end;
23536      if percentmiss>50 and ROLE ne 'TARGET' then do;
MPRINT(EM_DIAGRAM):   if percentmiss>50 and ROLE ne 'TARGET' then do;
23537      string = '"'!!strip(NAME)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(NAME)!!'"';
23538      put 'if NAME = ' string ' then do;';
MPRINT(EM_DIAGRAM):   put 'if NAME = ' string ' then do;';
23539      put '   ROLE ="REJECTED";';
MPRINT(EM_DIAGRAM):   put '   ROLE ="REJECTED";';
23540      put '   COMMENT = "Percent of missing exceeds 50%";';
MPRINT(EM_DIAGRAM):   put '   COMMENT = "Percent of missing exceeds 50%";';
23541      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23542      end;
MPRINT(EM_DIAGRAM):   end;
23543      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file #LN00275 is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Impt\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=20 April 2018 23:14:47 o'clock,
      Create Time=19 April 2018 18:22:18 o'clock
 
NOTE: 27 records were written to the file #LN00275.
      The minimum record length was 4.
      The maximum record length was 48.
NOTE: There were 26 observations read from the data set EMWS1.IMPT_META.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23544      filename emflow "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23545      *------------------------------------------------------------*;
23546      * Impt: Scoring DATA data;
23547      *------------------------------------------------------------*;
23548      data EMWS1.Impt_TRAIN
23549      / view=EMWS1.Impt_TRAIN
23550      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Impt_TRAIN / view=EMWS1.Impt_TRAIN ;
23551      set EMWS1.Filter_TRAIN
23552      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_TRAIN ;
23553      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas.
23554     +*;
MPRINT(EM_DIAGRAM):   *;
23555     +* TREE IMPUTATION;
MPRINT(EM_DIAGRAM):   * TREE IMPUTATION;
23556     +*;
MPRINT(EM_DIAGRAM):   *;
23557     +*;
MPRINT(EM_DIAGRAM):   *;
23558     +* IMPUTE VARIABLE: Income;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: Income;
23559     +*;
MPRINT(EM_DIAGRAM):   *;
23560     +length IMP_Income 8;
MPRINT(EM_DIAGRAM):   length IMP_Income 8;
23561     +format IMP_Income BEST.;
MPRINT(EM_DIAGRAM):   format IMP_Income BEST.;
23562     +label IMP_Income = 'Imputed: Income';
MPRINT(EM_DIAGRAM):   label IMP_Income = 'Imputed: Income';
23563     +IMP_Income = Income;
MPRINT(EM_DIAGRAM):   IMP_Income = Income;
23564     +if missing(IMP_Income) then do;
MPRINT(EM_DIAGRAM):   if missing(IMP_Income) then do;
23565     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
23566     +****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
23567     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
23568     +****** LENGTHS OF NEW CHARACTER VARIABLES ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
23569     +LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
23570     +****** LABELS FOR NEW VARIABLES ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
23571     +label P_Income = 'Predicted: Income';
MPRINT(EM_DIAGRAM):   label P_Income = 'Predicted: Income';
23572     +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
23573     +****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
23574     +LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
23575     +DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
23576     +_ARBFMT_12 = ' ';
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
23577     +/* Initialize to avoid warning. */
23578     +****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
23579     +IF NOT MISSING(MntMiniatures ) AND
23580     +MntMiniatures < 118 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMiniatures ) AND MntMiniatures < 118 THEN DO;
23581     +IF NOT MISSING(MntMiniatures ) AND
23582     +29.5 <= MntMiniatures THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMiniatures ) AND 29.5 <= MntMiniatures THEN DO;
23583     +IF NOT MISSING(NumWebVisitsMonth ) AND
23584     +NumWebVisitsMonth < 3.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND NumWebVisitsMonth < 3.5 THEN DO;
23585     +IF NOT MISSING(MntScenario ) AND
23586     +MntScenario < 31 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntScenario ) AND MntScenario < 31 THEN DO;
23587     +P_Income = 60000.8461538461;
MPRINT(EM_DIAGRAM):   P_Income = 60000.8461538461;
23588     +END;
MPRINT(EM_DIAGRAM):   END;
23589     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23590     +P_Income = 76444.05;
MPRINT(EM_DIAGRAM):   P_Income = 76444.05;
23591     +END;
MPRINT(EM_DIAGRAM):   END;
23592     +END;
MPRINT(EM_DIAGRAM):   END;
23593     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23594     +IF NOT MISSING(NumWebVisitsMonth ) AND
23595     +7.5 <= NumWebVisitsMonth THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND 7.5 <= NumWebVisitsMonth THEN DO;
23596     +IF NOT MISSING(Teenhome ) AND
23597     +0.5 <= Teenhome THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Teenhome ) AND 0.5 <= Teenhome THEN DO;
23598     +P_Income = 45831.2195121951;
MPRINT(EM_DIAGRAM):   P_Income = 45831.2195121951;
23599     +END;
MPRINT(EM_DIAGRAM):   END;
23600     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23601     +P_Income = 38620.1702127659;
MPRINT(EM_DIAGRAM):   P_Income = 38620.1702127659;
23602     +END;
MPRINT(EM_DIAGRAM):   END;
23603     +END;
MPRINT(EM_DIAGRAM):   END;
23604     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23605     +IF NOT MISSING(Teenhome ) AND
23606     +Teenhome < 0.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Teenhome ) AND Teenhome < 0.5 THEN DO;
23607     +P_Income = 46564.9333333333;
MPRINT(EM_DIAGRAM):   P_Income = 46564.9333333333;
23608     +END;
MPRINT(EM_DIAGRAM):   END;
23609     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23610     +P_Income = 53181.4938271605;
MPRINT(EM_DIAGRAM):   P_Income = 53181.4938271605;
23611     +END;
MPRINT(EM_DIAGRAM):   END;
23612     +END;
MPRINT(EM_DIAGRAM):   END;
23613     +END;
MPRINT(EM_DIAGRAM):   END;
23614     +END;
MPRINT(EM_DIAGRAM):   END;
23615     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23616     +IF NOT MISSING(Teenhome ) AND
23617     +0.5 <= Teenhome THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Teenhome ) AND 0.5 <= Teenhome THEN DO;
23618     +IF NOT MISSING(NumDealsPurchases ) AND
23619     +NumDealsPurchases < 1.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumDealsPurchases ) AND NumDealsPurchases < 1.5 THEN DO;
23620     +IF NOT MISSING(MntMiniatures ) AND
23621     +MntMiniatures < 9.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMiniatures ) AND MntMiniatures < 9.5 THEN DO;
23622     +IF NOT MISSING(MntCard_Games ) AND
23623     +MntCard_Games < 7 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntCard_Games ) AND MntCard_Games < 7 THEN DO;
23624     +P_Income = 33113.3125;
MPRINT(EM_DIAGRAM):   P_Income = 33113.3125;
23625     +END;
MPRINT(EM_DIAGRAM):   END;
23626     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23627     +P_Income = 46363.2727272727;
MPRINT(EM_DIAGRAM):   P_Income = 46363.2727272727;
23628     +END;
MPRINT(EM_DIAGRAM):   END;
23629     +END;
MPRINT(EM_DIAGRAM):   END;
23630     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23631     +P_Income = 51717.8305084745;
MPRINT(EM_DIAGRAM):   P_Income = 51717.8305084745;
23632     +END;
MPRINT(EM_DIAGRAM):   END;
23633     +END;
MPRINT(EM_DIAGRAM):   END;
23634     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23635     +IF NOT MISSING(MntMiniatures ) AND
23636     +MntMiniatures < 14.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMiniatures ) AND MntMiniatures < 14.5 THEN DO;
23637     +IF NOT MISSING(MntBrandA__Material ) AND
23638     +MntBrandA__Material < 16.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntBrandA__Material ) AND MntBrandA__Material < 16.5 THEN DO;
23639     +P_Income = 37886.1666666666;
MPRINT(EM_DIAGRAM):   P_Income = 37886.1666666666;
23640     +END;
MPRINT(EM_DIAGRAM):   END;
23641     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23642     +P_Income = 22242.4375;
MPRINT(EM_DIAGRAM):   P_Income = 22242.4375;
23643     +END;
MPRINT(EM_DIAGRAM):   END;
23644     +END;
MPRINT(EM_DIAGRAM):   END;
23645     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23646     +P_Income = 42230.343283582;
MPRINT(EM_DIAGRAM):   P_Income = 42230.343283582;
23647     +END;
MPRINT(EM_DIAGRAM):   END;
23648     +END;
MPRINT(EM_DIAGRAM):   END;
23649     +END;
MPRINT(EM_DIAGRAM):   END;
23650     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23651     +IF NOT MISSING(MntMiniatures ) AND
23652     +7.5 <= MntMiniatures THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMiniatures ) AND 7.5 <= MntMiniatures THEN DO;
23653     +IF NOT MISSING(NumDealsPurchases ) AND
23654     +2.5 <= NumDealsPurchases THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumDealsPurchases ) AND 2.5 <= NumDealsPurchases THEN DO;
23655     +IF NOT MISSING(MntCard_Games ) AND
23656     +83.5 <= MntCard_Games THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntCard_Games ) AND 83.5 <= MntCard_Games THEN DO;
23657     +P_Income = 41775.4;
MPRINT(EM_DIAGRAM):   P_Income = 41775.4;
23658     +END;
MPRINT(EM_DIAGRAM):   END;
23659     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23660     +P_Income = 24694.6578947368;
MPRINT(EM_DIAGRAM):   P_Income = 24694.6578947368;
23661     +END;
MPRINT(EM_DIAGRAM):   END;
23662     +END;
MPRINT(EM_DIAGRAM):   END;
23663     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23664     +P_Income = 35662.2312138728;
MPRINT(EM_DIAGRAM):   P_Income = 35662.2312138728;
23665     +END;
MPRINT(EM_DIAGRAM):   END;
23666     +END;
MPRINT(EM_DIAGRAM):   END;
23667     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23668     +IF NOT MISSING(NumDealsPurchases ) AND
23669     +1.5 <= NumDealsPurchases THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumDealsPurchases ) AND 1.5 <= NumDealsPurchases THEN DO;
23670     +P_Income = 23288.9175257731;
MPRINT(EM_DIAGRAM):   P_Income = 23288.9175257731;
23671     +END;
MPRINT(EM_DIAGRAM):   END;
23672     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23673     +P_Income = 29123.7272727272;
MPRINT(EM_DIAGRAM):   P_Income = 29123.7272727272;
23674     +END;
MPRINT(EM_DIAGRAM):   END;
23675     +END;
MPRINT(EM_DIAGRAM):   END;
23676     +END;
MPRINT(EM_DIAGRAM):   END;
23677     +END;
MPRINT(EM_DIAGRAM):   END;
23678     +END;
MPRINT(EM_DIAGRAM):   END;
23679     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23680     +IF NOT MISSING(NumDealsPurchases ) AND
23681     +NumDealsPurchases < 1.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumDealsPurchases ) AND NumDealsPurchases < 1.5 THEN DO;
23682     +_ARBFMT_12 = PUT( AcceptedCmp4 , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( AcceptedCmp4 , BEST.);
23683     +%DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumDealsPurchases ) AND NumDealsPurchases < 0.5 THEN DO;
MPRINT(EM_DIAGRAM):   P_Income = 107467.655172413;
MPRINT(EM_DIAGRAM):   END;
23684     +IF _ARBFMT_12 IN ('1' ) THEN DO;
23685     +IF NOT MISSING(NumDealsPurchases ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
23686     +NumDealsPurchases < 0.5 THEN DO;
23687     +P_Income = 107467.655172413;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND 4.5 <= NumWebVisitsMonth THEN DO;
23688     +END;
MPRINT(EM_DIAGRAM):   P_Income = 92015;
23689     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
23690     +IF NOT MISSING(NumWebVisitsMonth ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
23691     +4.5 <= NumWebVisitsMonth THEN DO;
MPRINT(EM_DIAGRAM):   P_Income = 100853.071942446;
23692     +P_Income = 92015;
MPRINT(EM_DIAGRAM):   END;
23693     +END;
MPRINT(EM_DIAGRAM):   END;
23694     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
23695     +P_Income = 100853.071942446;
MPRINT(EM_DIAGRAM):   ELSE DO;
23696     +END;
23697     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntCard_Games ) AND MntCard_Games < 415.5 THEN DO;
23698     +END;
23699     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND NumCatalogPurchases < 4.5 THEN DO;
23700     +IF NOT MISSING(MntCard_Games ) AND
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Dt_Customer ) AND Dt_Customer < 20351 THEN DO;
23701     +MntCard_Games < 415.5 THEN DO;
MPRINT(EM_DIAGRAM):   P_Income = 58836.6666666666;
23702     +IF NOT MISSING(NumCatalogPurchases ) AND
MPRINT(EM_DIAGRAM):   END;
23703     +NumCatalogPurchases < 4.5 THEN DO;
23704     +IF NOT MISSING(Dt_Customer ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
23705     +Dt_Customer < 20351 THEN DO;
MPRINT(EM_DIAGRAM):   P_Income = 73054.05;
23706     +P_Income = 58836.6666666666;
MPRINT(EM_DIAGRAM):   END;
23707     +END;
MPRINT(EM_DIAGRAM):   END;
23708     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23709     +P_Income = 73054.05;
MPRINT(EM_DIAGRAM):   P_Income = 82572.3583333333;
23710     +END;
MPRINT(EM_DIAGRAM):   END;
23711     +END;
MPRINT(EM_DIAGRAM):   END;
23712     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23713     +P_Income = 82572.3583333333;
23714     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND 4.5 <= NumWebVisitsMonth THEN DO;
23715     +END;
MPRINT(EM_DIAGRAM):   P_Income = 84319.7037037037;
23716     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
23717     +IF NOT MISSING(NumWebVisitsMonth ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
23718     +4.5 <= NumWebVisitsMonth THEN DO;
MPRINT(EM_DIAGRAM):   P_Income = 92504.211469534;
23719     +P_Income = 84319.7037037037;
MPRINT(EM_DIAGRAM):   END;
23720     +END;
MPRINT(EM_DIAGRAM):   END;
23721     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
23722     +P_Income = 92504.211469534;
23723     +END;
MPRINT(EM_DIAGRAM):   ELSE DO;
23724     +END;
23725     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntCard_Games ) AND 251.5 <= MntCard_Games THEN DO;
23726     +END;
23727     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMiniatures ) AND 627.5 <= MntMiniatures THEN DO;
23728     +IF NOT MISSING(MntCard_Games ) AND
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Kidhome ) AND 0.5 <= Kidhome THEN DO;
23729     +251.5 <= MntCard_Games THEN DO;
MPRINT(EM_DIAGRAM):   P_Income = 93983.4545454545;
23730     +IF NOT MISSING(MntMiniatures ) AND
MPRINT(EM_DIAGRAM):   END;
23731     +627.5 <= MntMiniatures THEN DO;
23732     +IF NOT MISSING(Kidhome ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
23733     +0.5 <= Kidhome THEN DO;
MPRINT(EM_DIAGRAM):   P_Income = 83167.046875;
23734     +P_Income = 93983.4545454545;
MPRINT(EM_DIAGRAM):   END;
23735     +END;
MPRINT(EM_DIAGRAM):   END;
23736     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23737     +P_Income = 83167.046875;
23738     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND 5.5 <= NumWebVisitsMonth THEN DO;
23739     +END;
23740     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Teenhome ) AND Teenhome < 0.5 THEN DO;
MPRINT(EM_DIAGRAM):   P_Income = 56632.6842105263;
23741     +IF NOT MISSING(NumWebVisitsMonth ) AND
MPRINT(EM_DIAGRAM):   END;
23742     +5.5 <= NumWebVisitsMonth THEN DO;
23743     +IF NOT MISSING(Teenhome ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
23744     +Teenhome < 0.5 THEN DO;
MPRINT(EM_DIAGRAM):   P_Income = 72954.6666666666;
23745     +P_Income = 56632.6842105263;
MPRINT(EM_DIAGRAM):   END;
23746     +END;
MPRINT(EM_DIAGRAM):   END;
23747     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23748     +P_Income = 72954.6666666666;
23749     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebPurchases ) AND 11.5 <= NumWebPurchases THEN DO;
23750     +END;
MPRINT(EM_DIAGRAM):   P_Income = 86293.95;
23751     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
23752     +IF NOT MISSING(NumWebPurchases ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
23753     +11.5 <= NumWebPurchases THEN DO;
MPRINT(EM_DIAGRAM):   P_Income = 76749.7590361445;
23754     +P_Income = 86293.95;
MPRINT(EM_DIAGRAM):   END;
23755     +END;
MPRINT(EM_DIAGRAM):   END;
23756     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
23757     +P_Income = 76749.7590361445;
23758     +END;
MPRINT(EM_DIAGRAM):   ELSE DO;
23759     +END;
23760     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMiniatures ) AND 359.5 <= MntMiniatures THEN DO;
23761     +END;
23762     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND NumWebVisitsMonth < 6.5 THEN DO;
23763     +IF NOT MISSING(MntMiniatures ) AND
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntCard_Games ) AND 158.5 <= MntCard_Games THEN DO;
23764     +359.5 <= MntMiniatures THEN DO;
MPRINT(EM_DIAGRAM):   P_Income = 78231.0909090909;
23765     +IF NOT MISSING(NumWebVisitsMonth ) AND
MPRINT(EM_DIAGRAM):   END;
23766     +NumWebVisitsMonth < 6.5 THEN DO;
23767     +IF NOT MISSING(MntCard_Games ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
23768     +158.5 <= MntCard_Games THEN DO;
MPRINT(EM_DIAGRAM):   P_Income = 70671.2916666666;
23769     +P_Income = 78231.0909090909;
MPRINT(EM_DIAGRAM):   END;
23770     +END;
MPRINT(EM_DIAGRAM):   END;
23771     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23772     +P_Income = 70671.2916666666;
23773     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMiniatures ) AND 779 <= MntMiniatures THEN DO;
23774     +END;
MPRINT(EM_DIAGRAM):   P_Income = 74626.5;
23775     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
23776     +IF NOT MISSING(MntMiniatures ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
23777     +779 <= MntMiniatures THEN DO;
MPRINT(EM_DIAGRAM):   P_Income = 64728.6708860759;
23778     +P_Income = 74626.5;
MPRINT(EM_DIAGRAM):   END;
23779     +END;
MPRINT(EM_DIAGRAM):   END;
23780     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
23781     +P_Income = 64728.6708860759;
MPRINT(EM_DIAGRAM):   ELSE DO;
23782     +END;
23783     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND 7.5 <= NumWebVisitsMonth THEN DO;
23784     +END;
23785     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Teenhome ) AND 0.5 <= Teenhome THEN DO;
MPRINT(EM_DIAGRAM):   P_Income = 55256.8918918919;
23786     +IF NOT MISSING(NumWebVisitsMonth ) AND
MPRINT(EM_DIAGRAM):   END;
23787     +7.5 <= NumWebVisitsMonth THEN DO;
23788     +IF NOT MISSING(Teenhome ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
23789     +0.5 <= Teenhome THEN DO;
MPRINT(EM_DIAGRAM):   P_Income = 44871.9729729729;
23790     +P_Income = 55256.8918918919;
MPRINT(EM_DIAGRAM):   END;
23791     +END;
MPRINT(EM_DIAGRAM):   END;
23792     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23793     +P_Income = 44871.9729729729;
23794     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND 5.5 <= NumWebVisitsMonth THEN DO;
23795     +END;
MPRINT(EM_DIAGRAM):   P_Income = 59564.0693069307;
23796     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
23797     +IF NOT MISSING(NumWebVisitsMonth ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
23798     +5.5 <= NumWebVisitsMonth THEN DO;
MPRINT(EM_DIAGRAM):   P_Income = 66927.3461538461;
23799     +P_Income = 59564.0693069307;
MPRINT(EM_DIAGRAM):   END;
23800     +END;
MPRINT(EM_DIAGRAM):   END;
23801     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
23802     +P_Income = 66927.3461538461;
MPRINT(EM_DIAGRAM):   END;
23803     +END;
MPRINT(EM_DIAGRAM):   END;
23804     +END;
MPRINT(EM_DIAGRAM):   ****************************************************************;
23805     +END;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
23806     +END;
MPRINT(EM_DIAGRAM):   ****************************************************************;
23807     +END;
MPRINT(EM_DIAGRAM):   *;
23808     +END;
MPRINT(EM_DIAGRAM):   * ASSIGN VALUE TO: Income;
23809     +****************************************************************;
MPRINT(EM_DIAGRAM):   *;
23810     +****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   IMP_Income = P_INCOME;
23811     +****************************************************************;
MPRINT(EM_DIAGRAM):   END;
23812     +*;
MPRINT(EM_DIAGRAM):   *;
23813     +* ASSIGN VALUE TO: Income;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: MntBrandA__Material;
23814     +*;
MPRINT(EM_DIAGRAM):   *;
23815     +IMP_Income = P_INCOME;
MPRINT(EM_DIAGRAM):   length IMP_MntBrandA__Material 8;
23816     +END;
23817     +*;
MPRINT(EM_DIAGRAM):   label IMP_MntBrandA__Material = 'Imputed: MntBrandA _Material';
23818     +* IMPUTE VARIABLE: MntBrandA__Material;
23819     +*;
MPRINT(EM_DIAGRAM):   IMP_MntBrandA__Material = MntBrandA__Material;
23820     +length IMP_MntBrandA__Material 8;
MPRINT(EM_DIAGRAM):   if missing(IMP_MntBrandA__Material) then do;
MPRINT(EM_DIAGRAM):   ****************************************************************;
23821     +label IMP_MntBrandA__Material = 'Imputed: MntBrandA _Material';
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
23822     +IMP_MntBrandA__Material = MntBrandA__Material;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
23823     +if missing(IMP_MntBrandA__Material) then do;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
23824     +****************************************************************;
23825     +****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
23826     +****************************************************************;
MPRINT(EM_DIAGRAM):   label P_MntBrandA__Material = 'Predicted: MntBrandA__Material';
23827     +****** LENGTHS OF NEW CHARACTER VARIABLES ******;
23828     +LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
23829     +****** LABELS FOR NEW VARIABLES ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
23830     +label P_MntBrandA__Material = 'Predicted: MntBrandA__Material';
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_10 $ 10;
23831     +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_10;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = ' ';
23832     +****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
23833     +LENGTH _ARBFMT_10 $ 10;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
23834     +DROP _ARBFMT_10;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
23835     +_ARBFMT_10 = ' ';
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
23836     +/* Initialize to avoid warning. */
23837     +LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
23838     +DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntCard_Games ) AND MntCard_Games < 79 THEN DO;
23839     +_ARBFMT_12 = ' ';
23840     +/* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 3.5 <= NumCatalogPurchases THEN DO;
23841     +****** ASSIGN OBSERVATION TO NODE ******;
23842     +IF NOT MISSING(MntCard_Games ) AND
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 6.5 <= NumCatalogPurchases THEN DO;
23843     +MntCard_Games < 79 THEN DO;
MPRINT(EM_DIAGRAM):   P_MntBrandA__Material = 132.833333333333;
23844     +IF NOT MISSING(NumCatalogPurchases ) AND
MPRINT(EM_DIAGRAM):   END;
23845     +3.5 <= NumCatalogPurchases THEN DO;
23846     +IF NOT MISSING(NumCatalogPurchases ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
23847     +6.5 <= NumCatalogPurchases THEN DO;
23848     +P_MntBrandA__Material = 132.833333333333;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Dt_Customer ) AND Dt_Customer < 19962 THEN DO;
23849     +END;
MPRINT(EM_DIAGRAM):   P_MntBrandA__Material = 150;
23850     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
23851     +IF NOT MISSING(Dt_Customer ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
23852     +Dt_Customer < 19962 THEN DO;
MPRINT(EM_DIAGRAM):   P_MntBrandA__Material = 49.0892857142857;
23853     +P_MntBrandA__Material = 150;
MPRINT(EM_DIAGRAM):   END;
23854     +END;
MPRINT(EM_DIAGRAM):   END;
23855     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
23856     +P_MntBrandA__Material = 49.0892857142857;
MPRINT(EM_DIAGRAM):   ELSE DO;
23857     +END;
23858     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 2.5 <= NumCatalogPurchases THEN DO;
23859     +END;
23860     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntScenario ) AND 9 <= MntScenario THEN DO;
23861     +IF NOT MISSING(NumCatalogPurchases ) AND
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntPainting_Material ) AND 37 <= MntPainting_Material THEN DO;
23862     +2.5 <= NumCatalogPurchases THEN DO;
MPRINT(EM_DIAGRAM):   P_MntBrandA__Material = 72;
23863     +IF NOT MISSING(MntScenario ) AND
MPRINT(EM_DIAGRAM):   END;
23864     +9 <= MntScenario THEN DO;
23865     +IF NOT MISSING(MntPainting_Material ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
23866     +37 <= MntPainting_Material THEN DO;
23867     +P_MntBrandA__Material = 72;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMiniatures ) AND 176.5 <= MntMiniatures THEN DO;
23868     +END;
MPRINT(EM_DIAGRAM):   P_MntBrandA__Material = 62.3636363636363;
23869     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
23870     +IF NOT MISSING(MntMiniatures ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
23871     +176.5 <= MntMiniatures THEN DO;
MPRINT(EM_DIAGRAM):   P_MntBrandA__Material = 30.8018018018018;
23872     +P_MntBrandA__Material = 62.3636363636363;
MPRINT(EM_DIAGRAM):   END;
23873     +END;
MPRINT(EM_DIAGRAM):   END;
23874     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
23875     +P_MntBrandA__Material = 30.8018018018018;
MPRINT(EM_DIAGRAM):   ELSE DO;
23876     +END;
23877     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebPurchases ) AND 6.5 <= NumWebPurchases THEN DO;
23878     +END;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( AcceptedCmp2 , BEST.);
23879     +ELSE DO;
23880     +IF NOT MISSING(NumWebPurchases ) AND
23881     +6.5 <= NumWebPurchases THEN DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
23882     +_ARBFMT_12 = PUT( AcceptedCmp2 , BEST.);
23883     +%DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   P_MntBrandA__Material = 52.2222222222222;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
23884     +IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   P_MntBrandA__Material = 24.1688311688311;
23885     +P_MntBrandA__Material = 52.2222222222222;
MPRINT(EM_DIAGRAM):   END;
23886     +END;
MPRINT(EM_DIAGRAM):   END;
23887     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23888     +P_MntBrandA__Material = 24.1688311688311;
23889     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMagazines ) AND 5.5 <= MntMagazines THEN DO;
23890     +END;
MPRINT(EM_DIAGRAM):   P_MntBrandA__Material = 26.3181818181818;
23891     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
23892     +IF NOT MISSING(MntMagazines ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
23893     +5.5 <= MntMagazines THEN DO;
MPRINT(EM_DIAGRAM):   P_MntBrandA__Material = 14.9663865546218;
23894     +P_MntBrandA__Material = 26.3181818181818;
MPRINT(EM_DIAGRAM):   END;
23895     +END;
MPRINT(EM_DIAGRAM):   END;
23896     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
23897     +P_MntBrandA__Material = 14.9663865546218;
23898     +END;
MPRINT(EM_DIAGRAM):   ELSE DO;
23899     +END;
23900     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntScenario ) AND 13 <= MntScenario THEN DO;
23901     +END;
23902     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Dt_Customer ) AND Dt_Customer < 19972.5 THEN DO;
MPRINT(EM_DIAGRAM):   P_MntBrandA__Material = 49.1666666666666;
23903     +IF NOT MISSING(MntScenario ) AND
MPRINT(EM_DIAGRAM):   END;
23904     +13 <= MntScenario THEN DO;
23905     +IF NOT MISSING(Dt_Customer ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
23906     +Dt_Customer < 19972.5 THEN DO;
MPRINT(EM_DIAGRAM):   P_MntBrandA__Material = 21.2022471910112;
23907     +P_MntBrandA__Material = 49.1666666666666;
MPRINT(EM_DIAGRAM):   END;
23908     +END;
MPRINT(EM_DIAGRAM):   END;
23909     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23910     +P_MntBrandA__Material = 21.2022471910112;
23911     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMagazines ) AND 4.5 <= MntMagazines THEN DO;
23912     +END;
23913     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMiniatures ) AND 50 <= MntMiniatures THEN DO;
MPRINT(EM_DIAGRAM):   P_MntBrandA__Material = 39.1666666666666;
23914     +IF NOT MISSING(MntMagazines ) AND
MPRINT(EM_DIAGRAM):   END;
23915     +4.5 <= MntMagazines THEN DO;
23916     +IF NOT MISSING(MntMiniatures ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
23917     +50 <= MntMiniatures THEN DO;
MPRINT(EM_DIAGRAM):   P_MntBrandA__Material = 15.2258064516129;
23918     +P_MntBrandA__Material = 39.1666666666666;
MPRINT(EM_DIAGRAM):   END;
23919     +END;
MPRINT(EM_DIAGRAM):   END;
23920     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23921     +P_MntBrandA__Material = 15.2258064516129;
23922     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebPurchases ) AND 5.5 <= NumWebPurchases THEN DO;
23923     +END;
MPRINT(EM_DIAGRAM):   P_MntBrandA__Material = 10.6716417910447;
23924     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
23925     +IF NOT MISSING(NumWebPurchases ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
23926     +5.5 <= NumWebPurchases THEN DO;
MPRINT(EM_DIAGRAM):   P_MntBrandA__Material = 5.79116465863453;
23927     +P_MntBrandA__Material = 10.6716417910447;
MPRINT(EM_DIAGRAM):   END;
23928     +END;
MPRINT(EM_DIAGRAM):   END;
23929     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
23930     +P_MntBrandA__Material = 5.79116465863453;
MPRINT(EM_DIAGRAM):   END;
23931     +END;
MPRINT(EM_DIAGRAM):   END;
23932     +END;
23933     +END;
MPRINT(EM_DIAGRAM):   ELSE DO;
23934     +END;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Education , $10.);
23935     +END;
23936     +END;
23937     +ELSE DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
23938     +_ARBFMT_10 = PUT( Education , $10.);
23939     +%DMNORMIP( _ARBFMT_10);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('BASIC' ,'2N CYCLE' ) THEN DO;
MPRINT(EM_DIAGRAM):   P_MntBrandA__Material = 106.692098092643;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
23940     +IF _ARBFMT_10 IN ('BASIC' ,'2N CYCLE' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( AcceptedCmp2 , BEST.);
23941     +P_MntBrandA__Material = 106.692098092643;
23942     +END;
23943     +ELSE DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
23944     +_ARBFMT_12 = PUT( AcceptedCmp2 , BEST.);
23945     +%DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   P_MntBrandA__Material = 118.571428571428;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
23946     +IF _ARBFMT_12 IN ('1' ) THEN DO;
23947     +P_MntBrandA__Material = 118.571428571428;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntPainting_Material ) AND 68.5 <= MntPainting_Material THEN DO;
23948     +END;
23949     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Dt_Customer ) AND 20437.5 <= Dt_Customer THEN DO;
MPRINT(EM_DIAGRAM):   P_MntBrandA__Material = 57.2727272727272;
23950     +IF NOT MISSING(MntPainting_Material ) AND
MPRINT(EM_DIAGRAM):   END;
23951     +68.5 <= MntPainting_Material THEN DO;
23952     +IF NOT MISSING(Dt_Customer ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
23953     +20437.5 <= Dt_Customer THEN DO;
MPRINT(EM_DIAGRAM):   P_MntBrandA__Material = 102.050632911392;
23954     +P_MntBrandA__Material = 57.2727272727272;
MPRINT(EM_DIAGRAM):   END;
23955     +END;
MPRINT(EM_DIAGRAM):   END;
23956     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23957     +P_MntBrandA__Material = 102.050632911392;
23958     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND NumCatalogPurchases < 4.5 THEN DO;
23959     +END;
23960     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntCard_Games ) AND 320 <= MntCard_Games THEN DO;
MPRINT(EM_DIAGRAM):   P_MntBrandA__Material = 87.48;
23961     +IF NOT MISSING(NumCatalogPurchases ) AND
MPRINT(EM_DIAGRAM):   END;
23962     +NumCatalogPurchases < 4.5 THEN DO;
23963     +IF NOT MISSING(MntCard_Games ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
23964     +320 <= MntCard_Games THEN DO;
MPRINT(EM_DIAGRAM):   P_MntBrandA__Material = 44.4663461538461;
23965     +P_MntBrandA__Material = 87.48;
MPRINT(EM_DIAGRAM):   END;
23966     +END;
MPRINT(EM_DIAGRAM):   END;
23967     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23968     +P_MntBrandA__Material = 44.4663461538461;
MPRINT(EM_DIAGRAM):   P_MntBrandA__Material = 68.2479108635097;
23969     +END;
MPRINT(EM_DIAGRAM):   END;
23970     +END;
MPRINT(EM_DIAGRAM):   END;
23971     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
23972     +P_MntBrandA__Material = 68.2479108635097;
MPRINT(EM_DIAGRAM):   END;
23973     +END;
MPRINT(EM_DIAGRAM):   ****************************************************************;
23974     +END;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
23975     +END;
MPRINT(EM_DIAGRAM):   ****************************************************************;
23976     +END;
MPRINT(EM_DIAGRAM):   *;
23977     +END;
MPRINT(EM_DIAGRAM):   * ASSIGN VALUE TO: MntBrandA__Material;
23978     +****************************************************************;
MPRINT(EM_DIAGRAM):   *;
23979     +****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   IMP_MntBrandA__Material = P_MNTBRANDA__MATERIAL;
23980     +****************************************************************;
MPRINT(EM_DIAGRAM):   END;
23981     +*;
MPRINT(EM_DIAGRAM):   *;
23982     +* ASSIGN VALUE TO: MntBrandA__Material;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: MntScenario;
23983     +*;
MPRINT(EM_DIAGRAM):   *;
23984     +IMP_MntBrandA__Material = P_MNTBRANDA__MATERIAL;
MPRINT(EM_DIAGRAM):   length IMP_MntScenario 8;
23985     +END;
23986     +*;
MPRINT(EM_DIAGRAM):   format IMP_MntScenario BEST.;
23987     +* IMPUTE VARIABLE: MntScenario;
MPRINT(EM_DIAGRAM):   label IMP_MntScenario = 'Imputed: MntScenario';
23988     +*;
23989     +length IMP_MntScenario 8;
MPRINT(EM_DIAGRAM):   IMP_MntScenario = MntScenario;
MPRINT(EM_DIAGRAM):   if missing(IMP_MntScenario) then do;
23990     +format IMP_MntScenario BEST.;
MPRINT(EM_DIAGRAM):   ****************************************************************;
23991     +label IMP_MntScenario = 'Imputed: MntScenario';
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
23992     +IMP_MntScenario = MntScenario;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
23993     +if missing(IMP_MntScenario) then do;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
23994     +****************************************************************;
23995     +****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
23996     +****************************************************************;
MPRINT(EM_DIAGRAM):   label P_MntScenario = 'Predicted: MntScenario';
23997     +****** LENGTHS OF NEW CHARACTER VARIABLES ******;
23998     +LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
23999     +****** LABELS FOR NEW VARIABLES ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
24000     +label P_MntScenario = 'Predicted: MntScenario';
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_10 $ 10;
24001     +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_10;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = ' ';
24002     +****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
24003     +LENGTH _ARBFMT_10 $ 10;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
24004     +DROP _ARBFMT_10;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntCard_Games ) AND 146.5 <= MntCard_Games THEN DO;
24005     +_ARBFMT_10 = ' ';
24006     +/* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntPainting_Material ) AND 172 <= MntPainting_Material THEN DO;
24007     +****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   P_MntScenario = 190.855072463768;
24008     +IF NOT MISSING(MntCard_Games ) AND
MPRINT(EM_DIAGRAM):   END;
24009     +146.5 <= MntCard_Games THEN DO;
24010     +IF NOT MISSING(MntPainting_Material ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
24011     +172 <= MntPainting_Material THEN DO;
24012     +P_MntScenario = 190.855072463768;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMagazines ) AND MntMagazines < 33.5 THEN DO;
24013     +END;
24014     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntPainting_Material ) AND 58 <= MntPainting_Material THEN DO;
MPRINT(EM_DIAGRAM):   P_MntScenario = 108.4;
24015     +IF NOT MISSING(MntMagazines ) AND
MPRINT(EM_DIAGRAM):   END;
24016     +MntMagazines < 33.5 THEN DO;
24017     +IF NOT MISSING(MntPainting_Material ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
24018     +58 <= MntPainting_Material THEN DO;
24019     +P_MntScenario = 108.4;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Income ) AND Income < 85245 THEN DO;
24020     +END;
24021     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntPainting_Material ) AND 28 <= MntPainting_Material THEN DO;
MPRINT(EM_DIAGRAM):   P_MntScenario = 53.2428571428571;
24022     +IF NOT MISSING(Income ) AND
MPRINT(EM_DIAGRAM):   END;
24023     +Income < 85245 THEN DO;
24024     +IF NOT MISSING(MntPainting_Material ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
24025     +28 <= MntPainting_Material THEN DO;
MPRINT(EM_DIAGRAM):   P_MntScenario = 29.3509933774834;
24026     +P_MntScenario = 53.2428571428571;
MPRINT(EM_DIAGRAM):   END;
24027     +END;
MPRINT(EM_DIAGRAM):   END;
24028     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
24029     +P_MntScenario = 29.3509933774834;
MPRINT(EM_DIAGRAM):   P_MntScenario = 79.8842105263158;
24030     +END;
MPRINT(EM_DIAGRAM):   END;
24031     +END;
MPRINT(EM_DIAGRAM):   END;
24032     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
24033     +P_MntScenario = 79.8842105263158;
MPRINT(EM_DIAGRAM):   ELSE DO;
24034     +END;
24035     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMagazines ) AND 71.5 <= MntMagazines THEN DO;
24036     +END;
MPRINT(EM_DIAGRAM):   P_MntScenario = 141.806034482758;
24037     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
24038     +IF NOT MISSING(MntMagazines ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
24039     +71.5 <= MntMagazines THEN DO;
MPRINT(EM_DIAGRAM):   P_MntScenario = 104.139344262295;
24040     +P_MntScenario = 141.806034482758;
MPRINT(EM_DIAGRAM):   END;
24041     +END;
MPRINT(EM_DIAGRAM):   END;
24042     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
24043     +P_MntScenario = 104.139344262295;
24044     +END;
MPRINT(EM_DIAGRAM):   ELSE DO;
24045     +END;
24046     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntPainting_Material ) AND 34 <= MntPainting_Material THEN DO;
24047     +END;
24048     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 4.5 <= NumCatalogPurchases THEN DO;
MPRINT(EM_DIAGRAM):   P_MntScenario = 96.7777777777777;
24049     +IF NOT MISSING(MntPainting_Material ) AND
MPRINT(EM_DIAGRAM):   END;
24050     +34 <= MntPainting_Material THEN DO;
24051     +IF NOT MISSING(NumCatalogPurchases ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
24052     +4.5 <= NumCatalogPurchases THEN DO;
MPRINT(EM_DIAGRAM):   P_MntScenario = 46.48;
24053     +P_MntScenario = 96.7777777777777;
MPRINT(EM_DIAGRAM):   END;
24054     +END;
MPRINT(EM_DIAGRAM):   END;
24055     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
24056     +P_MntScenario = 46.48;
24057     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMagazines ) AND 6.5 <= MntMagazines THEN DO;
24058     +END;
24059     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMagazines ) AND 29.5 <= MntMagazines THEN DO;
MPRINT(EM_DIAGRAM):   P_MntScenario = 53.8666666666666;
24060     +IF NOT MISSING(MntMagazines ) AND
MPRINT(EM_DIAGRAM):   END;
24061     +6.5 <= MntMagazines THEN DO;
24062     +IF NOT MISSING(MntMagazines ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
24063     +29.5 <= MntMagazines THEN DO;
24064     +P_MntScenario = 53.8666666666666;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntPainting_Material ) AND 17.5 <= MntPainting_Material THEN DO;
24065     +END;
MPRINT(EM_DIAGRAM):   P_MntScenario = 26.2857142857142;
24066     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
24067     +IF NOT MISSING(MntPainting_Material ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
24068     +17.5 <= MntPainting_Material THEN DO;
MPRINT(EM_DIAGRAM):   P_MntScenario = 15.7768924302788;
24069     +P_MntScenario = 26.2857142857142;
MPRINT(EM_DIAGRAM):   END;
24070     +END;
MPRINT(EM_DIAGRAM):   END;
24071     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
24072     +P_MntScenario = 15.7768924302788;
MPRINT(EM_DIAGRAM):   ELSE DO;
24073     +END;
24074     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntPainting_Material ) AND 7 <= MntPainting_Material THEN DO;
24075     +END;
24076     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntPainting_Material ) AND 22 <= MntPainting_Material THEN DO;
MPRINT(EM_DIAGRAM):   P_MntScenario = 26.1;
24077     +IF NOT MISSING(MntPainting_Material ) AND
MPRINT(EM_DIAGRAM):   END;
24078     +7 <= MntPainting_Material THEN DO;
24079     +IF NOT MISSING(MntPainting_Material ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
24080     +22 <= MntPainting_Material THEN DO;
24081     +P_MntScenario = 26.1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntCard_Games ) AND 113 <= MntCard_Games THEN DO;
24082     +END;
MPRINT(EM_DIAGRAM):   P_MntScenario = 24.5;
24083     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
24084     +IF NOT MISSING(MntCard_Games ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
24085     +113 <= MntCard_Games THEN DO;
MPRINT(EM_DIAGRAM):   P_MntScenario = 11.4846625766871;
24086     +P_MntScenario = 24.5;
MPRINT(EM_DIAGRAM):   END;
24087     +END;
MPRINT(EM_DIAGRAM):   END;
24088     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
24089     +P_MntScenario = 11.4846625766871;
MPRINT(EM_DIAGRAM):   ELSE DO;
24090     +END;
24091     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMagazines ) AND 1.5 <= MntMagazines THEN DO;
24092     +END;
MPRINT(EM_DIAGRAM):   P_MntScenario = 5.89010989010989;
24093     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
24094     +IF NOT MISSING(MntMagazines ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
24095     +1.5 <= MntMagazines THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Education , $10.);
24096     +P_MntScenario = 5.89010989010989;
24097     +END;
24098     +ELSE DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
24099     +_ARBFMT_10 = PUT( Education , $10.);
24100     +%DMNORMIP( _ARBFMT_10);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('BASIC' ) THEN DO;
MPRINT(EM_DIAGRAM):   P_MntScenario = 9.08333333333333;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
24101     +IF _ARBFMT_10 IN ('BASIC' ) THEN DO;
MPRINT(EM_DIAGRAM):   P_MntScenario = 2.44278606965174;
24102     +P_MntScenario = 9.08333333333333;
MPRINT(EM_DIAGRAM):   END;
24103     +END;
MPRINT(EM_DIAGRAM):   END;
24104     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
24105     +P_MntScenario = 2.44278606965174;
MPRINT(EM_DIAGRAM):   END;
24106     +END;
MPRINT(EM_DIAGRAM):   END;
24107     +END;
MPRINT(EM_DIAGRAM):   ****************************************************************;
24108     +END;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
24109     +END;
MPRINT(EM_DIAGRAM):   ****************************************************************;
24110     +END;
MPRINT(EM_DIAGRAM):   *;
24111     +END;
MPRINT(EM_DIAGRAM):   * ASSIGN VALUE TO: MntScenario;
24112     +****************************************************************;
MPRINT(EM_DIAGRAM):   *;
24113     +****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   IMP_MntScenario = P_MNTSCENARIO;
24114     +****************************************************************;
MPRINT(EM_DIAGRAM):   END;
24115     +*;
MPRINT(EM_DIAGRAM):   *;
24116     +* ASSIGN VALUE TO: MntScenario;
MPRINT(EM_DIAGRAM):   * Drop prediction variables since they are for INPUTS not TARGETS;
24117     +*;
MPRINT(EM_DIAGRAM):   * Replace _NODE_ by _XODE_ so it can be safely dropped;
24118     +IMP_MntScenario = P_MNTSCENARIO;
MPRINT(EM_DIAGRAM):   *;
24119     +END;
24120     +*;
24121     +* Drop prediction variables since they are for INPUTS not TARGETS;
24122     +* Replace _NODE_ by _XODE_ so it can be safely dropped;
24123     +*;
MPRINT(EM_DIAGRAM):   drop P_Income P_MntBrandA__Material P_MntScenario ;
24124     +drop
24125     +P_Income
24126     +P_MntBrandA__Material
24127     +P_MntScenario
24128     +;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
24129      run;
 
NOTE: DATA STEP view saved on file EMWS1.IMPT_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.FILTER_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
24130      quit;
24131      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
24132      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
24133      * Impt: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Impt: Computing metadata for TRAIN data;
24134      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Impt\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Impt_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Impt_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Impt_TRAIN out=WORK.M0L7C_WK noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0L7C_WK;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0L7C_WK(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0L7C_WK;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0L7C_WK;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M347F3P6 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M347F3P6;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M347F3P6;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2FXF2VM(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M347F3P6;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M347F3P6;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M347F3P6;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M347F3P6;
MPRINT(EMADVISECOLUMNS):   set WORK.M347F3P6;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Filter_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Filter_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Impt_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Impt";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME = "Income" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_Income" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "MntBrandA__Material" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_MntBrandA__Material" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "MntScenario" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_MntScenario" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS1.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20 April 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "23:14:48 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                20 April 2018
Time:                23:14:48 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0ROTMC_ "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Impt\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0ROTMC_ new;
MPRINT(EM_DIAGRAM):   run;
24522      %let _nimpute = 0;
24523      data EMWS1.Impt_RESULT;
MPRINT(EM_DIAGRAM):    data EMWS1.Impt_RESULT;
24524      label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,        NOQUOTE))" METHOD = "%sysfunc(sasmsg(sashelp.dmine, rpt_imputemethod_vlabel, NOQUOTE))" IMPUTED = "%sysfunc(sasmsg(sashelp.dmine, rpt_imputedvar_vlabel,   NOQUOTE))" INDICATOR
24524    !  =
24525         "%sysfunc(sasmsg(sashelp.dmine, rpt_indicatorvar_vlabel, NOQUOTE))" VALUE = "%sysfunc(sasmsg(sashelp.dmine, rpt_imputevalue_vlabel,  NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel,        NOQUOTE))" LEVEL =
24526         "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel,       NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,       NOQUOTE))" TRAIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_missingcount_vlabel, NOQUOTE, TRAIN))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" METHOD = "Impute Method" IMPUTED = "Imputed Variable" INDICATOR = "Indicator Variable" VALUE = "Impute Value" ROLE = "Role" LEVEL = "Measurement Level" LABEL = "Label" TRAIN = "Number of Missing for
TRAIN";
24527      set EMWS1.Impt_META(where=(IMPUTED ne '') keep=NAME METHOD IMP VALUE ROLE NMISS LEVEL LABEL rename=(IMP=IMPUTED NMISS=TRAIN)) end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Impt_META(where=(IMPUTED ne '') keep=NAME METHOD IMP VALUE ROLE NMISS LEVEL LABEL rename=(IMP=IMPUTED NMISS=TRAIN)) end=eof;
24528      if eof then call symput('_nimpute', '1');
MPRINT(EM_DIAGRAM):   if eof then call symput('_nimpute', '1');
24529      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable INDICATOR is uninitialized.
NOTE: There were 3 observations read from the data set EMWS1.IMPT_META.
      WHERE IMPUTED not = ' ';
NOTE: The data set EMWS1.IMPT_RESULT has 3 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
24530      proc print data=EMWS1.Impt_RESULT(obs=500) label noobs;
MPRINT(EM_DIAGRAM):    proc print data=EMWS1.Impt_RESULT(obs=500) label noobs;
24531      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_imputationsummary_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imputation Summary";
24532      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_numberobs_title,         NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Number Of Observations";
MPRINT(EM_DIAGRAM):   run;
24533      run;
 
NOTE: There were 3 observations read from the data set EMWS1.IMPT_RESULT.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
24534      proc freq data=EMWS1.Impt_RESULT noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Impt_RESULT noprint;
24535      table train /out=WORK.ImptSUMMARY nocum;
MPRINT(EM_DIAGRAM):   table train /out=WORK.ImptSUMMARY nocum;
24536      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.IMPT_RESULT.
NOTE: The data set WORK.IMPTSUMMARY has 3 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
24537      proc sort data=WORK.ImptSUMMARY NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.ImptSUMMARY NOTHREADS;
24538      by descending TRAIN;
MPRINT(EM_DIAGRAM):   by descending TRAIN;
24539      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.IMPTSUMMARY.
NOTE: The data set WORK.IMPTSUMMARY has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
24540      proc print data=WORK.ImptSUMMARY(obs=100) label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.ImptSUMMARY(obs=100) label;
24541      label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_varcount_vlabel,  NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_varpercent_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Number of Variables" PERCENT = "Percent of Variables";
24542      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
24543      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_missingvardistribution_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Distribution Training Data";
MPRINT(EM_DIAGRAM):   run;
24544      run;
 
NOTE: There were 3 observations read from the data set WORK.IMPTSUMMARY.
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
24545      data EMWS1.Impt_EMSCOREVAR;
MPRINT(EM_DIAGRAM):    data EMWS1.Impt_EMSCOREVAR;
24546      length Name $32 formula $70 file $200;
MPRINT(EM_DIAGRAM):   length Name $32 formula $70 file $200;
24547      keep NAME Formula file;
MPRINT(EM_DIAGRAM):   keep NAME Formula file;
24548      if _N_=1 then do;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
24549      file = "IMPUTECODE\"!!"_POSTALL_.sas";
MPRINT(EM_DIAGRAM):   file = "IMPUTECODE\"!!"_POSTALL_.sas";
24550      output;
MPRINT(EM_DIAGRAM):   output;
24551      end;
MPRINT(EM_DIAGRAM):   end;
24552      set EMWS1.Impt_META end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Impt_META end=eof;
24553      *set EMWS1.Impt_RESULT end=eof;
MPRINT(EM_DIAGRAM):   *set EMWS1.Impt_RESULT end=eof;
24554      if M ne '' then do;
MPRINT(EM_DIAGRAM):   if M ne '' then do;
24555      NAME= M;
MPRINT(EM_DIAGRAM):   NAME= M;
24556      file="IMPUTECODE\"!!strip(NAME)!!'.sas';
MPRINT(EM_DIAGRAM):   file="IMPUTECODE\"!!strip(NAME)!!'.sas';
24557      output;
MPRINT(EM_DIAGRAM):   output;
24558      end;
MPRINT(EM_DIAGRAM):   end;
24559      if IMP ne '' then do;
MPRINT(EM_DIAGRAM):   if IMP ne '' then do;
24560      NAME= IMP;
MPRINT(EM_DIAGRAM):   NAME= IMP;
24561      file="IMPUTECODE\"!!strip(NAME)!!'.sas';
MPRINT(EM_DIAGRAM):   file="IMPUTECODE\"!!strip(NAME)!!'.sas';
24562      output;
MPRINT(EM_DIAGRAM):   output;
24563      end;
MPRINT(EM_DIAGRAM):   end;
24564      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable formula is uninitialized.
NOTE: There were 26 observations read from the data set EMWS1.IMPT_META.
NOTE: The data set EMWS1.IMPT_EMSCOREVAR has 30 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
