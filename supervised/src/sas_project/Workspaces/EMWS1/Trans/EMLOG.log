*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                17:18:53 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:18:49 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                17:18:49 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3QWFBD1 "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Trans\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3QWFBD1 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Trans\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:18:49 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Trans\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Trans\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Trans\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Trans\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:18:50 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Trans\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Trans\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Trans\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Trans\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
40942      proc freq data=EMWS1.Trans_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Trans_VariableSet noprint;
40943      table ROLE*LEVEL/out=WORK.TransMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.TransMETA;
40944      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set EMWS1.TRANS_VARIABLESET.
NOTE: The data set WORK.TRANSMETA has 7 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
 
 
40945      proc print data=WORK.TransMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.TransMETA label noobs;
40946      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
40947      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
40948      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
40949      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
40950      run;
 
NOTE: There were 7 observations read from the data set WORK.TRANSMETA.
NOTE: The PROCEDURE PRINT printed page 6.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
40951      title10;
MPRINT(EM_DIAGRAM):   title10;
40952      data WORK.M3E4MY3O;
MPRINT(EM_DIAGRAM):    data WORK.M3E4MY3O;
40953      set WORK.M3E4MY3O;
MPRINT(EM_DIAGRAM):   set WORK.M3E4MY3O;
40954      if (METHOD='NONE' and ROLE ne 'FREQ') or (role = 'REJECTED' and METHOD = 'DEFAULT') then delete;
MPRINT(EM_DIAGRAM):   if (METHOD='NONE' and ROLE ne 'FREQ') or (role = 'REJECTED' and METHOD = 'DEFAULT') then delete;
40955      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK.M3E4MY3O.
NOTE: The data set WORK.M3E4MY3O has 24 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
41020      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
41021      * Trans: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   * Trans: Computing Summary Statistics;
41022      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41023      data WORK.M2Z49_VI;
MPRINT(EM_DIAGRAM):   data WORK.M2Z49_VI;
41024      set WORK.M2Z49_VI;
MPRINT(EM_DIAGRAM):   set WORK.M2Z49_VI;
41025      if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
41026      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 24 observations read from the data set WORK.M2Z49_VI.
NOTE: The data set WORK.M2Z49_VI has 24 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
41027      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
41028      * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
41029      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
41030      %macro DMDBClass;
41031          Childhome(ASC) Complain(ASC) DepVar(DESC) Education(ASC) Marital_Status(ASC)
41032      %mend DMDBClass;
41033      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
41034      * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
41035      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
41036      %macro DMDBVar;
41037          Frq IMP_Income IMP_MntBrandA__Material IMP_MntScenario Mnt MntCard_Games
41038         MntMagazines MntMiniatures MntPainting_Material NumCatalogPurchases
41039         NumDealsPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth Recency
41040         age average_purchase campaign_acceptance loyalty
41041      %mend DMDBVar;
41042      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41043      * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
41044      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41045      proc dmdb batch data=EMWS1.EMCODE3_TRAIN
41046      dmdbcat=WORK.EM_DMDB
41047      classout=WORK.Transclassout
41048      maxlevel = 513
41049      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.EMCODE3_TRAIN dmdbcat=WORK.EM_DMDB classout=WORK.Transclassout maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
41050      class %DMDBClass;
MPRINT(DMDBCLASS):   Childhome(ASC) Complain(ASC) DepVar(DESC) Education(ASC) Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
41051      var %DMDBVar;
MPRINT(DMDBVAR):   Frq IMP_Income IMP_MntBrandA__Material IMP_MntScenario Mnt MntCard_Games MntMagazines MntMiniatures MntPainting_Material NumCatalogPurchases NumDealsPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth Recency age
average_purchase campaign_acceptance loyalty
MPRINT(EM_DIAGRAM):  ;
41052      target
41053      DepVar
41054      ;
MPRINT(EM_DIAGRAM):   target DepVar ;
41055      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2437   Memory used = 511K.
NOTE: There were 2437 observations read from the data set EMWS1.EMCODE3_TRAIN.
NOTE: The data set WORK.TRANSCLASSOUT has 16 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
41056      quit;
41057      *--- end code ---*;
 
41058      data WORK.TransINTERVALMETA;
MPRINT(EM_DIAGRAM):    data WORK.TransINTERVALMETA;
41059      set WORK.M3E4MY3O;
MPRINT(EM_DIAGRAM):   set WORK.M3E4MY3O;
41060      if LEVEL ne 'INTERVAL' then delete;
MPRINT(EM_DIAGRAM):   if LEVEL ne 'INTERVAL' then delete;
41061      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 24 observations read from the data set WORK.M3E4MY3O.
NOTE: The data set WORK.TRANSINTERVALMETA has 19 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
41062      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
41063      * Trans: Determining Variables to Scale;
MPRINT(EM_DIAGRAM):   * Trans: Determining Variables to Scale;
41064      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41065      data WORK.M12ZWGKV;
MPRINT(EM_DIAGRAM):   data WORK.M12ZWGKV;
41066      set WORK.M12ZWGKV;
MPRINT(EM_DIAGRAM):   set WORK.M12ZWGKV;
41067      where (TYPE="N" and (METHOD in("MAX_NORM", "MAX_CORR", "EQUALIZE", "OP_MAX_NORM", "OP_EQUALIZE"))) or (ROLE eq "FREQ");
MPRINT(EM_DIAGRAM):   where (TYPE="N" and (METHOD in("MAX_NORM", "MAX_CORR", "EQUALIZE", "OP_MAX_NORM", "OP_EQUALIZE"))) or (ROLE eq "FREQ");
41068      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK.M12ZWGKV.
      WHERE ((TYPE='N') and METHOD in ('EQUALIZE', 'MAX_CORR', 'MAX_NORM', 'OP_EQUALIZE', 'OP_MAX_NORM')) or (ROLE='FREQ');
NOTE: The data set WORK.M12ZWGKV has 0 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
*------------------------------------------------------------*
*  Trans: Creating EMWS1.Trans_RESULT
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):      data EMWS1.Trans_RESULT;
MPRINT(EM_DIAGRAM):   length NAME NEWVAR $32 LEVEL $10 POWER 8 FORMULA $70 LABEL $44 TERM $200;
MPRINT(EM_DIAGRAM):   NAME = "Frq";
MPRINT(EM_DIAGRAM):   NEWVAR = "RANGE_Frq";
MPRINT(EM_DIAGRAM):   POWER = .;
MPRINT(EM_DIAGRAM):   FORMULA = "(Frq - 10) / (40-10)";
MPRINT(EM_DIAGRAM):   LABEL = 'Transformed Frq';
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL";
MPRINT(EM_DIAGRAM):   TYPE = "N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   NAME = "IMP_Income";
MPRINT(EM_DIAGRAM):   NEWVAR = "RANGE_IMP_Income";
MPRINT(EM_DIAGRAM):   POWER = .;
MPRINT(EM_DIAGRAM):   FORMULA = "(IMP_Income - 9000) / (123230-9000)";
MPRINT(EM_DIAGRAM):   LABEL = 'Transformed: Imputed: Income';
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL";
MPRINT(EM_DIAGRAM):   TYPE = "N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   NAME = "Mnt";
MPRINT(EM_DIAGRAM):   NEWVAR = "RANGE_Mnt";
MPRINT(EM_DIAGRAM):   POWER = .;
MPRINT(EM_DIAGRAM):   FORMULA = "(Mnt - 9) / (3260-9)";
MPRINT(EM_DIAGRAM):   LABEL = 'Transformed Mnt';
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL";
MPRINT(EM_DIAGRAM):   TYPE = "N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   NAME = "NumWebVisitsMonth";
MPRINT(EM_DIAGRAM):   NEWVAR = "RANGE_NumWebVisitsMonth";
MPRINT(EM_DIAGRAM):   POWER = .;
MPRINT(EM_DIAGRAM):   FORMULA = "(NumWebVisitsMonth - 4) / (15-4)";
MPRINT(EM_DIAGRAM):   LABEL = 'Transformed: NumWebVisitsMonth';
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL";
MPRINT(EM_DIAGRAM):   TYPE = "N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   NAME = "Recency";
MPRINT(EM_DIAGRAM):   NEWVAR = "RANGE_Recency";
MPRINT(EM_DIAGRAM):   POWER = .;
MPRINT(EM_DIAGRAM):   FORMULA = "(Recency - 0) / (99-0)";
MPRINT(EM_DIAGRAM):   LABEL = 'Transformed: Recency';
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL";
MPRINT(EM_DIAGRAM):   TYPE = "N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   NAME = "age";
MPRINT(EM_DIAGRAM):   NEWVAR = "RANGE_age";
MPRINT(EM_DIAGRAM):   POWER = .;
MPRINT(EM_DIAGRAM):   FORMULA = "(age - 19) / (74-19)";
MPRINT(EM_DIAGRAM):   LABEL = 'Transformed age';
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL";
MPRINT(EM_DIAGRAM):   TYPE = "N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   NAME = "average_purchase";
MPRINT(EM_DIAGRAM):   NEWVAR = "RANGE_average_purchase";
MPRINT(EM_DIAGRAM):   POWER = .;
MPRINT(EM_DIAGRAM):   FORMULA = "(average_purchase - 0.9) / (139.66666667-0.9)";
MPRINT(EM_DIAGRAM):   LABEL = 'Transformed average_purchase';
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL";
MPRINT(EM_DIAGRAM):   TYPE = "N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   NAME = "campaign_acceptance";
MPRINT(EM_DIAGRAM):   NEWVAR = "RANGE_campaign_acceptance";
MPRINT(EM_DIAGRAM):   POWER = .;
MPRINT(EM_DIAGRAM):   FORMULA = "(campaign_acceptance - 0) / (4-0)";
MPRINT(EM_DIAGRAM):   LABEL = 'Transformed campaign_acceptance';
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL";
MPRINT(EM_DIAGRAM):   TYPE = "N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   NAME = "loyalty";
MPRINT(EM_DIAGRAM):   NEWVAR = "RANGE_loyalty";
MPRINT(EM_DIAGRAM):   POWER = .;
MPRINT(EM_DIAGRAM):   FORMULA = "(loyalty - 24) / (47-24)";
MPRINT(EM_DIAGRAM):   LABEL = 'Transformed loyalty';
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL";
MPRINT(EM_DIAGRAM):   TYPE = "N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Trans_RESULT NOTHREADS;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M3E4MY3O out=WORK._TRANSRESLT(RENAME=(LEVEL=INPUTLEVEL TYPE=INPUTTYPE) KEEP=NAME ROLE LEVEL TYPE) NOTHREADS;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Trans_RESULT(RENAME=(NAME=INPUTNAME NEWVAR=NAME));
MPRINT(EM_DIAGRAM):   merge EMWS1.Trans_RESULT(in=a) WORK._TRANSRESLT;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if a then output;
MPRINT(EM_DIAGRAM):   run;
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
MPRINT(EM_DIAGRAM):   proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):   modify Trans_RESULT;
MPRINT(EM_DIAGRAM):   label INPUTNAME = "Input Name" NAME = "Output Name" POWER = "Power" FORMULA = "Formula" ROLE = "rpt_role_vlabel" INPUTLEVEL = "Input Level" LEVEL = "Output Level" INPUTTYPE = "Input Type" TYPE = "Output Type";
MPRINT(EM_DIAGRAM):   run;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
41163      data EMWS1.Trans_RESULT;
MPRINT(EM_DIAGRAM):   data EMWS1.Trans_RESULT;
41164      length NAME $32 FORMULA $70 POWER 8 ROLE $32 LEVEL $10 INPUTNAME $32 INPUTTYPE $1 LABEL $44;
MPRINT(EM_DIAGRAM):   length NAME $32 FORMULA $70 POWER 8 ROLE $32 LEVEL $10 INPUTNAME $32 INPUTTYPE $1 LABEL $44;
41165      label INPUTNAME ='Input Name' NAME='Name' POWER='Power' FORMULA='Formula' ROLE='Role' INPUTLEVEL='Input Level' LEVEL='Level' INPUTTYPE='Input Type' TYPE='Type';
MPRINT(EM_DIAGRAM):   label INPUTNAME = 'Input Name' NAME= 'Name' POWER= 'Power' FORMULA= 'Formula' ROLE= 'Role' INPUTLEVEL= 'Input Level' LEVEL= 'Level' INPUTTYPE= 'Input Type' TYPE= 'Type';
41166      set EMWS1.Trans_RESULT;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_RESULT;
41167      if INPUTNAME = '' then INPUTNAME = "Mixture of variables";
MPRINT(EM_DIAGRAM):   if INPUTNAME = '' then INPUTNAME = "Mixture of variables";
41168      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.TRANS_RESULT.
NOTE: The data set EMWS1.TRANS_RESULT has 9 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
41169      data WORK.M2JZ7W42;
MPRINT(EM_DIAGRAM):    data WORK.M2JZ7W42;
41170      set WORK.M2JZ7W42;
MPRINT(EM_DIAGRAM):   set WORK.M2JZ7W42;
41171      if ROLE='REJECTED' then ROLE='INPUT';
MPRINT(EM_DIAGRAM):   if ROLE='REJECTED' then ROLE='INPUT';
41172      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.M2JZ7W42.
NOTE: The data set WORK.M2JZ7W42 has 9 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
*------------------------------------------------------------*
*  Trans: Computing summary statistics for transformed variables
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    data WORK.Trans_TRANSFORM / view=WORK.Trans_TRANSFORM;
MPRINT(EM_DIAGRAM):   set EMWS1.EMCODE3_TRAIN;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: Frq , (Frq - 10) / (40-10);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label RANGE_Frq = 'Transformed Frq';
MPRINT(EM_DIAGRAM):   length RANGE_Frq 8;
MPRINT(EM_DIAGRAM):   if Frq eq . then RANGE_Frq = .;
MPRINT(EM_DIAGRAM):   else RANGE_Frq = (Frq - 10) / (40-10);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: IMP_Income , (IMP_Income - 9000) / (123230-9000);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label RANGE_IMP_Income = 'Transformed: Imputed: Income';
MPRINT(EM_DIAGRAM):   length RANGE_IMP_Income 8;
MPRINT(EM_DIAGRAM):   if IMP_Income eq . then RANGE_IMP_Income = .;
MPRINT(EM_DIAGRAM):   else RANGE_IMP_Income = (IMP_Income - 9000) / (123230-9000);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: Mnt , (Mnt - 9) / (3260-9);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label RANGE_Mnt = 'Transformed Mnt';
MPRINT(EM_DIAGRAM):   length RANGE_Mnt 8;
MPRINT(EM_DIAGRAM):   if Mnt eq . then RANGE_Mnt = .;
MPRINT(EM_DIAGRAM):   else RANGE_Mnt = (Mnt - 9) / (3260-9);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: NumWebVisitsMonth , (NumWebVisitsMonth - 4) / (15-4);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label RANGE_NumWebVisitsMonth = 'Transformed: NumWebVisitsMonth';
MPRINT(EM_DIAGRAM):   length RANGE_NumWebVisitsMonth 8;
MPRINT(EM_DIAGRAM):   if NumWebVisitsMonth eq . then RANGE_NumWebVisitsMonth = .;
MPRINT(EM_DIAGRAM):   else RANGE_NumWebVisitsMonth = (NumWebVisitsMonth - 4) / (15-4);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: Recency , (Recency - 0) / (99-0);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label RANGE_Recency = 'Transformed: Recency';
MPRINT(EM_DIAGRAM):   length RANGE_Recency 8;
MPRINT(EM_DIAGRAM):   if Recency eq . then RANGE_Recency = .;
MPRINT(EM_DIAGRAM):   else RANGE_Recency = (Recency - 0) / (99-0);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: age , (age - 19) / (74-19);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label RANGE_age = 'Transformed age';
MPRINT(EM_DIAGRAM):   length RANGE_age 8;
MPRINT(EM_DIAGRAM):   if age eq . then RANGE_age = .;
MPRINT(EM_DIAGRAM):   else RANGE_age = (age - 19) / (74-19);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: average_purchase , (average_purchase - 0.9) / (139.66666667-0.9);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label RANGE_average_purchase = 'Transformed average_purchase';
MPRINT(EM_DIAGRAM):   length RANGE_average_purchase 8;
MPRINT(EM_DIAGRAM):   if average_purchase eq . then RANGE_average_purchase = .;
MPRINT(EM_DIAGRAM):   else RANGE_average_purchase = (average_purchase - 0.9) / (139.66666667-0.9);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: campaign_acceptance , (campaign_acceptance - 0) / (4-0);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label RANGE_campaign_acceptance = 'Transformed campaign_acceptance';
MPRINT(EM_DIAGRAM):   length RANGE_campaign_acceptance 8;
MPRINT(EM_DIAGRAM):   if campaign_acceptance eq . then RANGE_campaign_acceptance = .;
MPRINT(EM_DIAGRAM):   else RANGE_campaign_acceptance = (campaign_acceptance - 0) / (4-0);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: loyalty , (loyalty - 24) / (47-24);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label RANGE_loyalty = 'Transformed loyalty';
MPRINT(EM_DIAGRAM):   length RANGE_loyalty 8;
MPRINT(EM_DIAGRAM):   if loyalty eq . then RANGE_loyalty = .;
MPRINT(EM_DIAGRAM):   else RANGE_loyalty = (loyalty - 24) / (47-24);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.Trans_TRANSFORM dmdbcat=WORK.EM_DMDB maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   var
MPRINT(DMDBVAR):   RANGE_Frq RANGE_IMP_Income RANGE_Mnt RANGE_NumWebVisitsMonth RANGE_Recency RANGE_age RANGE_average_purchase RANGE_campaign_acceptance RANGE_loyalty
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
MPRINT(EM_DIAGRAM):    data WORK.Trans_TEMP;
MPRINT(EM_DIAGRAM):   length SOURCE $6 NAME $32;
MPRINT(EM_DIAGRAM):   label SOURCE = "Source" NAME = "Variable Name" NLEVEL = "Number of Levels" NMISS = "Missing" MIN = "Minimum" MAX = "Maximum" MEAN = "Mean" STD = "Standard Deviation" SKEWNESS = "Skewness" KURTOSIS = "Kurtosis";
MPRINT(EM_DIAGRAM):   SOURCE = "OUTPUT";
MPRINT(EM_DIAGRAM):   NAME = "RANGE_Frq";
MPRINT(EM_DIAGRAM):   NMISS = 0;
MPRINT(EM_DIAGRAM):   NLEVEL = .;
MPRINT(EM_DIAGRAM):   MIN = 0;
MPRINT(EM_DIAGRAM):   MAX = 1;
MPRINT(EM_DIAGRAM):   MEAN = 0.32433319655314;
MPRINT(EM_DIAGRAM):   STD = 0.23744360213421;
MPRINT(EM_DIAGRAM):   SKEWNESS = 0.26890254681572;
MPRINT(EM_DIAGRAM):   KURTOSIS = -1.1392195504023;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   SOURCE = "OUTPUT";
MPRINT(EM_DIAGRAM):   NAME = "RANGE_IMP_Income";
MPRINT(EM_DIAGRAM):   NMISS = 0;
MPRINT(EM_DIAGRAM):   NLEVEL = .;
MPRINT(EM_DIAGRAM):   MIN = 0;
MPRINT(EM_DIAGRAM):   MAX = 1;
MPRINT(EM_DIAGRAM):   MEAN = 0.47192400615172;
MPRINT(EM_DIAGRAM):   STD = 0.22136078058908;
MPRINT(EM_DIAGRAM):   SKEWNESS = 0.00869947143586;
MPRINT(EM_DIAGRAM):   KURTOSIS = -0.96884162647395;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   SOURCE = "OUTPUT";
MPRINT(EM_DIAGRAM):   NAME = "RANGE_Mnt";
MPRINT(EM_DIAGRAM):   NMISS = 0;
MPRINT(EM_DIAGRAM):   NLEVEL = .;
MPRINT(EM_DIAGRAM):   MIN = 0;
MPRINT(EM_DIAGRAM):   MAX = 1;
MPRINT(EM_DIAGRAM):   MEAN = 0.21318878488502;
MPRINT(EM_DIAGRAM):   STD = 0.22074272929331;
MPRINT(EM_DIAGRAM):   SKEWNESS = 0.95803249052076;
MPRINT(EM_DIAGRAM):   KURTOSIS = -0.07645083013917;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   SOURCE = "OUTPUT";
MPRINT(EM_DIAGRAM):   NAME = "RANGE_NumWebVisitsMonth";
MPRINT(EM_DIAGRAM):   NMISS = 0;
MPRINT(EM_DIAGRAM):   NLEVEL = .;
MPRINT(EM_DIAGRAM):   MIN = 0;
MPRINT(EM_DIAGRAM):   MAX = 1;
MPRINT(EM_DIAGRAM):   MEAN = 0.4091468646249;
MPRINT(EM_DIAGRAM):   STD = 0.21319474159738;
MPRINT(EM_DIAGRAM):   SKEWNESS = 0.76067557323716;
MPRINT(EM_DIAGRAM):   KURTOSIS = 0.18652142016154;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   SOURCE = "OUTPUT";
MPRINT(EM_DIAGRAM):   NAME = "RANGE_Recency";
MPRINT(EM_DIAGRAM):   NMISS = 0;
MPRINT(EM_DIAGRAM):   NLEVEL = .;
MPRINT(EM_DIAGRAM):   MIN = 0;
MPRINT(EM_DIAGRAM):   MAX = 1;
MPRINT(EM_DIAGRAM):   MEAN = 0.49583234893041;
MPRINT(EM_DIAGRAM):   STD = 0.29820161823177;
MPRINT(EM_DIAGRAM):   SKEWNESS = 0.03540650301033;
MPRINT(EM_DIAGRAM):   KURTOSIS = -1.24683212837811;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   SOURCE = "OUTPUT";
MPRINT(EM_DIAGRAM):   NAME = "RANGE_age";
MPRINT(EM_DIAGRAM):   NMISS = 0;
MPRINT(EM_DIAGRAM):   NLEVEL = .;
MPRINT(EM_DIAGRAM):   MIN = 0;
MPRINT(EM_DIAGRAM):   MAX = 1;
MPRINT(EM_DIAGRAM):   MEAN = 0.51001604058641;
MPRINT(EM_DIAGRAM):   STD = 0.21541123235187;
MPRINT(EM_DIAGRAM):   SKEWNESS = 0.07014189172401;
MPRINT(EM_DIAGRAM):   KURTOSIS = -0.8230651145052;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   SOURCE = "OUTPUT";
MPRINT(EM_DIAGRAM):   NAME = "RANGE_average_purchase";
MPRINT(EM_DIAGRAM):   NMISS = 0;
MPRINT(EM_DIAGRAM):   NLEVEL = .;
MPRINT(EM_DIAGRAM):   MIN = 0;
MPRINT(EM_DIAGRAM):   MAX = 0.99999999997597;
MPRINT(EM_DIAGRAM):   MEAN = 0.20153059608491;
MPRINT(EM_DIAGRAM):   STD = 0.19371815831968;
MPRINT(EM_DIAGRAM):   SKEWNESS = 1.11360911797835;
MPRINT(EM_DIAGRAM):   KURTOSIS = 0.59979096522824;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   SOURCE = "OUTPUT";
MPRINT(EM_DIAGRAM):   NAME = "RANGE_campaign_acceptance";
MPRINT(EM_DIAGRAM):   NMISS = 0;
MPRINT(EM_DIAGRAM):   NLEVEL = .;
MPRINT(EM_DIAGRAM):   MIN = 0;
MPRINT(EM_DIAGRAM):   MAX = 1;
MPRINT(EM_DIAGRAM):   MEAN = 0.08268362741075;
MPRINT(EM_DIAGRAM):   STD = 0.17351202865314;
MPRINT(EM_DIAGRAM):   SKEWNESS = 2.45967823959083;
MPRINT(EM_DIAGRAM):   KURTOSIS = 6.5036937027632;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   SOURCE = "OUTPUT";
MPRINT(EM_DIAGRAM):   NAME = "RANGE_loyalty";
MPRINT(EM_DIAGRAM):   NMISS = 0;
MPRINT(EM_DIAGRAM):   NLEVEL = .;
MPRINT(EM_DIAGRAM):   MIN = 0;
MPRINT(EM_DIAGRAM):   MAX = 1;
MPRINT(EM_DIAGRAM):   MEAN = 0.47276587393623;
MPRINT(EM_DIAGRAM):   STD = 0.29107387271152;
MPRINT(EM_DIAGRAM):   SKEWNESS = 0.04386108316857;
MPRINT(EM_DIAGRAM):   KURTOSIS = -1.23210683263637;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
41369      data WORK.TRANSFOR_0WK10B4_STATISTIC;
MPRINT(EM_DIAGRAM):    data WORK.TRANSFOR_0WK10B4_STATISTIC;
41370      set WORK.Trans_TEMP;
MPRINT(EM_DIAGRAM):   set WORK.Trans_TEMP;
41371      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.TRANS_TEMP.
NOTE: The data set WORK.TRANSFOR_0WK10B4_STATISTIC has 9 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
41372      %exploreSample(DATA=EMWS1.EMCODE3_TRAIN, OUTPUT=EMWS1.Trans_SAMPLE_DATA, METADATA=EMWS1.EMCODE3_CMeta_TRAIN, VARS=, METHOD=FIRSTN, SIZE=DEFAULT, ALPHA=0.01, PVALUE=0.01, SEED=12345);
MPRINT(EM_DIAGRAM):
MPRINT(EXPLORESAMPLE):   filename x catalog 'sashelp.emutil.exploreobs.source';
NOTE: %INCLUDE (level 1) file X is file SASHELP.EMUTIL.EXPLOREOBS.SOURCE.
41373     +/*------------------------------------------------------------------
41374     +  MACRO EXPLOREOBS
41375     +
41376     +  SUPPORT:  SASDHD - David Duling
41377     +  PRODUCT:  Enterprise Miner
41378     +
41379     +  DESCRIPTION:
41380     +  Generates maximum and default numbers of observations to
41381     +  download for visualization depending on the record length.
41382     +
41383     +  Values were determined by trial and error using typical
41384     +  Windows workstation configurations.
41385     +
41386     +  Discrete sets of values are returned so that user experience
41387     +  will be consitent with similar sized data sets.
41388     +
41389     +  These macro variables are set:
41390     +  _exploreobs_max -- maximum number of obs downloadable
41391     +  _exploreobs_def -- default number of obs to be downloaded
41392     +  _exploreobs_recl - record length.  Might be useful for reporting.
41393     +
41394     +  Use the _exploreobs_max to set limit the GUI selection of
41395     +  observations for downloading.  The GUI selection for obs
41396     +  could be reduced to "Default" and "Max".
41397     +
41398     +  Parameters
41399     +  data=   libname.memname of input data
41400     +  vars=   subset list of variables.
41401     +          downloading 1 out of 500 really does work like downloading
41402     +          1 out of 1 vars.  Users may select a subset of vars for
41403     +                   visualizations.  Pass in the list as space delimited
41404     +          var names.  If vars is not specified, the record length
41405     +          of the entire data will be used.
41406     +  NBYTES=   maximum number of bytes that shouldn't be exceeded.
41407     +
41408     +  Control
41409     +  Users may control the values by entering these macro variables.
41410     +            EM_EXPLOREOBS_MAX
41411     +            EM_EXPLOREOBS_DEFAULT
41412     +  These values override the computed values.
41413     +
41414     +  Debugging
41415     +  %let _exploreobs_debug=1 ;
41416     +--------------------------------------------------------------------
41417     +  HISTORY: 20APR2004. sasdhd. pushed.
41418     +           18DEC2004. sasdhd. S0280556.
41419     +           07SEP2007. sasdhd. HK1009586
41420     +--------------------------------------------------------------------*/
41421     +
41422     +%macro exploreobs(data=,vars=, nbytes=) ;
41423     +
41424     +   /*--- variable definitions ---*/
41425     +   %global _exploreobs_max _exploreobs_def _exploreobs_recl _exploreobs_debug ;
41426     +   %local xobs xvars xlen vlen xi vname vlist ;
41427     +   %local _exp_source _exp_notes ;
41428     +
41429     +   /*--- USER definitions ---*/
41430     +   %global EM_EXPLOREOBS_MAX EM_EXPLOREOBS_DEFAULT ;
41431     +
41432     +   /*--- variable intializations ---*/
41433     +   %let _exploreobs_max=0 ;
41434     +   %let _exploreobs_def=0 ;
41435     +   %let _exploreobs_recl=0 ;
41436     +   %let xvars= 0 ;
41437     +   %let xlen = 0 ;
41438     +   %let xobs = 0 ;
41439     +
41440     +   /*--- data error checks ---*/
41441     +   %if "&data" eq "" %then %do ;
41442     +            %put NOTE: DATA is not specified. ;
41443     +            %goto term ;
41444     +      %end ;
41445     +
41446     +   %let dsid=%sysfunc(open(&data)) ;
41447     +   %if not &dsid %then %do ;
41448     +            %put NOTE: DATA &data is not available. ;
41449     +            %goto term ;
41450     +      %end ;
41451     +
41452     +   /*--- if a vars list exists generate a subset ---*/
41453     +   %if &vars ne %then %do ;
41454     +         %let dsid=%sysfunc(close(&dsid)) ;
41455     +         %if &_exploreobs_debug ne 1 %then %do ;
41456     +                  %let _exp_source=%sysfunc(getoption(SOURCE)) ;
41457     +            %let _exp_notes =%sysfunc(getoption(NOTES)) ;
41458     +                  options nosource nonotes ;
41459     +         %end ;
41460     +         data _exploreobs_temp_data ;
41461     +         set &data(obs=0) ;
41462     +          keep &vars ;
41463     +         run;
41464     +         %if &_exploreobs_debug ne 1 %then %do ;
41465     +                  options &_exp_source &_exp_notes ;
41466     +         %end ;
41467     +         %let dsid=%sysfunc(open(_exploreobs_temp_data)) ;
41468     +         %if &dsid eq 0 %then %do ;
41469     +                  %put NOTE: Sample is not available.;
41470     +                  %goto term ;
41471     +            %end ;
41472     +      %end ;
41473     +
41474     +   /*--- get var attributes ---*/
41475     +   %let xvars=%sysfunc(attrn(&dsid,nvars)) ;
41476     +   %let xobs= %sysfunc(attrn(&dsid,nobs )) ;
41477     +   %let xlen= %sysfunc(attrn(&dsid,lrecl)) ;
41478     +   %let dsid= %sysfunc(close(&dsid)) ;
41479     +
41480     +   /*--- set default and max obs ---*/
41481     +   %let _exploreobs_recl=%eval(&xlen) ;
41482     +   %if &_exploreobs_recl eq 0 %then %do ;
41483     +             %let _exploreobs_max= 0 ;
41484     +             %let _exploreobs_def= 0 ;
41485     +             %goto term ;
41486     +
41487     +   %end ;
41488     +   %else
41489     +   %if &_exploreobs_recl le 32 %then %do ;
41490     +             %let _exploreobs_max=100000 ;
41491     +             %let _exploreobs_def= 10000 ;
41492     +   %end ;
41493     +   %else
41494     +   %if &_exploreobs_recl le 128 %then %do ;
41495     +             %let _exploreobs_max=60000 ;
41496     +             %let _exploreobs_def= 6000 ;
41497     +   %end ;
41498     +   %else
41499     +   %if &_exploreobs_recl lt 1000 %then %do ;
41500     +             %let _exploreobs_max=20000 ;
41501     +             %let _exploreobs_def= 2000 ;
41502     +   %end ;
41503     +   %else
41504     +   %if &_exploreobs_recl lt 5000 %then %do ;
41505     +             %let _exploreobs_max= 10000 ;
41506     +             %let _exploreobs_def=  1000 ;
41507     +   %end ;
41508     +   %else
41509     +   %if &_exploreobs_recl lt 20000 %then %do ;
41510     +             %let _exploreobs_max= 5000 ;
41511     +             %let _exploreobs_def=  500 ;
41512     +   %end ;
41513     +   %else %do ;
41514     +             %let _exploreobs_max= 1000 ;
41515     +             %let _exploreobs_def=  200 ;
41516     +   %end ;
41517     +
41518     +   /*--- Users options ---*/
41519     +   %if &EM_EXPLOREOBS_MAX ne %then %do ;
41520     +            %let _exploreobs_max= %eval(&EM_EXPLOREOBS_MAX) ;
41521     +   %end;
41522     +   %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
41523     +            %let _exploreobs_def= %eval(&EM_EXPLOREOBS_DEFAULT) ;
41524     +   %end;
41525     +
41526     +    /*--- S0868273 ---*/
41527     +    %if "&NBYTES" ne "" %then %do;
41528     +       %let nbytes_nrows = %eval(&nbytes/ &_exploreobs_recl);
41529     +       %if &EM_EXPLOREOBS_MAX ne %then %do ;
41530     +           %let _exploreobs_max   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_MAX));
41531     +       %end;
41532     +
41533     +       %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
41534     +          %let nbytes_nrows      = %eval(&nbytes_nrows/10);
41535     +          %let _exploreobs_def   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_DEFAULT));
41536     +          %if ^&_exploreobs_def %then
41537     +              %let _exploreobs_def = 1;
41538     +
41539     +       %end;
41540     +    %end;
41541     +
41542     +   /*--- Terminate ---*/
41543     +   %term:
41544     +
41545     +   %put NOTE: EXPLOREOBS &data : vars= &xvars : recl= &_exploreobs_recl : max=&_exploreobs_max : def= &_exploreobs_def ;
41546     +%mend ;
41547     +
41548     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(EXPLORESAMPLE):   filename x;
NOTE: Fileref X has been deassigned.
NOTE: EXPLOREOBS EMWS1.EMCODE3_TRAIN : vars= 46 : recl= 344 : max=20000 : def= 2000
MPRINT(EXPLORESAMPLE):   ;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EXPLORESAMPLE):  ;
*------------------------------------------------------------*
* FirstN/Top sample
*------------------------------------------------------------*
MPRINT(EXPLORESAMPLE):   data EMWS1.Trans_SAMPLE_DATA;
MPRINT(EXPLORESAMPLE):   set EMWS1.EMCODE3_TRAIN(obs= 2000 );
MPRINT(EXPLORESAMPLE):   run;
 
NOTE: There were 2000 observations read from the data set EMWS1.EMCODE3_TRAIN.
NOTE: The data set EMWS1.TRANS_SAMPLE_DATA has 2000 observations and 46 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
41549      proc print data = EMWS1.Trans_RESULT(obs=500) noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Trans_RESULT(obs=500) noobs label;
41550      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_computedtransformations_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Computed Transformations";
41551      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   var INPUTNAME ROLE INPUTLEVEL NAME LEVEL FORMULA;
MPRINT(EM_DIAGRAM):   run;
41552      var INPUTNAME ROLE INPUTLEVEL NAME LEVEL FORMULA;
41553      run;
 
NOTE: There were 9 observations read from the data set EMWS1.TRANS_RESULT.
NOTE: The PROCEDURE PRINT printed page 7.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
41554      title9;
MPRINT(EM_DIAGRAM):   title9;
41555      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:18:51 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                17:18:51 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0HT7Q9L "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Trans\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0HT7Q9L new;
MPRINT(EM_DIAGRAM):   run;
41657      proc sort data=EMWS1.Trans_RESULT out=WORK.TransRESULT NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Trans_RESULT out=WORK.TransRESULT NOTHREADS;
41658      by INPUTNAME;
MPRINT(EM_DIAGRAM):   by INPUTNAME;
41659      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.TRANS_RESULT.
NOTE: The data set WORK.TRANSRESULT has 9 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
41660      proc sort data=EMWS1.Trans_VariableSet(KEEP= NAME FAMILY REPORT rename=(NAME=INPUTNAME)) out=WORK.TransVARSET NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Trans_VariableSet(KEEP= NAME FAMILY REPORT rename=(NAME=INPUTNAME)) out=WORK.TransVARSET NOTHREADS;
41661      by INPUTNAME;
MPRINT(EM_DIAGRAM):   by INPUTNAME;
41662      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set EMWS1.TRANS_VARIABLESET.
NOTE: The data set WORK.TRANSVARSET has 41 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
41663      data WORK.TransRESULT;
MPRINT(EM_DIAGRAM):   data WORK.TransRESULT;
41664      merge WORK.TransRESULT WORK.TransVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.TransRESULT WORK.TransVARSET;
41665      by INPUTNAME;
MPRINT(EM_DIAGRAM):   by INPUTNAME;
41666      if NAME ne '' then output;
MPRINT(EM_DIAGRAM):   if NAME ne '' then output;
41667      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable INPUTNAME by input data sets. This might cause unexpected results.
NOTE: There were 9 observations read from the data set WORK.TRANSRESULT.
NOTE: There were 41 observations read from the data set WORK.TRANSVARSET.
NOTE: The data set WORK.TRANSRESULT has 9 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
41668      filename _code "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Trans\TRAINDELTACODE.sas";
MPRINT(EM_DIAGRAM):   filename _code "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Trans\TRAINDELTACODE.sas";
41669      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
41670      set WORK.TransRESULT;
MPRINT(EM_DIAGRAM):   set WORK.TransRESULT;
41671      length String $200;
MPRINT(EM_DIAGRAM):   length String $200;
41672      file _code;
MPRINT(EM_DIAGRAM):   file _code;
41673      String = 'if NAME="'!!strip(name)!!'" then do;';
MPRINT(EM_DIAGRAM):   String = 'if NAME="'!!strip(name)!!'" then do;';
41674      put / String;
MPRINT(EM_DIAGRAM):   put / String;
41675      if family ne '' then do;
MPRINT(EM_DIAGRAM):   if family ne '' then do;
41676      String = '   FAMILY ="'!!strip(family)!!'";';
MPRINT(EM_DIAGRAM):   String = '   FAMILY ="'!!strip(family)!!'";';
41677      put String;
MPRINT(EM_DIAGRAM):   put String;
41678      end;
MPRINT(EM_DIAGRAM):   end;
41679      select(formula);
MPRINT(EM_DIAGRAM):   select(formula);
41680      when('Interaction') put '   FAMILY  ="INTERACTION";';
MPRINT(EM_DIAGRAM):   when('Interaction') put '   FAMILY  ="INTERACTION";';
41681      when('') put '   COMMENT = "' method 'transformation of ' INPUTVAR '";';
MPRINT(EM_DIAGRAM):   when('') put '   COMMENT = "' method 'transformation of ' INPUTVAR '";';
41682      otherwise put '   COMMENT = "' formula '";';
MPRINT(EM_DIAGRAM):   otherwise put '   COMMENT = "' formula '";';
41683      end;
MPRINT(EM_DIAGRAM):   end;
41684      String = '   ROLE ="'!!strip(role)!!'";';
MPRINT(EM_DIAGRAM):   String = '   ROLE ="'!!strip(role)!!'";';
41685      put String;
MPRINT(EM_DIAGRAM):   put String;
41686      if REPORT="" then REPORT = "N";
MPRINT(EM_DIAGRAM):   if REPORT="" then REPORT = "N";
41687      String = '   REPORT ="'!!strip(report)!!'";';
MPRINT(EM_DIAGRAM):   String = '   REPORT ="'!!strip(report)!!'";';
41688      put String;
MPRINT(EM_DIAGRAM):   put String;
41689      String = '   LEVEL  ="'!!strip(level)!!'";';
MPRINT(EM_DIAGRAM):   String = '   LEVEL  ="'!!strip(level)!!'";';
41690      put String;
MPRINT(EM_DIAGRAM):   put String;
41691      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
41692      if formula ne 'Interaction' and INPUTNAME ne '' then do;
MPRINT(EM_DIAGRAM):   if formula ne 'Interaction' and INPUTNAME ne '' then do;
41693      String = 'if NAME="'!!strip(INPUTNAME)!!'" then do;';
MPRINT(EM_DIAGRAM):   String = 'if NAME="'!!strip(INPUTNAME)!!'" then do;';
41694      put String;
MPRINT(EM_DIAGRAM):   put String;
41695      String = '   ROLE    = "REJECTED";';
MPRINT(EM_DIAGRAM):   String = '   ROLE    = "REJECTED";';
41696      put String;
MPRINT(EM_DIAGRAM):   put String;
41697      String = '   COMMENT = "Transformed by'!!"Trans"!!'";';
MPRINT(EM_DIAGRAM):   String = '   COMMENT = "Transformed by'!!"Trans"!!'";';
41698      put String;
MPRINT(EM_DIAGRAM):   put String;
41699      String = 'end;';
MPRINT(EM_DIAGRAM):   String = 'end;';
41700      put String;
MPRINT(EM_DIAGRAM):   put String;
41701      end;
MPRINT(EM_DIAGRAM):   end;
41702      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable method is uninitialized.
NOTE: Variable INPUTVAR is uninitialized.
NOTE: The file _CODE is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Trans\TRAINDELTACODE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=02 June 2018 17:18:51 o'clock,
      Create Time=22 April 2018 21:32:41 o'clock
 
NOTE: 99 records were written to the file _CODE.
      The minimum record length was 0.
      The maximum record length was 62.
NOTE: There were 9 observations read from the data set WORK.TRANSRESULT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
41703      filename _code;
MPRINT(EM_DIAGRAM):   filename _code;
NOTE: Fileref _CODE has been deassigned.
41704      proc print data = EMWS1.Trans_FORMULA(obs=500) noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Trans_FORMULA(obs=500) noobs label;
41705      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_formulatransformations_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Formula Transformations";
41706      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   var Name ROLE LEVEL FORMULA;
MPRINT(EM_DIAGRAM):   run;
41707      var Name ROLE LEVEL FORMULA;
41708      run;
 
NOTE: No observations in data set EMWS1.TRANS_FORMULA.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
41709      title9;
MPRINT(EM_DIAGRAM):   title9;
41710      title10;
MPRINT(EM_DIAGRAM):   title10;
41711      filename emflow "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Trans\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Trans\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Trans: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41712      *------------------------------------------------------------*;
41713      * Trans: Scoring DATA data;
41714      *------------------------------------------------------------*;
41715      data EMWS1.Trans_TRAIN
41716      / view=EMWS1.Trans_TRAIN
41717      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Trans_TRAIN / view=EMWS1.Trans_TRAIN ;
41718      set EMWS1.EMCODE3_TRAIN
41719      ;
MPRINT(EM_DIAGRAM):   set EMWS1.EMCODE3_TRAIN ;
41720      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Trans\EMFLOWSCORE.sas.
41721     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41722     +* Computed Code;
MPRINT(EM_DIAGRAM):   * Computed Code;
41723     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41724     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41725     +* TRANSFORM: Frq , (Frq - 10) / (40-10);
MPRINT(EM_DIAGRAM):   * TRANSFORM: Frq , (Frq - 10) / (40-10);
41726     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41727     +label RANGE_Frq = 'Transformed Frq';
MPRINT(EM_DIAGRAM):   label RANGE_Frq = 'Transformed Frq';
41728     +length RANGE_Frq 8;
MPRINT(EM_DIAGRAM):   length RANGE_Frq 8;
41729     +if Frq eq . then RANGE_Frq = .;
MPRINT(EM_DIAGRAM):   if Frq eq . then RANGE_Frq = .;
41730     +else RANGE_Frq = (Frq - 10) / (40-10);
MPRINT(EM_DIAGRAM):   else RANGE_Frq = (Frq - 10) / (40-10);
41731     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41732     +* TRANSFORM: IMP_Income , (IMP_Income - 9000) / (123230-9000);
MPRINT(EM_DIAGRAM):   * TRANSFORM: IMP_Income , (IMP_Income - 9000) / (123230-9000);
41733     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41734     +label RANGE_IMP_Income = 'Transformed: Imputed: Income';
MPRINT(EM_DIAGRAM):   label RANGE_IMP_Income = 'Transformed: Imputed: Income';
41735     +length RANGE_IMP_Income 8;
MPRINT(EM_DIAGRAM):   length RANGE_IMP_Income 8;
41736     +if IMP_Income eq . then RANGE_IMP_Income = .;
MPRINT(EM_DIAGRAM):   if IMP_Income eq . then RANGE_IMP_Income = .;
41737     +else RANGE_IMP_Income = (IMP_Income - 9000) / (123230-9000);
MPRINT(EM_DIAGRAM):   else RANGE_IMP_Income = (IMP_Income - 9000) / (123230-9000);
41738     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41739     +* TRANSFORM: Mnt , (Mnt - 9) / (3260-9);
MPRINT(EM_DIAGRAM):   * TRANSFORM: Mnt , (Mnt - 9) / (3260-9);
41740     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41741     +label RANGE_Mnt = 'Transformed Mnt';
MPRINT(EM_DIAGRAM):   label RANGE_Mnt = 'Transformed Mnt';
41742     +length RANGE_Mnt 8;
MPRINT(EM_DIAGRAM):   length RANGE_Mnt 8;
41743     +if Mnt eq . then RANGE_Mnt = .;
MPRINT(EM_DIAGRAM):   if Mnt eq . then RANGE_Mnt = .;
41744     +else RANGE_Mnt = (Mnt - 9) / (3260-9);
MPRINT(EM_DIAGRAM):   else RANGE_Mnt = (Mnt - 9) / (3260-9);
41745     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41746     +* TRANSFORM: NumWebVisitsMonth , (NumWebVisitsMonth - 4) / (15-4);
MPRINT(EM_DIAGRAM):   * TRANSFORM: NumWebVisitsMonth , (NumWebVisitsMonth - 4) / (15-4);
41747     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41748     +label RANGE_NumWebVisitsMonth = 'Transformed: NumWebVisitsMonth';
MPRINT(EM_DIAGRAM):   label RANGE_NumWebVisitsMonth = 'Transformed: NumWebVisitsMonth';
41749     +length RANGE_NumWebVisitsMonth 8;
MPRINT(EM_DIAGRAM):   length RANGE_NumWebVisitsMonth 8;
41750     +if NumWebVisitsMonth eq . then RANGE_NumWebVisitsMonth = .;
MPRINT(EM_DIAGRAM):   if NumWebVisitsMonth eq . then RANGE_NumWebVisitsMonth = .;
41751     +else RANGE_NumWebVisitsMonth = (NumWebVisitsMonth - 4) / (15-4);
MPRINT(EM_DIAGRAM):   else RANGE_NumWebVisitsMonth = (NumWebVisitsMonth - 4) / (15-4);
41752     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41753     +* TRANSFORM: Recency , (Recency - 0) / (99-0);
MPRINT(EM_DIAGRAM):   * TRANSFORM: Recency , (Recency - 0) / (99-0);
41754     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41755     +label RANGE_Recency = 'Transformed: Recency';
MPRINT(EM_DIAGRAM):   label RANGE_Recency = 'Transformed: Recency';
41756     +length RANGE_Recency 8;
MPRINT(EM_DIAGRAM):   length RANGE_Recency 8;
41757     +if Recency eq . then RANGE_Recency = .;
MPRINT(EM_DIAGRAM):   if Recency eq . then RANGE_Recency = .;
41758     +else RANGE_Recency = (Recency - 0) / (99-0);
MPRINT(EM_DIAGRAM):   else RANGE_Recency = (Recency - 0) / (99-0);
41759     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41760     +* TRANSFORM: age , (age - 19) / (74-19);
MPRINT(EM_DIAGRAM):   * TRANSFORM: age , (age - 19) / (74-19);
41761     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41762     +label RANGE_age = 'Transformed age';
MPRINT(EM_DIAGRAM):   label RANGE_age = 'Transformed age';
41763     +length RANGE_age 8;
MPRINT(EM_DIAGRAM):   length RANGE_age 8;
41764     +if age eq . then RANGE_age = .;
MPRINT(EM_DIAGRAM):   if age eq . then RANGE_age = .;
41765     +else RANGE_age = (age - 19) / (74-19);
MPRINT(EM_DIAGRAM):   else RANGE_age = (age - 19) / (74-19);
41766     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41767     +* TRANSFORM: average_purchase , (average_purchase - 0.9) / (139.66666667-0.9);
MPRINT(EM_DIAGRAM):   * TRANSFORM: average_purchase , (average_purchase - 0.9) / (139.66666667-0.9);
41768     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41769     +label RANGE_average_purchase = 'Transformed average_purchase';
MPRINT(EM_DIAGRAM):   label RANGE_average_purchase = 'Transformed average_purchase';
41770     +length RANGE_average_purchase 8;
MPRINT(EM_DIAGRAM):   length RANGE_average_purchase 8;
41771     +if average_purchase eq . then RANGE_average_purchase = .;
MPRINT(EM_DIAGRAM):   if average_purchase eq . then RANGE_average_purchase = .;
41772     +else RANGE_average_purchase = (average_purchase - 0.9) / (139.66666667-0.9);
MPRINT(EM_DIAGRAM):   else RANGE_average_purchase = (average_purchase - 0.9) / (139.66666667-0.9);
41773     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41774     +* TRANSFORM: campaign_acceptance , (campaign_acceptance - 0) / (4-0);
MPRINT(EM_DIAGRAM):   * TRANSFORM: campaign_acceptance , (campaign_acceptance - 0) / (4-0);
41775     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41776     +label RANGE_campaign_acceptance = 'Transformed campaign_acceptance';
MPRINT(EM_DIAGRAM):   label RANGE_campaign_acceptance = 'Transformed campaign_acceptance';
41777     +length RANGE_campaign_acceptance 8;
MPRINT(EM_DIAGRAM):   length RANGE_campaign_acceptance 8;
41778     +if campaign_acceptance eq . then RANGE_campaign_acceptance = .;
MPRINT(EM_DIAGRAM):   if campaign_acceptance eq . then RANGE_campaign_acceptance = .;
41779     +else RANGE_campaign_acceptance = (campaign_acceptance - 0) / (4-0);
MPRINT(EM_DIAGRAM):   else RANGE_campaign_acceptance = (campaign_acceptance - 0) / (4-0);
41780     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41781     +* TRANSFORM: loyalty , (loyalty - 24) / (47-24);
MPRINT(EM_DIAGRAM):   * TRANSFORM: loyalty , (loyalty - 24) / (47-24);
41782     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41783     +label RANGE_loyalty = 'Transformed loyalty';
MPRINT(EM_DIAGRAM):   label RANGE_loyalty = 'Transformed loyalty';
41784     +length RANGE_loyalty 8;
MPRINT(EM_DIAGRAM):   length RANGE_loyalty 8;
41785     +if loyalty eq . then RANGE_loyalty = .;
MPRINT(EM_DIAGRAM):   if loyalty eq . then RANGE_loyalty = .;
41786     +else RANGE_loyalty = (loyalty - 24) / (47-24);
MPRINT(EM_DIAGRAM):   else RANGE_loyalty = (loyalty - 24) / (47-24);
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
41787      run;
 
NOTE: DATA STEP view saved on file EMWS1.TRANS_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
41788      quit;
41789      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
41790      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
41791      * Trans: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Trans: Computing metadata for TRAIN data;
41792      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Trans\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Trans_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Trans_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Trans_TRAIN out=WORK.M150IGG8 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M150IGG8;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M150IGG8(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M150IGG8;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M150IGG8;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M15_6NJL NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M15_6NJL;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M15_6NJL;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M19YGXL_(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M15_6NJL;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M15_6NJL;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M15_6NJL;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M15_6NJL;
MPRINT(EMADVISECOLUMNS):   set WORK.M15_6NJL;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.EMCODE3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EMCODE3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Trans_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Trans";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Trans: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Computed Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME="RANGE_Frq" then do;
MPRINT(EM_DIAGRAM):   COMMENT = "(Frq - 10) / (40-10) ";
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   REPORT ="N";
MPRINT(EM_DIAGRAM):   LEVEL ="INTERVAL";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME="Frq" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   COMMENT = "Transformed byTrans";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME="RANGE_IMP_Income" then do;
MPRINT(EM_DIAGRAM):   COMMENT = "(IMP_Income - 9000) / (123230-9000) ";
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   REPORT ="N";
MPRINT(EM_DIAGRAM):   LEVEL ="INTERVAL";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME="IMP_Income" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   COMMENT = "Transformed byTrans";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME="RANGE_Mnt" then do;
MPRINT(EM_DIAGRAM):   COMMENT = "(Mnt - 9) / (3260-9) ";
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   REPORT ="N";
MPRINT(EM_DIAGRAM):   LEVEL ="INTERVAL";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME="Mnt" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   COMMENT = "Transformed byTrans";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME="RANGE_NumWebVisitsMonth" then do;
MPRINT(EM_DIAGRAM):   COMMENT = "(NumWebVisitsMonth - 4) / (15-4) ";
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   REPORT ="N";
MPRINT(EM_DIAGRAM):   LEVEL ="INTERVAL";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME="NumWebVisitsMonth" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   COMMENT = "Transformed byTrans";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME="RANGE_Recency" then do;
MPRINT(EM_DIAGRAM):   COMMENT = "(Recency - 0) / (99-0) ";
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   REPORT ="N";
MPRINT(EM_DIAGRAM):   LEVEL ="INTERVAL";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME="Recency" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   COMMENT = "Transformed byTrans";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME="RANGE_age" then do;
MPRINT(EM_DIAGRAM):   COMMENT = "(age - 19) / (74-19) ";
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   REPORT ="N";
MPRINT(EM_DIAGRAM):   LEVEL ="INTERVAL";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME="age" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   COMMENT = "Transformed byTrans";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME="RANGE_average_purchase" then do;
MPRINT(EM_DIAGRAM):   COMMENT = "(average_purchase - 0.9) / (139.66666667-0.9) ";
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   REPORT ="N";
MPRINT(EM_DIAGRAM):   LEVEL ="INTERVAL";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME="average_purchase" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   COMMENT = "Transformed byTrans";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME="RANGE_campaign_acceptance" then do;
MPRINT(EM_DIAGRAM):   COMMENT = "(campaign_acceptance - 0) / (4-0) ";
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   REPORT ="N";
MPRINT(EM_DIAGRAM):   LEVEL ="INTERVAL";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME="campaign_acceptance" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   COMMENT = "Transformed byTrans";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME="RANGE_loyalty" then do;
MPRINT(EM_DIAGRAM):   COMMENT = "(loyalty - 24) / (47-24) ";
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   REPORT ="N";
MPRINT(EM_DIAGRAM):   LEVEL ="INTERVAL";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME="loyalty" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   COMMENT = "Transformed byTrans";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:18:52 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                02 June 2018
Time:                17:18:52 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O288OABD "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Trans\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O288OABD new;
MPRINT(EM_DIAGRAM):   run;
42255      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
42256      * &msgString;
MPRINT(EM_DIAGRAM):   * &msgString;
42257      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42258      filename _flowref "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Trans\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   filename _flowref "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Trans\EMFLOWSCORE.sas";
42259      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=WORK.TRANS_SCOREINPUTS;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=WORK.TRANS_SCOREINPUTS;
42260      %INCLUDE _flowref;
NOTE: %INCLUDE (level 1) file _FLOWREF is file C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Trans\EMFLOWSCORE.sas.
42261     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42262     +* Computed Code;
MPRINT(EM_DIAGRAM):   * Computed Code;
42263     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42264     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42265     +* TRANSFORM: Frq , (Frq - 10) / (40-10);
MPRINT(EM_DIAGRAM):   * TRANSFORM: Frq , (Frq - 10) / (40-10);
42266     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42267     +label RANGE_Frq = 'Transformed Frq';
MPRINT(EM_DIAGRAM):   label RANGE_Frq = 'Transformed Frq';
42268     +length RANGE_Frq 8;
MPRINT(EM_DIAGRAM):   length RANGE_Frq 8;
42269     +if Frq eq . then RANGE_Frq = .;
MPRINT(EM_DIAGRAM):   if Frq eq . then RANGE_Frq = .;
42270     +else RANGE_Frq = (Frq - 10) / (40-10);
MPRINT(EM_DIAGRAM):   else RANGE_Frq = (Frq - 10) / (40-10);
42271     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42272     +* TRANSFORM: IMP_Income , (IMP_Income - 9000) / (123230-9000);
MPRINT(EM_DIAGRAM):   * TRANSFORM: IMP_Income , (IMP_Income - 9000) / (123230-9000);
42273     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42274     +label RANGE_IMP_Income = 'Transformed: Imputed: Income';
MPRINT(EM_DIAGRAM):   label RANGE_IMP_Income = 'Transformed: Imputed: Income';
42275     +length RANGE_IMP_Income 8;
MPRINT(EM_DIAGRAM):   length RANGE_IMP_Income 8;
42276     +if IMP_Income eq . then RANGE_IMP_Income = .;
MPRINT(EM_DIAGRAM):   if IMP_Income eq . then RANGE_IMP_Income = .;
42277     +else RANGE_IMP_Income = (IMP_Income - 9000) / (123230-9000);
MPRINT(EM_DIAGRAM):   else RANGE_IMP_Income = (IMP_Income - 9000) / (123230-9000);
42278     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42279     +* TRANSFORM: Mnt , (Mnt - 9) / (3260-9);
MPRINT(EM_DIAGRAM):   * TRANSFORM: Mnt , (Mnt - 9) / (3260-9);
42280     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42281     +label RANGE_Mnt = 'Transformed Mnt';
MPRINT(EM_DIAGRAM):   label RANGE_Mnt = 'Transformed Mnt';
42282     +length RANGE_Mnt 8;
MPRINT(EM_DIAGRAM):   length RANGE_Mnt 8;
42283     +if Mnt eq . then RANGE_Mnt = .;
MPRINT(EM_DIAGRAM):   if Mnt eq . then RANGE_Mnt = .;
42284     +else RANGE_Mnt = (Mnt - 9) / (3260-9);
MPRINT(EM_DIAGRAM):   else RANGE_Mnt = (Mnt - 9) / (3260-9);
42285     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42286     +* TRANSFORM: NumWebVisitsMonth , (NumWebVisitsMonth - 4) / (15-4);
MPRINT(EM_DIAGRAM):   * TRANSFORM: NumWebVisitsMonth , (NumWebVisitsMonth - 4) / (15-4);
42287     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42288     +label RANGE_NumWebVisitsMonth = 'Transformed: NumWebVisitsMonth';
MPRINT(EM_DIAGRAM):   label RANGE_NumWebVisitsMonth = 'Transformed: NumWebVisitsMonth';
42289     +length RANGE_NumWebVisitsMonth 8;
MPRINT(EM_DIAGRAM):   length RANGE_NumWebVisitsMonth 8;
42290     +if NumWebVisitsMonth eq . then RANGE_NumWebVisitsMonth = .;
MPRINT(EM_DIAGRAM):   if NumWebVisitsMonth eq . then RANGE_NumWebVisitsMonth = .;
42291     +else RANGE_NumWebVisitsMonth = (NumWebVisitsMonth - 4) / (15-4);
MPRINT(EM_DIAGRAM):   else RANGE_NumWebVisitsMonth = (NumWebVisitsMonth - 4) / (15-4);
42292     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42293     +* TRANSFORM: Recency , (Recency - 0) / (99-0);
MPRINT(EM_DIAGRAM):   * TRANSFORM: Recency , (Recency - 0) / (99-0);
42294     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42295     +label RANGE_Recency = 'Transformed: Recency';
MPRINT(EM_DIAGRAM):   label RANGE_Recency = 'Transformed: Recency';
42296     +length RANGE_Recency 8;
MPRINT(EM_DIAGRAM):   length RANGE_Recency 8;
42297     +if Recency eq . then RANGE_Recency = .;
MPRINT(EM_DIAGRAM):   if Recency eq . then RANGE_Recency = .;
42298     +else RANGE_Recency = (Recency - 0) / (99-0);
MPRINT(EM_DIAGRAM):   else RANGE_Recency = (Recency - 0) / (99-0);
42299     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42300     +* TRANSFORM: age , (age - 19) / (74-19);
MPRINT(EM_DIAGRAM):   * TRANSFORM: age , (age - 19) / (74-19);
42301     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42302     +label RANGE_age = 'Transformed age';
MPRINT(EM_DIAGRAM):   label RANGE_age = 'Transformed age';
42303     +length RANGE_age 8;
MPRINT(EM_DIAGRAM):   length RANGE_age 8;
42304     +if age eq . then RANGE_age = .;
MPRINT(EM_DIAGRAM):   if age eq . then RANGE_age = .;
42305     +else RANGE_age = (age - 19) / (74-19);
MPRINT(EM_DIAGRAM):   else RANGE_age = (age - 19) / (74-19);
42306     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42307     +* TRANSFORM: average_purchase , (average_purchase - 0.9) / (139.66666667-0.9);
MPRINT(EM_DIAGRAM):   * TRANSFORM: average_purchase , (average_purchase - 0.9) / (139.66666667-0.9);
42308     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42309     +label RANGE_average_purchase = 'Transformed average_purchase';
MPRINT(EM_DIAGRAM):   label RANGE_average_purchase = 'Transformed average_purchase';
42310     +length RANGE_average_purchase 8;
MPRINT(EM_DIAGRAM):   length RANGE_average_purchase 8;
42311     +if average_purchase eq . then RANGE_average_purchase = .;
MPRINT(EM_DIAGRAM):   if average_purchase eq . then RANGE_average_purchase = .;
42312     +else RANGE_average_purchase = (average_purchase - 0.9) / (139.66666667-0.9);
MPRINT(EM_DIAGRAM):   else RANGE_average_purchase = (average_purchase - 0.9) / (139.66666667-0.9);
42313     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42314     +* TRANSFORM: campaign_acceptance , (campaign_acceptance - 0) / (4-0);
MPRINT(EM_DIAGRAM):   * TRANSFORM: campaign_acceptance , (campaign_acceptance - 0) / (4-0);
42315     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42316     +label RANGE_campaign_acceptance = 'Transformed campaign_acceptance';
MPRINT(EM_DIAGRAM):   label RANGE_campaign_acceptance = 'Transformed campaign_acceptance';
42317     +length RANGE_campaign_acceptance 8;
MPRINT(EM_DIAGRAM):   length RANGE_campaign_acceptance 8;
42318     +if campaign_acceptance eq . then RANGE_campaign_acceptance = .;
MPRINT(EM_DIAGRAM):   if campaign_acceptance eq . then RANGE_campaign_acceptance = .;
42319     +else RANGE_campaign_acceptance = (campaign_acceptance - 0) / (4-0);
MPRINT(EM_DIAGRAM):   else RANGE_campaign_acceptance = (campaign_acceptance - 0) / (4-0);
42320     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42321     +* TRANSFORM: loyalty , (loyalty - 24) / (47-24);
MPRINT(EM_DIAGRAM):   * TRANSFORM: loyalty , (loyalty - 24) / (47-24);
42322     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42323     +label RANGE_loyalty = 'Transformed loyalty';
MPRINT(EM_DIAGRAM):   label RANGE_loyalty = 'Transformed loyalty';
42324     +length RANGE_loyalty 8;
MPRINT(EM_DIAGRAM):   length RANGE_loyalty 8;
42325     +if loyalty eq . then RANGE_loyalty = .;
MPRINT(EM_DIAGRAM):   if loyalty eq . then RANGE_loyalty = .;
42326     +else RANGE_loyalty = (loyalty - 24) / (47-24);
MPRINT(EM_DIAGRAM):   else RANGE_loyalty = (loyalty - 24) / (47-24);
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
42327      run;
 
NOTE: Dependency structure written to data set WORK.TRANS_SCOREINPUTS.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
42328      quit;
42329      data WORK.TRANS_SCOREINPUTS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_SCOREINPUTS;
42330      set WORK.TRANS_SCOREINPUTS(keep=RHS rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   set WORK.TRANS_SCOREINPUTS(keep=RHS rename=(RHS=NAME));
42331      length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
42332      UNAME = upcase(NAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(NAME);
42333      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.TRANS_SCOREINPUTS.
NOTE: The data set WORK.TRANS_SCOREINPUTS has 9 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
42334      proc sort data=WORK.TRANS_SCOREINPUTS NODUPKEY;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_SCOREINPUTS NODUPKEY;
42335      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
42336      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.TRANS_SCOREINPUTS.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK.TRANS_SCOREINPUTS has 9 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
42337      filename _flowref;
MPRINT(EM_DIAGRAM):   filename _flowref;
NOTE: Fileref _FLOWREF has been deassigned.
42338      %let SYSCC = 0;
42339      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
42340      * transformcombinevariables;
MPRINT(EM_DIAGRAM):   * transformcombinevariables;
42341      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42342      data WORK.TRANS_OUTPUTVARS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_OUTPUTVARS;
42343      length Uname inputName $32 inputLevel $10 inputType $1 _MetaFlag 8;
MPRINT(EM_DIAGRAM):   length Uname inputName $32 inputLevel $10 inputType $1 _MetaFlag 8;
42344      set
42345      EMWS1.Trans_RESULT
42346      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_RESULT ;
42347      _MetaFlag=0;
MPRINT(EM_DIAGRAM):   _MetaFlag=0;
42348      uname = upcase(name);
MPRINT(EM_DIAGRAM):   uname = upcase(name);
42349      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.TRANS_RESULT.
NOTE: The data set WORK.TRANS_OUTPUTVARS has 9 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
42350      data _temp;
MPRINT(EM_DIAGRAM):    data _temp;
42351      length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
42352      set EMWS1.Trans_CMeta_TRAIN(keep=NAME LEVEL ROLE TYPE CREATOR LABEL);
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_CMeta_TRAIN(keep=NAME LEVEL ROLE TYPE CREATOR LABEL);
42353      UNAME = upcase(name);
MPRINT(EM_DIAGRAM):   UNAME = upcase(name);
42354      where upcase(CREATOR) = upcase("Trans");
MPRINT(EM_DIAGRAM):   where upcase(CREATOR) = upcase("Trans");
42355      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.TRANS_CMETA_TRAIN.
      WHERE UPCASE(CREATOR)='TRANS';
NOTE: The data set WORK._TEMP has 9 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
42356      proc sort data=_temp(drop=CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=_temp(drop=CREATOR);
42357      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
42358      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 9 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
42359      proc sort data=WORK.TRANS_OUTPUTVARS;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.TRANS_OUTPUTVARS;
42360      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
42361      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.TRANS_OUTPUTVARS.
NOTE: The data set WORK.TRANS_OUTPUTVARS has 9 observations and 13 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
42362      data WORK.TRANS_OUTPUTVARS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_OUTPUTVARS;
42363      merge WORK.TRANS_OUTPUTVARS _temp;
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_OUTPUTVARS _temp;
42364      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
42365      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.TRANS_OUTPUTVARS.
NOTE: There were 9 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_OUTPUTVARS has 9 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
42366      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
42367      * Trans: Get Metadata for the Score Inputs Variables;
MPRINT(EM_DIAGRAM):   * Trans: Get Metadata for the Score Inputs Variables;
42368      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42369      data _temp;
MPRINT(EM_DIAGRAM):   data _temp;
42370      length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
42371      set EMWS1.Trans_VariableSet(keep=NAME LEVEL TYPE LABEL);
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_VariableSet(keep=NAME LEVEL TYPE LABEL);
42372      UNAME = upcase(name);
MPRINT(EM_DIAGRAM):   UNAME = upcase(name);
42373      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set EMWS1.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP has 41 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
42374      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
42375      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
42376      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 41 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
42377      data WORK.TRANS_SCOREINPUTS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_SCOREINPUTS;
42378      merge WORK.TRANS_SCOREINPUTS(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_SCOREINPUTS(in=_a) _temp(in=_b);
42379      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
42380      if _a and _b then output;
MPRINT(EM_DIAGRAM):   if _a and _b then output;
42381      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.TRANS_SCOREINPUTS.
NOTE: There were 41 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_SCOREINPUTS has 9 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
42382      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
42383      * Trans: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   * Trans: Computing Summary Statistics;
42384      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42385      proc dmdb data=EMWS1.Trans_TRAIN classout=WORK.TRANS_CLASSSTATS varout=WORK.TRANS_VARSTATS;
MPRINT(EM_DIAGRAM):   proc dmdb data=EMWS1.Trans_TRAIN classout=WORK.TRANS_CLASSSTATS varout=WORK.TRANS_VARSTATS;
42386      ;
MPRINT(EM_DIAGRAM):   ;
42387      var
42388      age
42389      average_purchase
42390      campaign_acceptance
42391      Frq
42392      IMP_Income
42393      loyalty
42394      Mnt
42395      NumWebVisitsMonth
42396      Recency
42397      RANGE_age
42398      RANGE_average_purchase
42399      RANGE_campaign_acceptance
42400      RANGE_Frq
42401      RANGE_IMP_Income
42402      RANGE_loyalty
42403      RANGE_Mnt
42404      RANGE_NumWebVisitsMonth
42405      RANGE_Recency
42406      ;
MPRINT(EM_DIAGRAM):   var age average_purchase campaign_acceptance Frq IMP_Income loyalty Mnt NumWebVisitsMonth Recency RANGE_age RANGE_average_purchase RANGE_campaign_acceptance RANGE_Frq RANGE_IMP_Income RANGE_loyalty RANGE_Mnt RANGE_NumWebVisitsMonth
RANGE_Recency ;
42407      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2437   Memory used = 511K.
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: There were 2437 observations read from the data set EMWS1.EMCODE3_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: The data set WORK.TRANS_VARSTATS has 18 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
42408      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
42409      * Trans: Combine Information and Statistics for Class Variables;
MPRINT(EM_DIAGRAM):   * Trans: Combine Information and Statistics for Class Variables;
42410      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42411      proc sort data=WORK.TRANS_OUTPUTVARS out=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_OUTPUTVARS out=_temp;
42412      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
42413      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.TRANS_OUTPUTVARS.
NOTE: The data set WORK._TEMP has 9 observations and 13 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
42414      proc sort data=WORK.TRANS_CLASSSTATS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_CLASSSTATS;
42415      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
42416      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK.TRANS_CLASSSTATS has 0 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
42417      data WORK.TRANS_CLASSSTATS(keep=name nlevel nmiss);
MPRINT(EM_DIAGRAM):   data WORK.TRANS_CLASSSTATS(keep=name nlevel nmiss);
42418      retain nlevel nmiss;
MPRINT(EM_DIAGRAM):   retain nlevel nmiss;
42419      set WORK.TRANS_CLASSSTATS;
MPRINT(EM_DIAGRAM):   set WORK.TRANS_CLASSSTATS;
42420      by Name;
MPRINT(EM_DIAGRAM):   by Name;
42421      if first.Name then do;
MPRINT(EM_DIAGRAM):   if first.Name then do;
42422      nlevel= 0;
MPRINT(EM_DIAGRAM):   nlevel= 0;
42423      nmiss= 0;
MPRINT(EM_DIAGRAM):   nmiss= 0;
42424      end;
MPRINT(EM_DIAGRAM):   end;
42425      if (type='C' and CRAW='') or (type='N' and NRAW=.) then nmiss = FREQUENCY;
MPRINT(EM_DIAGRAM):   if (type='C' and CRAW='') or (type='N' and NRAW=.) then nmiss = FREQUENCY;
42426      else nlevel + 1;
MPRINT(EM_DIAGRAM):   else nlevel + 1;
42427      if last.name then output;
MPRINT(EM_DIAGRAM):   if last.name then output;
42428      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK.TRANS_CLASSSTATS.
NOTE: The data set WORK.TRANS_CLASSSTATS has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
42429      /*Merge Statistics for Class Output Vars */
42430      data WORK.TRANS_CLASSSTATS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_CLASSSTATS;
42431      length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
MPRINT(EM_DIAGRAM):   length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
42432      merge WORK.TRANS_CLASSSTATS(in=_a) _temp(in=_b keep=NAME InputName Formula _MetaFlag LEVEL TYPE LABEL);
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_CLASSSTATS(in=_a) _temp(in=_b keep=NAME InputName Formula _MetaFlag LEVEL TYPE LABEL);
42433      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
42434      if _a and _b then do;
MPRINT(EM_DIAGRAM):   if _a and _b then do;
42435      SOURCE='Output';
MPRINT(EM_DIAGRAM):   SOURCE='Output';
42436      if _MetaFlag = 1 then _METHOD_="Meta";
MPRINT(EM_DIAGRAM):   if _MetaFlag = 1 then _METHOD_="Meta";
42437      else if Formula eq 'Interaction' then _METHOD_="Computed";
MPRINT(EM_DIAGRAM):   else if Formula eq 'Interaction' then _METHOD_="Computed";
42438      else if inputName eq '' then _METHOD_="Formula";
MPRINT(EM_DIAGRAM):   else if inputName eq '' then _METHOD_="Formula";
42439      else _METHOD_="Computed";
MPRINT(EM_DIAGRAM):   else _METHOD_="Computed";
42440      if Formula = '' then Formula = "User Code";
MPRINT(EM_DIAGRAM):   if Formula = '' then Formula = "User Code";
42441      end;
MPRINT(EM_DIAGRAM):   end;
42442      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
42443      drop inputName LEVEL TYPE _MetaFlag;
MPRINT(EM_DIAGRAM):   drop inputName LEVEL TYPE _MetaFlag;
42444      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK.TRANS_CLASSSTATS.
NOTE: There were 9 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_CLASSSTATS has 0 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
42445      /*Merge Statistics for Class Input Vars */
42446      proc sort data=WORK.TRANS_SCOREINPUTS(drop=TYPE LEVEL) out=_temp nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_SCOREINPUTS(drop=TYPE LEVEL) out=_temp nodupkey;
42447      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
42448      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.TRANS_SCOREINPUTS.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP has 9 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
42449      data WORK.TRANS_CLASSSTATS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_CLASSSTATS;
42450      merge WORK.TRANS_CLASSSTATS(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_CLASSSTATS(in=_a) _temp(in=_b);
42451      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
42452      if _a and _b then do;
MPRINT(EM_DIAGRAM):   if _a and _b then do;
42453      SOURCE='Input';
MPRINT(EM_DIAGRAM):   SOURCE='Input';
42454      _METHOD_="Original";
MPRINT(EM_DIAGRAM):   _METHOD_="Original";
42455      end;
MPRINT(EM_DIAGRAM):   end;
42456      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
42457      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK.TRANS_CLASSSTATS.
NOTE: There were 9 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_CLASSSTATS has 0 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
42458      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
42459      * Trans: Combine Information and Statistics for Interval Variables;
MPRINT(EM_DIAGRAM):   * Trans: Combine Information and Statistics for Interval Variables;
42460      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42461      proc sort data=WORK.TRANS_OUTPUTVARS out=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_OUTPUTVARS out=_temp;
42462      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
42463      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.TRANS_OUTPUTVARS.
NOTE: The data set WORK._TEMP has 9 observations and 13 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
42464      proc sort data=WORK.TRANS_VARSTATS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_VARSTATS;
42465      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
42466      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK.TRANS_VARSTATS.
NOTE: The data set WORK.TRANS_VARSTATS has 18 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *Merge Statistics for Output Vars;
42467      *Merge Statistics for Output Vars;
42468      data WORK.TRANS_VARSTATS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_VARSTATS;
42469      length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
MPRINT(EM_DIAGRAM):   length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
42470      merge WORK.TRANS_VARSTATS(in=_a) _temp(in=_b keep=NAME Formula InputName _MetaFlag LEVEL TYPE LABEL);
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_VARSTATS(in=_a) _temp(in=_b keep=NAME Formula InputName _MetaFlag LEVEL TYPE LABEL);
42471      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
42472      if _a and _b then do;
MPRINT(EM_DIAGRAM):   if _a and _b then do;
42473      SOURCE='Output';
MPRINT(EM_DIAGRAM):   SOURCE='Output';
42474      if _MetaFlag = 1 then _METHOD_="Meta";
MPRINT(EM_DIAGRAM):   if _MetaFlag = 1 then _METHOD_="Meta";
42475      else if Formula eq 'Interaction' then _METHOD_="Computed";
MPRINT(EM_DIAGRAM):   else if Formula eq 'Interaction' then _METHOD_="Computed";
42476      else if inputName eq '' then _METHOD_="Formula";
MPRINT(EM_DIAGRAM):   else if inputName eq '' then _METHOD_="Formula";
42477      else _METHOD_="Computed";
MPRINT(EM_DIAGRAM):   else _METHOD_="Computed";
42478      if Formula = '' then Formula = "Mixture of variables";
MPRINT(EM_DIAGRAM):   if Formula = '' then Formula = "Mixture of variables";
42479      end;
MPRINT(EM_DIAGRAM):   end;
42480      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
42481      drop inputName LEVEL TYPE _MetaFlag;
MPRINT(EM_DIAGRAM):   drop inputName LEVEL TYPE _MetaFlag;
42482      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK.TRANS_VARSTATS.
NOTE: There were 9 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_VARSTATS has 18 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *Merge Statistics for Input Vars;
42483      *Merge Statistics for Input Vars;
42484      proc sort data=WORK.TRANS_SCOREINPUTS(drop=TYPE LEVEL) out=_temp nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_SCOREINPUTS(drop=TYPE LEVEL) out=_temp nodupkey;
42485      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
42486      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.TRANS_SCOREINPUTS.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP has 9 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
42487      data WORK.TRANS_VARSTATS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_VARSTATS;
42488      merge WORK.TRANS_VARSTATS(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_VARSTATS(in=_a) _temp(in=_b);
42489      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
42490      if _a and _b then do;
MPRINT(EM_DIAGRAM):   if _a and _b then do;
42491      SOURCE='Input';
MPRINT(EM_DIAGRAM):   SOURCE='Input';
42492      _METHOD_="Original";
MPRINT(EM_DIAGRAM):   _METHOD_="Original";
42493      end;
MPRINT(EM_DIAGRAM):   end;
42494      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
42495      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK.TRANS_VARSTATS.
NOTE: There were 9 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_VARSTATS has 18 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
42496      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
42497      * Trans: Combine statistics for class and interval variables;
MPRINT(EM_DIAGRAM):   * Trans: Combine statistics for class and interval variables;
42498      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42499      data EMWS1.Trans_STATISTICS;
MPRINT(EM_DIAGRAM):   data EMWS1.Trans_STATISTICS;
42500      length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
MPRINT(EM_DIAGRAM):   length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
42501      label SOURCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_source_vlabel,  NOQUOTE))" _METHOD_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_method_vlabel,  NOQUOTE))" NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))" FORMULA =
42502         "%sysfunc(sasmsg(sashelp.dmine, rpt_formula_vlabel,   NOQUOTE))" NLEVEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))" N = "%sysfunc(sasmsg(sashelp.dmine, rpt_nonmiss_vlabel, NOQUOTE))" NMISS =
42503         "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))" MIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))" MAX = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))" MEAN =
42504         "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))" STD = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))" SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))" KURTOSIS =
42505         "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SOURCE = "Source" _METHOD_ = "Method" NAME = "Variable Name" FORMULA = "Formula" NLEVEL = "Number of Levels" N = "Non Missing" NMISS = "Missing" MIN = "Minimum" MAX = "Maximum" MEAN = "Mean" STD = "Standard Deviation" SKEWNESS
= "Skewness" KURTOSIS = "Kurtosis" LABEL = "Label";
42506      set
42507      WORK.TRANS_CLASSSTATS
42508      WORK.TRANS_VARSTATS
42509      ;
MPRINT(EM_DIAGRAM):   set WORK.TRANS_CLASSSTATS WORK.TRANS_VARSTATS ;
42510      drop UNAME;
MPRINT(EM_DIAGRAM):   drop UNAME;
42511      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK.TRANS_CLASSSTATS.
NOTE: There were 18 observations read from the data set WORK.TRANS_VARSTATS.
NOTE: The data set EMWS1.TRANS_STATISTICS has 18 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
42512      proc sort data=EMWS1.Trans_STATISTICS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Trans_STATISTICS;
42513      by SOURCE _METHOD_ NAME;
MPRINT(EM_DIAGRAM):   by SOURCE _METHOD_ NAME;
42514      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set EMWS1.TRANS_STATISTICS.
NOTE: The data set EMWS1.TRANS_STATISTICS has 18 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
42515      proc sort data = EMWS1.Trans_STATISTICS NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Trans_STATISTICS NOTHREADS;
42516      by SOURCE NAME;
MPRINT(EM_DIAGRAM):   by SOURCE NAME;
42517      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set EMWS1.TRANS_STATISTICS.
NOTE: The data set EMWS1.TRANS_STATISTICS has 18 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
42518      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
42519      proc print data = EMWS1.Trans_STATISTICS(obs=500) noobs label;
MPRINT(EM_DIAGRAM):   proc print data = EMWS1.Trans_STATISTICS(obs=500) noobs label;
42520      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_intervalinputStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Summary Statistics for Input Interval Variables";
42521      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   var Name NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS;
MPRINT(EM_DIAGRAM):   where SOURCE eq 'INPUT' and mean ne .;
MPRINT(EM_DIAGRAM):   run;
42522      var Name NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS;
42523      where SOURCE eq 'INPUT' and mean ne .;
42524      run;
 
NOTE: No observations were selected from data set EMWS1.TRANS_STATISTICS.
NOTE: There were 0 observations read from the data set EMWS1.TRANS_STATISTICS.
      WHERE (SOURCE='INPUT') and (mean not = .);
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
42525      proc print data = EMWS1.Trans_STATISTICS(obs=500) noobs label;
MPRINT(EM_DIAGRAM):   proc print data = EMWS1.Trans_STATISTICS(obs=500) noobs label;
42526      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_intervaloutputStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Summary Statistics for Output Interval Variables";
42527      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   var Name _METHOD_ NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS;
MPRINT(EM_DIAGRAM):   where SOURCE eq 'OUTPUT' and mean ne .;
MPRINT(EM_DIAGRAM):   run;
42528      var Name _METHOD_ NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS;
42529      where SOURCE eq 'OUTPUT' and mean ne .;
42530      run;
 
NOTE: No observations were selected from data set EMWS1.TRANS_STATISTICS.
NOTE: There were 0 observations read from the data set EMWS1.TRANS_STATISTICS.
      WHERE (SOURCE='OUTPUT') and (mean not = .);
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
42531      proc print data = EMWS1.Trans_STATISTICS(obs=500) noobs label;
MPRINT(EM_DIAGRAM):   proc print data = EMWS1.Trans_STATISTICS(obs=500) noobs label;
42532      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_classinputStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Summary Statistics for Input Class Variables";
42533      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   var Name NLEVEL NMISS;
MPRINT(EM_DIAGRAM):   where SOURCE eq 'INPUT' and nlevel ne .;
MPRINT(EM_DIAGRAM):   run;
42534      var Name NLEVEL NMISS;
42535      where SOURCE eq 'INPUT' and nlevel ne .;
42536      run;
 
NOTE: No observations were selected from data set EMWS1.TRANS_STATISTICS.
NOTE: There were 0 observations read from the data set EMWS1.TRANS_STATISTICS.
      WHERE (SOURCE='INPUT') and (nlevel not = .);
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
42537      proc print data = EMWS1.Trans_STATISTICS(obs=500) noobs label;
MPRINT(EM_DIAGRAM):   proc print data = EMWS1.Trans_STATISTICS(obs=500) noobs label;
42538      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_classoutputStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Summary Statistics for Output Class Variables";
42539      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   var Name _METHOD_ NLEVEL NMISS;
MPRINT(EM_DIAGRAM):   where SOURCE eq 'OUTPUT' and nlevel ne .;
MPRINT(EM_DIAGRAM):   run;
42540      var Name _METHOD_ NLEVEL NMISS;
42541      where SOURCE eq 'OUTPUT' and nlevel ne .;
42542      run;
 
NOTE: No observations were selected from data set EMWS1.TRANS_STATISTICS.
NOTE: There were 0 observations read from the data set EMWS1.TRANS_STATISTICS.
      WHERE (SOURCE='OUTPUT') and (nlevel not = .);
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
42543      title9;
MPRINT(EM_DIAGRAM):   title9;
42544      title10;
MPRINT(EM_DIAGRAM):   title10;
42545      data EMWS1.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):    data EMWS1.Trans_EMSCOREVAR;
42546      length Name $32 formula $300 file $200;
MPRINT(EM_DIAGRAM):   length Name $32 formula $300 file $200;
42547      keep NAME Formula file;
MPRINT(EM_DIAGRAM):   keep NAME Formula file;
42548      set EMWS1.Trans_STATISTICS;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_STATISTICS;
42549      where SOURCE='Output';
MPRINT(EM_DIAGRAM):   where SOURCE='Output';
42550      select( _METHOD_);
MPRINT(EM_DIAGRAM):   select( _METHOD_);
42551      when('Computed') do;
MPRINT(EM_DIAGRAM):   when('Computed') do;
42552      file="TRANSFORMCODE\"!!strip(NAME)!!'.sas';
MPRINT(EM_DIAGRAM):   file="TRANSFORMCODE\"!!strip(NAME)!!'.sas';
42553      formula = '';
MPRINT(EM_DIAGRAM):   formula = '';
42554      end;
MPRINT(EM_DIAGRAM):   end;
42555      when('Formula') do;
MPRINT(EM_DIAGRAM):   when('Formula') do;
42556      if Formula eq 'Mixture of variables' then do;
MPRINT(EM_DIAGRAM):   if Formula eq 'Mixture of variables' then do;
42557      file= "EDITORCODE.sas";
MPRINT(EM_DIAGRAM):   file= "EDITORCODE.sas";
42558      formula = '';
MPRINT(EM_DIAGRAM):   formula = '';
42559      end;
MPRINT(EM_DIAGRAM):   end;
42560      if Formula = 'User Code' then do;
MPRINT(EM_DIAGRAM):   if Formula = 'User Code' then do;
42561      file= "EDITORCODE.sas";
MPRINT(EM_DIAGRAM):   file= "EDITORCODE.sas";
42562      formula = '';
MPRINT(EM_DIAGRAM):   formula = '';
42563      end;
MPRINT(EM_DIAGRAM):   end;
42564      end;
MPRINT(EM_DIAGRAM):   end;
42565      otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
42566      end;
MPRINT(EM_DIAGRAM):   end;
42567      output;
MPRINT(EM_DIAGRAM):   output;
42568      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.TRANS_STATISTICS.
      WHERE SOURCE='Output';
NOTE: The data set EMWS1.TRANS_EMSCOREVAR has 9 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
